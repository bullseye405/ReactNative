{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":239,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,31,6],[70,14,31,10,"point1"],[70,20,31,16],[70,23,31,19],[71,0,31,21,"longitude"],[71,12,31,21,"longitude"],[71,21,31,30],[71,23,31,32,"cood1"],[71,28,31,37],[71,29,31,38,"longitude"],[71,38,31,19],[72,0,31,49,"latitude"],[72,12,31,49,"latitude"],[72,20,31,57],[72,22,31,59,"cood1"],[72,27,31,64],[72,28,31,65,"latitude"],[73,0,31,19],[73,11,31,6],[74,0,32,6],[74,14,32,10,"point2"],[74,20,32,16],[74,23,32,19],[75,0,32,21,"longitude"],[75,12,32,21,"longitude"],[75,21,32,30],[75,23,32,32,"cood2"],[75,28,32,37],[75,29,32,38,"longitude"],[75,38,32,19],[76,0,32,49,"latitude"],[76,12,32,49,"latitude"],[76,20,32,57],[76,22,32,59,"cood2"],[76,27,32,64],[76,28,32,65,"latitude"],[77,0,32,19],[77,11,32,6],[78,0,34,6],[78,14,34,10,"distance"],[78,22,34,18],[78,25,34,21,"geolib"],[78,31,34,27],[78,32,34,28,"getDistance"],[78,43,34,21],[78,44,34,40,"point1"],[78,50,34,21],[78,52,34,48,"point2"],[78,58,34,21],[78,60,34,56],[78,64,34,21],[78,65,34,6],[79,0,35,6],[79,14,35,10,"preciseDistance"],[79,29,35,25],[79,32,35,28,"geolib"],[79,38,35,34],[79,39,35,35,"getPreciseDistance"],[79,57,35,28],[79,58,35,54,"point2"],[79,64,35,28],[79,66,35,62,"point1"],[79,72,35,28],[79,74,35,70],[79,79,35,28],[79,80,35,6],[80,0,36,6,"console"],[80,10,36,6,"console"],[80,17,36,13],[80,18,36,14,"table"],[80,23,36,6],[80,24,36,20],[81,0,36,22,"point1"],[81,12,36,22,"point1"],[81,18,36,28],[81,20,36,22,"point1"],[81,26,36,20],[82,0,36,30,"point2"],[82,12,36,30,"point2"],[82,18,36,36],[82,20,36,30,"point2"],[82,26,36,20],[83,0,36,38,"distance"],[83,12,36,38,"distance"],[83,20,36,46],[83,22,36,38,"distance"],[83,30,36,20],[84,0,36,48,"preciseDistance"],[84,12,36,48,"preciseDistance"],[84,27,36,63],[84,29,36,48,"preciseDistance"],[85,0,36,20],[85,11,36,6],[87,0,37,6],[87,16,37,11,"setState"],[87,24,37,6],[87,25,37,20],[88,0,37,22,"distance"],[88,12,37,22,"distance"],[88,20,37,30],[88,22,37,22,"distance"],[89,0,37,20],[89,11,37,6],[90,0,38,5],[90,9,27,4],[90,15,38,11],[91,0,39,6,"Alert"],[91,29,39,12,"alert"],[91,34,39,6],[91,35,39,18],[91,68,39,6],[92,0,40,5],[93,0,41,3],[93,7],[95,12,43,2,"getArea"],[95,19],[95,22,43,12],[95,34,43,18],[96,0,44,4],[96,12,44,8,"myArr"],[96,17,44,13],[96,20,44,16],[96,22,44,4],[97,0,45,4],[97,14,45,9,"state"],[97,19,45,4],[97,20,45,15,"locations"],[97,29,45,4],[97,30,45,25,"length"],[97,36,45,4],[97,39,45,34],[97,40,45,4],[97,44,46,6],[97,50,46,11,"state"],[97,55,46,6],[97,56,46,17,"locations"],[97,65,46,6],[97,66,46,27,"map"],[97,69,46,6],[97,70,46,31],[97,80,46,31,"loc"],[97,83,46,34],[97,85,46,38],[98,0,47,8,"myArr"],[98,10,47,8,"myArr"],[98,15,47,13],[98,16,47,14,"push"],[98,20,47,8],[98,21,47,19],[98,22,47,20,"loc"],[98,25,47,23],[98,26,47,24,"coords"],[98,32,47,20],[98,33,47,31,"latitude"],[98,41,47,19],[98,43,47,41,"loc"],[98,46,47,44],[98,47,47,45,"coords"],[98,53,47,41],[98,54,47,52,"longitude"],[98,63,47,19],[98,64,47,8],[99,0,48,7],[99,9,46,6],[99,10,45,4],[100,0,49,4,"console"],[100,8,49,4,"console"],[100,15,49,11],[100,16,49,12,"log"],[100,19,49,4],[100,20,49,16],[100,29,49,4],[100,31,49,27,"myArr"],[100,36,49,4],[102,0,50,4],[102,12,50,8,"myArr"],[102,17,50,13],[102,18,50,14,"length"],[102,24,50,8],[102,27,50,23],[102,28,50,4],[102,30,50,26],[103,0,51,6],[103,14,51,10,"data"],[103,18,51,14],[103,21,51,17,"geolib"],[103,27,51,23],[103,28,51,24,"getAreaOfPolygon"],[103,44,51,17],[103,45,51,41,"myArr"],[103,50,51,17],[103,51,51,6],[105,0,53,6],[105,16,53,11,"setState"],[105,24,53,6],[105,25,53,20],[106,0,53,22,"area"],[106,12,53,22,"area"],[106,16,53,26],[106,18,53,28,"data"],[107,0,53,20],[107,11,53,6],[108,0,54,5],[109,0,55,3],[109,7],[116,31,56,11],[117,0,56,11],[119,0,57,4],[119,15,58,6],[119,44,58,7],[119,61,58,6],[120,0,58,12],[120,10,58,12],[120,15,58,17],[120,17,58,19,"styles"],[120,23,58,25],[120,24,58,26,"container"],[120,33,58,6],[121,0,58,6],[122,0,58,6],[123,0,58,6],[124,0,58,6],[125,0,58,6],[125,11,59,8],[125,40,59,9],[125,69,59,8],[126,0,59,26],[126,10,59,26],[126,17,59,33],[126,19,59,35],[126,24,59,40,"findCoordinates"],[126,39,59,8],[127,0,59,8],[128,0,59,8],[129,0,59,8],[130,0,59,8],[131,0,59,8],[131,11,60,10],[131,40,60,11],[131,57,60,10],[132,0,60,16],[132,10,60,16],[132,15,60,21],[132,17,60,23,"styles"],[132,23,60,29],[132,24,60,30,"welcome"],[132,31,60,10],[133,0,60,10],[134,0,60,10],[135,0,60,10],[136,0,60,10],[137,0,60,10],[137,29,59,8],[137,30,58,6],[137,32,63,8],[137,61,63,9],[137,78,63,8],[138,0,64,10],[138,10,64,10],[138,15,64,15],[138,17,64,17],[139,0,64,19,"display"],[139,12,64,19,"display"],[139,19,64,26],[139,21,64,28],[139,27,64,17],[140,0,64,36,"flexDirection"],[140,12,64,36,"flexDirection"],[140,25,64,49],[140,27,64,51],[140,32,64,17],[141,0,64,58,"flexWrap"],[141,12,64,58,"flexWrap"],[141,20,64,66],[141,22,64,68],[142,0,64,17],[142,11,63,8],[143,0,63,8],[144,0,63,8],[145,0,63,8],[146,0,63,8],[147,0,63,8],[147,11,66,11],[147,16,66,16,"state"],[147,21,66,11],[147,22,66,22,"locations"],[147,31,66,11],[147,32,66,32,"length"],[147,38,66,11],[147,41,66,41],[147,42,66,11],[147,46,67,12],[147,51,67,17,"state"],[147,56,67,12],[147,57,67,23,"locations"],[147,66,67,12],[147,67,67,33,"map"],[147,70,67,12],[147,71,67,37],[147,81,67,38,"loc"],[147,84,67,37],[147,86,67,43,"key"],[147,89,67,37],[147,91,67,51],[148,0,68,14],[148,17,69,16],[148,46,69,17],[148,63,69,16],[149,0,69,22],[149,12,69,22],[149,17,69,27],[149,19,69,29],[150,0,69,31,"padding"],[150,14,69,31,"padding"],[150,21,69,38],[150,23,69,40],[151,0,69,29],[151,13,69,16],[152,0,69,46],[152,12,69,46],[152,15,69,49],[152,17,69,51,"key"],[152,20,69,16],[153,0,69,16],[154,0,69,16],[155,0,69,16],[156,0,69,16],[157,0,69,16],[157,13,70,18],[157,42,70,19],[157,59,70,18],[158,0,70,18],[159,0,70,18],[160,0,70,18],[161,0,70,18],[162,0,70,18],[162,13,70,25,"loc"],[162,16,70,28],[162,17,70,29,"coords"],[162,23,70,25],[162,24,70,36,"latitude"],[162,32,70,18],[162,33,69,16],[162,35,71,18],[162,64,71,19],[162,81,71,18],[163,0,71,18],[164,0,71,18],[165,0,71,18],[166,0,71,18],[167,0,71,18],[167,13,71,25,"loc"],[167,16,71,28],[167,17,71,29,"coords"],[167,23,71,25],[167,24,71,36,"longitude"],[167,33,71,18],[167,34,69,16],[167,35,68,14],[168,0,74,13],[168,9,67,12],[168,10,63,8],[168,11,58,6],[168,13,76,8],[168,42,76,9],[168,71,76,8],[169,0,76,26],[169,10,76,26],[169,17,76,33],[169,19,76,35],[169,24,76,40,"getDistace"],[169,34,76,8],[170,0,76,8],[171,0,76,8],[172,0,76,8],[173,0,76,8],[174,0,76,8],[174,11,77,10],[174,40,77,11],[174,57,77,10],[175,0,77,16],[175,10,77,16],[175,15,77,21],[175,17,77,23,"styles"],[175,23,77,29],[175,24,77,30,"welcome"],[175,31,77,10],[176,0,77,10],[177,0,77,10],[178,0,77,10],[179,0,77,10],[180,0,77,10],[180,26,76,8],[180,28,78,11],[180,33,78,16,"state"],[180,38,78,11],[180,39,78,22,"distance"],[180,47,78,11],[180,51,78,34],[180,80,78,35],[180,97,78,34],[181,0,78,34],[182,0,78,34],[183,0,78,34],[184,0,78,34],[185,0,78,34],[185,11,78,41],[185,16,78,46,"state"],[185,21,78,41],[185,22,78,52,"distance"],[185,30,78,34],[185,43,76,8],[185,44,58,6],[185,46,80,8],[185,75,80,9],[185,104,80,8],[186,0,80,26],[186,10,80,26],[186,17,80,33],[186,19,80,35],[186,24,80,40,"getArea"],[186,31,80,8],[187,0,80,8],[188,0,80,8],[189,0,80,8],[190,0,80,8],[191,0,80,8],[191,11,81,10],[191,40,81,11],[191,57,81,10],[192,0,81,16],[192,10,81,16],[192,15,81,21],[192,17,81,23,"styles"],[192,23,81,29],[192,24,81,30,"welcome"],[192,31,81,10],[193,0,81,10],[194,0,81,10],[195,0,81,10],[196,0,81,10],[197,0,81,10],[197,22,80,8],[197,24,82,11],[197,29,82,16,"state"],[197,34,82,11],[197,35,82,22,"area"],[197,39,82,11],[197,43,82,30],[197,72,82,31],[197,89,82,30],[198,0,82,30],[199,0,82,30],[200,0,82,30],[201,0,82,30],[202,0,82,30],[202,11,82,37],[202,16,82,42,"state"],[202,21,82,37],[202,22,82,48,"area"],[202,26,82,30],[202,44,80,8],[202,45,58,6],[202,47,85,8],[202,76,85,9],[202,105,85,8],[203,0,86,10],[203,10,86,10],[203,17,86,17],[203,19,86,19],[203,38,86,25],[204,0,87,12],[204,12,87,12],[204,18,87,16],[204,19,87,17,"setState"],[204,27,87,12],[204,28,87,26],[205,0,87,28,"locations"],[205,14,87,28,"locations"],[205,23,87,37],[205,25,87,39],[206,0,87,26],[206,13,87,12],[207,0,88,11],[207,11,85,8],[208,0,85,8],[209,0,85,8],[210,0,85,8],[211,0,85,8],[212,0,85,8],[212,11,90,10],[212,40,90,11],[212,57,90,10],[213,0,90,16],[213,10,90,16],[213,15,90,21],[213,17,90,23,"styles"],[213,23,90,29],[213,24,90,30,"welcome"],[213,31,90,10],[214,0,90,10],[215,0,90,10],[216,0,90,10],[217,0,90,10],[218,0,90,10],[218,23,85,8],[218,24,58,6],[218,25,57,4],[219,0,94,3],[222,4,5,33,"React"],[222,19,5,39,"Component"],[222,28],[226,0,97,0],[226,6,97,4,"styles"],[226,12,97,10],[226,15,97,13,"StyleSheet"],[226,39,97,24,"create"],[226,45,97,13],[226,46,97,31],[227,0,98,2,"container"],[227,4,98,2,"container"],[227,13,98,11],[227,15,98,13],[228,0,99,4,"flex"],[228,6,99,4,"flex"],[228,10,99,8],[228,12,99,10],[228,13,98,13],[229,0,100,4,"justifyContent"],[229,6,100,4,"justifyContent"],[229,20,100,18],[229,22,100,20],[229,30,98,13],[230,0,101,4,"alignItems"],[230,6,101,4,"alignItems"],[230,16,101,14],[230,18,101,16],[230,26,98,13],[231,0,102,4,"backgroundColor"],[231,6,102,4,"backgroundColor"],[231,21,102,19],[231,23,102,21],[232,0,98,13],[232,5,97,31],[233,0,104,2,"welcome"],[233,4,104,2,"welcome"],[233,11,104,9],[233,13,104,11],[234,0,105,4,"fontSize"],[234,6,105,4,"fontSize"],[234,14,105,12],[234,16,105,14],[234,18,104,11],[235,0,106,4,"textAlign"],[235,6,106,4,"textAlign"],[235,15,106,13],[235,17,106,15],[235,25,104,11],[236,0,107,4,"margin"],[236,6,107,4,"margin"],[236,12,107,10],[236,14,107,12],[237,0,104,11],[238,0,97,31],[238,3,97,13],[238,4,97,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJe;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;mBCY;WDE;GPM;CDC"}},"type":"js/module"}]}