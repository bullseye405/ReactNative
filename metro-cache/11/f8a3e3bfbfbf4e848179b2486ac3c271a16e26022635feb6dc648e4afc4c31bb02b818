{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null,\n        initialPosition: \"unknown\",\n        lastPosition: []\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = position.coords.latitude + position.coords.longitude;\n\n          _this.setState({\n            lastPosition: [].concat((0, _toConsumableArray2.default)(_this.state.lastPosition), [lastPosition])\n          });\n        });\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":256,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[49,22,6,10],[50,0,10,4,"initialPosition"],[50,8,10,4,"initialPosition"],[50,23,10,19],[50,25,10,21],[50,34,6,10],[51,0,11,4,"lastPosition"],[51,8,11,4,"lastPosition"],[51,20,11,16],[51,22,11,18],[52,0,6,10],[52,7],[53,12,14,2,"watchID"],[53,19],[53,22,14,12],[53,26],[55,12,15,2,"componentDidMount"],[55,29],[55,32,15,22],[55,44,15,28],[56,0,28,4],[56,14,28,9,"watchID"],[56,21,28,4],[56,24,28,19,"navigator"],[56,33,28,28],[56,34,28,29,"geolocation"],[56,45,28,19],[56,46,28,41,"watchPosition"],[56,59,28,19],[56,60,28,55],[56,70,28,55,"position"],[56,78,28,63],[56,80,28,67],[57,0,30,6],[57,14,30,10,"lastPosition"],[57,26,30,22],[57,29,30,25,"position"],[57,37,30,33],[57,38,30,34,"coords"],[57,44,30,25],[57,45,30,41,"latitude"],[57,53,30,25],[57,56,30,52,"position"],[57,64,30,60],[57,65,30,61,"coords"],[57,71,30,52],[57,72,30,68,"longitude"],[57,81,30,6],[59,0,32,6],[59,16,32,11,"setState"],[59,24,32,6],[59,25,32,20],[60,0,33,8,"lastPosition"],[60,12,33,8,"lastPosition"],[60,24,33,20],[60,69,33,26],[60,75,33,31,"state"],[60,80,33,26],[60,81,33,37,"lastPosition"],[60,93,33,20],[60,97,33,51,"lastPosition"],[60,109,33,20],[61,0,32,20],[61,11,32,6],[62,0,35,5],[62,9,28,19],[62,10,28,4],[63,0,36,3],[63,7],[65,12,37,2,"componentWillUnmount"],[65,32],[65,35,37,25],[65,47,37,31],[66,0,38,4,"navigator"],[66,8,38,4,"navigator"],[66,17,38,13],[66,18,38,14,"geolocation"],[66,29,38,4],[66,30,38,26,"clearWatch"],[66,40,38,4],[66,41,38,37],[66,47,38,42,"watchID"],[66,54,38,4],[67,0,39,3],[67,7],[69,12,41,2,"findCoordinates"],[69,27],[69,30,41,20],[69,42,41,26],[70,0,42,4,"navigator"],[70,8,42,4,"navigator"],[70,17,42,13],[70,18,42,14,"geolocation"],[70,29,42,4],[70,30,42,26,"getCurrentPosition"],[70,48,42,4],[70,49,43,6],[70,59,43,6,"pos"],[70,62,43,9],[70,64,43,13],[71,0,44,8],[71,16,44,13,"setState"],[71,24,44,8],[71,25,44,22],[72,0,45,10,"locations"],[72,12,45,10,"locations"],[72,21,45,19],[72,66,45,25],[72,72,45,30,"state"],[72,77,45,25],[72,78,45,36,"locations"],[72,87,45,19],[72,91,45,47,"pos"],[72,94,45,19],[73,0,44,22],[73,11,44,8],[74,0,47,7],[74,9,42,4],[74,11,48,6],[74,21,48,6,"error"],[74,26,48,11],[75,0,48,11],[75,17,48,15,"Alert"],[75,36,48,21,"alert"],[75,41,48,15],[75,42,48,27,"error"],[75,47,48,32],[75,48,48,33,"message"],[75,55,48,15],[75,56,48,11],[76,0,48,11],[76,9,42,4],[76,11,49,6],[77,0,50,8,"enableHighAccuracy"],[77,10,50,8,"enableHighAccuracy"],[77,28,50,26],[77,30,50,28],[77,34,49,6],[78,0,51,8,"timeout"],[78,10,51,8,"timeout"],[78,17,51,15],[78,19,51,17],[78,24,49,6],[79,0,52,8,"maximumAge"],[79,10,52,8,"maximumAge"],[79,20,52,18],[79,22,52,20],[80,0,49,6],[80,9,42,4],[81,0,55,3],[81,7],[83,12,57,2,"getDistace"],[83,22],[83,25,57,15],[83,37,57,21],[84,0,58,4],[84,12,58,8],[84,18,58,13,"state"],[84,23,58,8],[84,24,58,19,"locations"],[84,33,58,8],[84,34,58,29,"length"],[84,40,58,8],[84,44,58,39],[84,45,58,4],[84,47,58,42],[85,0,59,6],[85,14,59,10,"cood1"],[85,19,59,15],[85,22,59,18],[85,28,59,23,"state"],[85,33,59,18],[85,34,59,29,"locations"],[85,43,59,18],[85,44,59,39],[85,45,59,18],[85,47,59,42,"coords"],[85,53,59,6],[86,0,60,6],[86,14,60,10,"cood2"],[86,19,60,15],[86,22,60,18],[86,28,60,23,"state"],[86,33,60,18],[86,34,60,29,"locations"],[86,43,60,18],[86,44,60,39],[86,45,60,18],[86,47,60,42,"coords"],[86,53,60,6],[87,0,62,6],[87,14,62,10,"point1"],[87,20,62,16],[87,23,62,19],[88,0,63,8,"longitude"],[88,12,63,8,"longitude"],[88,21,63,17],[88,23,63,19,"cood1"],[88,28,63,24],[88,29,63,25,"longitude"],[88,38,62,19],[89,0,64,8,"latitude"],[89,12,64,8,"latitude"],[89,20,64,16],[89,22,64,18,"cood1"],[89,27,64,23],[89,28,64,24,"latitude"],[90,0,62,19],[90,11,62,6],[91,0,66,6],[91,14,66,10,"point2"],[91,20,66,16],[91,23,66,19],[92,0,67,8,"longitude"],[92,12,67,8,"longitude"],[92,21,67,17],[92,23,67,19,"cood2"],[92,28,67,24],[92,29,67,25,"longitude"],[92,38,66,19],[93,0,68,8,"latitude"],[93,12,68,8,"latitude"],[93,20,68,16],[93,22,68,18,"cood2"],[93,27,68,23],[93,28,68,24,"latitude"],[94,0,66,19],[94,11,66,6],[95,0,71,6],[95,14,71,10,"distance"],[95,22,71,18],[95,25,71,21,"geolib"],[95,31,71,27],[95,32,71,28,"getDistance"],[95,43,71,21],[95,44,71,40,"point1"],[95,50,71,21],[95,52,71,48,"point2"],[95,58,71,21],[95,60,71,56],[95,64,71,21],[95,65,71,6],[96,0,72,6],[96,14,72,10,"preciseDistance"],[96,29,72,25],[96,32,72,28,"geolib"],[96,38,72,34],[96,39,72,35,"getPreciseDistance"],[96,57,72,28],[96,58,72,54,"point2"],[96,64,72,28],[96,66,72,62,"point1"],[96,72,72,28],[96,74,72,70],[96,79,72,28],[96,80,72,6],[97,0,73,6,"console"],[97,10,73,6,"console"],[97,17,73,13],[97,18,73,14,"table"],[97,23,73,6],[97,24,73,20],[98,0,74,8,"point1"],[98,12,74,8,"point1"],[98,18,74,14],[98,20,74,8,"point1"],[98,26,73,20],[99,0,75,8,"point2"],[99,12,75,8,"point2"],[99,18,75,14],[99,20,75,8,"point2"],[99,26,73,20],[100,0,76,8,"distance"],[100,12,76,8,"distance"],[100,20,76,16],[100,22,76,8,"distance"],[100,30,73,20],[101,0,77,8,"preciseDistance"],[101,12,77,8,"preciseDistance"],[101,27,77,23],[101,29,77,8,"preciseDistance"],[102,0,73,20],[102,11,73,6],[104,0,79,6],[104,16,79,11,"setState"],[104,24,79,6],[104,25,79,20],[105,0,79,22,"distance"],[105,12,79,22,"distance"],[105,20,79,30],[105,22,79,22,"distance"],[106,0,79,20],[106,11,79,6],[107,0,80,5],[107,9,58,4],[107,15,80,11],[108,0,81,6,"Alert"],[108,29,81,12,"alert"],[108,34,81,6],[108,35,81,18],[108,68,81,6],[109,0,82,5],[110,0,83,3],[110,7],[112,12,85,2,"getArea"],[112,19],[112,22,85,12],[112,34,85,18],[113,0,86,4],[113,12,86,8,"myArr"],[113,17,86,13],[113,20,86,16],[113,22,86,4],[114,0,87,4],[114,14,87,9,"state"],[114,19,87,4],[114,20,87,15,"locations"],[114,29,87,4],[114,30,87,25,"length"],[114,36,87,4],[114,39,87,34],[114,40,87,4],[114,44,88,6],[114,50,88,11,"state"],[114,55,88,6],[114,56,88,17,"locations"],[114,65,88,6],[114,66,88,27,"map"],[114,69,88,6],[114,70,88,31],[114,80,88,31,"loc"],[114,83,88,34],[114,85,88,38],[115,0,89,8,"myArr"],[115,10,89,8,"myArr"],[115,15,89,13],[115,16,89,14,"push"],[115,20,89,8],[115,21,89,19],[115,22,89,20,"loc"],[115,25,89,23],[115,26,89,24,"coords"],[115,32,89,20],[115,33,89,31,"latitude"],[115,41,89,19],[115,43,89,41,"loc"],[115,46,89,44],[115,47,89,45,"coords"],[115,53,89,41],[115,54,89,52,"longitude"],[115,63,89,19],[115,64,89,8],[116,0,90,7],[116,9,88,6],[116,10,87,4],[117,0,91,4,"console"],[117,8,91,4,"console"],[117,15,91,11],[117,16,91,12,"log"],[117,19,91,4],[117,20,91,16],[117,29,91,4],[117,31,91,27,"myArr"],[117,36,91,4],[119,0,92,4],[119,12,92,8,"myArr"],[119,17,92,13],[119,18,92,14,"length"],[119,24,92,8],[119,27,92,23],[119,28,92,4],[119,30,92,26],[120,0,93,6],[120,14,93,10,"data"],[120,18,93,14],[120,21,93,17,"geolib"],[120,27,93,23],[120,28,93,24,"getAreaOfPolygon"],[120,44,93,17],[120,45,93,41,"myArr"],[120,50,93,17],[120,51,93,6],[122,0,95,6],[122,16,95,11,"setState"],[122,24,95,6],[122,25,95,20],[123,0,95,22,"area"],[123,12,95,22,"area"],[123,16,95,26],[123,18,95,28,"data"],[124,0,95,20],[124,11,95,6],[125,0,96,5],[126,0,97,3],[126,7],[133,31,98,11],[134,0,98,11],[136,0,99,4],[136,15,100,6],[136,44,100,7],[136,61,100,6],[137,0,100,12],[137,10,100,12],[137,15,100,17],[137,17,100,19,"styles"],[137,23,100,25],[137,24,100,26,"container"],[137,33,100,6],[138,0,100,6],[139,0,100,6],[140,0,100,6],[141,0,100,6],[142,0,100,6],[142,11,101,8],[142,40,101,9],[142,69,101,8],[143,0,101,26],[143,10,101,26],[143,17,101,33],[143,19,101,35],[143,24,101,40,"findCoordinates"],[143,39,101,8],[144,0,101,8],[145,0,101,8],[146,0,101,8],[147,0,101,8],[148,0,101,8],[148,11,102,10],[148,40,102,11],[148,57,102,10],[149,0,102,16],[149,10,102,16],[149,15,102,21],[149,17,102,23,"styles"],[149,23,102,29],[149,24,102,30,"welcome"],[149,31,102,10],[150,0,102,10],[151,0,102,10],[152,0,102,10],[153,0,102,10],[154,0,102,10],[154,29,101,8],[154,30,100,6],[154,32,105,8],[154,61,105,9],[154,78,105,8],[155,0,106,10],[155,10,106,10],[155,15,106,15],[155,17,106,17],[156,0,107,12,"display"],[156,12,107,12,"display"],[156,19,107,19],[156,21,107,21],[156,27,106,17],[157,0,108,12,"flexDirection"],[157,12,108,12,"flexDirection"],[157,25,108,25],[157,27,108,27],[157,32,106,17],[158,0,109,12,"flexWrap"],[158,12,109,12,"flexWrap"],[158,20,109,20],[158,22,109,22],[159,0,106,17],[159,11,105,8],[160,0,105,8],[161,0,105,8],[162,0,105,8],[163,0,105,8],[164,0,105,8],[164,11,112,11],[164,16,112,16,"state"],[164,21,112,11],[164,22,112,22,"locations"],[164,31,112,11],[164,32,112,32,"length"],[164,38,112,11],[164,41,112,41],[164,42,112,11],[164,46,113,12],[164,51,113,17,"state"],[164,56,113,12],[164,57,113,23,"locations"],[164,66,113,12],[164,67,113,33,"map"],[164,70,113,12],[164,71,113,37],[164,81,113,38,"loc"],[164,84,113,37],[164,86,113,43,"key"],[164,89,113,37],[164,91,113,51],[165,0,114,14],[165,17,115,16],[165,46,115,17],[165,63,115,16],[166,0,115,22],[166,12,115,22],[166,17,115,27],[166,19,115,29],[167,0,115,31,"padding"],[167,14,115,31,"padding"],[167,21,115,38],[167,23,115,40],[168,0,115,29],[168,13,115,16],[169,0,115,46],[169,12,115,46],[169,15,115,49],[169,17,115,51,"key"],[169,20,115,16],[170,0,115,16],[171,0,115,16],[172,0,115,16],[173,0,115,16],[174,0,115,16],[174,13,116,18],[174,42,116,19],[174,59,116,18],[175,0,116,18],[176,0,116,18],[177,0,116,18],[178,0,116,18],[179,0,116,18],[179,13,116,25,"loc"],[179,16,116,28],[179,17,116,29,"coords"],[179,23,116,25],[179,24,116,36,"latitude"],[179,32,116,18],[179,33,115,16],[179,35,117,18],[179,64,117,19],[179,81,117,18],[180,0,117,18],[181,0,117,18],[182,0,117,18],[183,0,117,18],[184,0,117,18],[184,13,117,25,"loc"],[184,16,117,28],[184,17,117,29,"coords"],[184,23,117,25],[184,24,117,36,"longitude"],[184,33,117,18],[184,34,115,16],[184,35,114,14],[185,0,120,13],[185,9,113,12],[185,10,105,8],[185,11,100,6],[185,13,122,8],[185,42,122,9],[185,71,122,8],[186,0,122,26],[186,10,122,26],[186,17,122,33],[186,19,122,35],[186,24,122,40,"getDistace"],[186,34,122,8],[187,0,122,8],[188,0,122,8],[189,0,122,8],[190,0,122,8],[191,0,122,8],[191,11,123,10],[191,40,123,11],[191,57,123,10],[192,0,123,16],[192,10,123,16],[192,15,123,21],[192,17,123,23,"styles"],[192,23,123,29],[192,24,123,30,"welcome"],[192,31,123,10],[193,0,123,10],[194,0,123,10],[195,0,123,10],[196,0,123,10],[197,0,123,10],[197,26,122,8],[197,28,124,11],[197,33,124,16,"state"],[197,38,124,11],[197,39,124,22,"distance"],[197,47,124,11],[197,51,124,34],[197,80,124,35],[197,97,124,34],[198,0,124,34],[199,0,124,34],[200,0,124,34],[201,0,124,34],[202,0,124,34],[202,11,124,41],[202,16,124,46,"state"],[202,21,124,41],[202,22,124,52,"distance"],[202,30,124,34],[202,43,122,8],[202,44,100,6],[202,46,126,8],[202,75,126,9],[202,104,126,8],[203,0,126,26],[203,10,126,26],[203,17,126,33],[203,19,126,35],[203,24,126,40,"getArea"],[203,31,126,8],[204,0,126,8],[205,0,126,8],[206,0,126,8],[207,0,126,8],[208,0,126,8],[208,11,127,10],[208,40,127,11],[208,57,127,10],[209,0,127,16],[209,10,127,16],[209,15,127,21],[209,17,127,23,"styles"],[209,23,127,29],[209,24,127,30,"welcome"],[209,31,127,10],[210,0,127,10],[211,0,127,10],[212,0,127,10],[213,0,127,10],[214,0,127,10],[214,22,126,8],[214,24,128,11],[214,29,128,16,"state"],[214,34,128,11],[214,35,128,22,"area"],[214,39,128,11],[214,43,128,30],[214,72,128,31],[214,89,128,30],[215,0,128,30],[216,0,128,30],[217,0,128,30],[218,0,128,30],[219,0,128,30],[219,11,128,37],[219,16,128,42,"state"],[219,21,128,37],[219,22,128,48,"area"],[219,26,128,30],[219,44,126,8],[219,45,100,6],[219,47,131,8],[219,76,131,9],[219,105,131,8],[220,0,132,10],[220,10,132,10],[220,17,132,17],[220,19,132,19],[220,38,132,25],[221,0,133,12],[221,12,133,12],[221,18,133,16],[221,19,133,17,"setState"],[221,27,133,12],[221,28,133,26],[222,0,133,28,"locations"],[222,14,133,28,"locations"],[222,23,133,37],[222,25,133,39],[223,0,133,26],[223,13,133,12],[224,0,134,11],[224,11,131,8],[225,0,131,8],[226,0,131,8],[227,0,131,8],[228,0,131,8],[229,0,131,8],[229,11,136,10],[229,40,136,11],[229,57,136,10],[230,0,136,16],[230,10,136,16],[230,15,136,21],[230,17,136,23,"styles"],[230,23,136,29],[230,24,136,30,"welcome"],[230,31,136,10],[231,0,136,10],[232,0,136,10],[233,0,136,10],[234,0,136,10],[235,0,136,10],[235,23,131,8],[235,24,100,6],[235,25,99,4],[236,0,140,3],[239,4,5,33,"React"],[239,19,5,39,"Component"],[239,28],[243,0,143,0],[243,6,143,4,"styles"],[243,12,143,10],[243,15,143,13,"StyleSheet"],[243,39,143,24,"create"],[243,45,143,13],[243,46,143,31],[244,0,144,2,"container"],[244,4,144,2,"container"],[244,13,144,11],[244,15,144,13],[245,0,145,4,"flex"],[245,6,145,4,"flex"],[245,10,145,8],[245,12,145,10],[245,13,144,13],[246,0,146,4,"justifyContent"],[246,6,146,4,"justifyContent"],[246,20,146,18],[246,22,146,20],[246,30,144,13],[247,0,147,4,"alignItems"],[247,6,147,4,"alignItems"],[247,16,147,14],[247,18,147,16],[247,26,144,13],[248,0,148,4,"backgroundColor"],[248,6,148,4,"backgroundColor"],[248,21,148,19],[248,23,148,21],[249,0,144,13],[249,5,143,31],[250,0,150,2,"welcome"],[250,4,150,2,"welcome"],[250,11,150,9],[250,13,150,11],[251,0,151,4,"fontSize"],[251,6,151,4,"fontSize"],[251,14,151,12],[251,16,151,14],[251,18,150,11],[252,0,152,4,"textAlign"],[252,6,152,4,"textAlign"],[252,15,152,13],[252,17,152,15],[252,25,150,11],[253,0,153,4,"margin"],[253,6,153,4,"margin"],[253,12,153,10],[253,14,153,12],[254,0,150,11],[255,0,143,31],[255,3,143,13],[255,4,143,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.watchPosition$argument_0","componentWillUnmount","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;sBCU;uDCa;KDO;GDC;yBGC;GHE;oBIE;MCE;ODI;MEC,mCF;GJO;eOE;GP0B;YQE;+BCG;ODE;GRO;EUC;qCDe;aCO;mBCY;WDE;GVM;CDC"}},"type":"js/module"}]}