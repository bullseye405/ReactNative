{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2);\n          var preciseDistance = geolib.getPreciseDistance(points);\n          console.log(distance, preciseDistance);\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, this.state.distance)), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, this.state.area)));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":212,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,31,6],[70,14,31,10,"point1"],[70,20,31,16],[70,23,31,19],[71,0,31,21,"longitude"],[71,12,31,21,"longitude"],[71,21,31,30],[71,23,31,32,"cood1"],[71,28,31,37],[71,29,31,38,"longitude"],[71,38,31,19],[72,0,31,49,"latitude"],[72,12,31,49,"latitude"],[72,20,31,57],[72,22,31,59,"cood1"],[72,27,31,64],[72,28,31,65,"latitude"],[73,0,31,19],[73,11,31,6],[74,0,32,6],[74,14,32,10,"point2"],[74,20,32,16],[74,23,32,19],[75,0,32,21,"longitude"],[75,12,32,21,"longitude"],[75,21,32,30],[75,23,32,32,"cood2"],[75,28,32,37],[75,29,32,38,"longitude"],[75,38,32,19],[76,0,32,49,"latitude"],[76,12,32,49,"latitude"],[76,20,32,57],[76,22,32,59,"cood2"],[76,27,32,64],[76,28,32,65,"latitude"],[77,0,32,19],[77,11,32,6],[78,0,34,6],[78,14,34,10,"distance"],[78,22,34,18],[78,25,34,21,"geolib"],[78,31,34,27],[78,32,34,28,"getDistance"],[78,43,34,21],[78,44,34,40,"point1"],[78,50,34,21],[78,52,34,48,"point2"],[78,58,34,21],[78,59,34,6],[79,0,35,6],[79,14,35,10,"preciseDistance"],[79,29,35,25],[79,32,35,28,"geolib"],[79,38,35,34],[79,39,35,35,"getPreciseDistance"],[79,57,35,28],[79,58,35,54,"points"],[79,64,35,28],[79,65,35,6],[80,0,36,6,"console"],[80,10,36,6,"console"],[80,17,36,13],[80,18,36,14,"log"],[80,21,36,6],[80,22,36,18,"distance"],[80,30,36,6],[80,32,36,28,"preciseDistance"],[80,47,36,6],[81,0,37,5],[81,9,27,4],[81,15,37,11],[82,0,38,6,"Alert"],[82,29,38,12,"alert"],[82,34,38,6],[82,35,38,18],[82,68,38,6],[83,0,39,5],[84,0,40,3],[84,7],[86,12,42,2,"getArea"],[86,19],[86,22,42,12],[86,34,42,18],[87,0,43,4],[87,12,43,8,"myArr"],[87,17,43,13],[87,20,43,16],[87,22,43,4],[88,0,44,4],[88,14,44,9,"state"],[88,19,44,4],[88,20,44,15,"locations"],[88,29,44,4],[88,30,44,25,"length"],[88,36,44,4],[88,39,44,34],[88,40,44,4],[88,44,45,6],[88,50,45,11,"state"],[88,55,45,6],[88,56,45,17,"locations"],[88,65,45,6],[88,66,45,27,"map"],[88,69,45,6],[88,70,45,31],[88,80,45,31,"loc"],[88,83,45,34],[88,85,45,38],[89,0,46,8,"myArr"],[89,10,46,8,"myArr"],[89,15,46,13],[89,16,46,14,"push"],[89,20,46,8],[89,21,46,19],[89,22,46,20,"loc"],[89,25,46,23],[89,26,46,24,"coords"],[89,32,46,20],[89,33,46,31,"latitude"],[89,41,46,19],[89,43,46,41,"loc"],[89,46,46,44],[89,47,46,45,"coords"],[89,53,46,41],[89,54,46,52,"longitude"],[89,63,46,19],[89,64,46,8],[90,0,47,7],[90,9,45,6],[90,10,44,4],[91,0,48,4,"console"],[91,8,48,4,"console"],[91,15,48,11],[91,16,48,12,"log"],[91,19,48,4],[91,20,48,16],[91,29,48,4],[91,31,48,27,"myArr"],[91,36,48,4],[93,0,49,4],[93,12,49,8,"myArr"],[93,17,49,13],[93,18,49,14,"length"],[93,24,49,8],[93,27,49,23],[93,28,49,4],[93,30,49,26],[94,0,50,6],[94,14,50,10,"data"],[94,18,50,14],[94,21,50,17,"geolib"],[94,27,50,23],[94,28,50,24,"getAreaOfPolygon"],[94,44,50,17],[94,45,50,41,"myArr"],[94,50,50,17],[94,51,50,6],[96,0,52,6],[96,16,52,11,"setState"],[96,24,52,6],[96,25,52,20],[97,0,52,22,"area"],[97,12,52,22,"area"],[97,16,52,26],[97,18,52,28,"data"],[98,0,52,20],[98,11,52,6],[99,0,53,5],[100,0,54,3],[100,7],[107,31,55,11],[108,0,56,4],[108,15,57,6],[108,44,57,7],[108,61,57,6],[109,0,57,12],[109,10,57,12],[109,15,57,17],[109,17,57,19,"styles"],[109,23,57,25],[109,24,57,26,"container"],[109,33,57,6],[110,0,57,6],[111,0,57,6],[112,0,57,6],[113,0,57,6],[114,0,57,6],[114,11,58,8],[114,40,58,9],[114,69,58,8],[115,0,58,26],[115,10,58,26],[115,17,58,33],[115,19,58,35],[115,24,58,40,"findCoordinates"],[115,39,58,8],[116,0,58,8],[117,0,58,8],[118,0,58,8],[119,0,58,8],[120,0,58,8],[120,11,59,10],[120,40,59,11],[120,57,59,10],[121,0,59,16],[121,10,59,16],[121,15,59,21],[121,17,59,23,"styles"],[121,23,59,29],[121,24,59,30,"welcome"],[121,31,59,10],[122,0,59,10],[123,0,59,10],[124,0,59,10],[125,0,59,10],[126,0,59,10],[126,29,58,8],[126,30,57,6],[126,32,62,8],[126,61,62,9],[126,78,62,8],[127,0,63,10],[127,10,63,10],[127,15,63,15],[127,17,63,17],[128,0,63,19,"display"],[128,12,63,19,"display"],[128,19,63,26],[128,21,63,28],[128,27,63,17],[129,0,63,36,"flexDirection"],[129,12,63,36,"flexDirection"],[129,25,63,49],[129,27,63,51],[129,32,63,17],[130,0,63,58,"flexWrap"],[130,12,63,58,"flexWrap"],[130,20,63,66],[130,22,63,68],[131,0,63,17],[131,11,62,8],[132,0,62,8],[133,0,62,8],[134,0,62,8],[135,0,62,8],[136,0,62,8],[136,11,65,11],[136,16,65,16,"state"],[136,21,65,11],[136,22,65,22,"locations"],[136,31,65,11],[136,32,65,32,"length"],[136,38,65,11],[136,41,65,41],[136,42,65,11],[136,46,66,12],[136,51,66,17,"state"],[136,56,66,12],[136,57,66,23,"locations"],[136,66,66,12],[136,67,66,33,"map"],[136,70,66,12],[136,71,66,37],[136,81,66,38,"loc"],[136,84,66,37],[136,86,66,43,"key"],[136,89,66,37],[136,91,66,51],[137,0,67,14],[137,17,68,16],[137,46,68,17],[137,63,68,16],[138,0,68,22],[138,12,68,22],[138,17,68,27],[138,19,68,29],[139,0,68,31,"padding"],[139,14,68,31,"padding"],[139,21,68,38],[139,23,68,40],[140,0,68,29],[140,13,68,16],[141,0,68,46],[141,12,68,46],[141,15,68,49],[141,17,68,51,"key"],[141,20,68,16],[142,0,68,16],[143,0,68,16],[144,0,68,16],[145,0,68,16],[146,0,68,16],[146,13,69,18],[146,42,69,19],[146,59,69,18],[147,0,69,18],[148,0,69,18],[149,0,69,18],[150,0,69,18],[151,0,69,18],[151,13,69,25,"loc"],[151,16,69,28],[151,17,69,29,"coords"],[151,23,69,25],[151,24,69,36,"latitude"],[151,32,69,18],[151,33,68,16],[151,35,70,18],[151,64,70,19],[151,81,70,18],[152,0,70,18],[153,0,70,18],[154,0,70,18],[155,0,70,18],[156,0,70,18],[156,13,70,25,"loc"],[156,16,70,28],[156,17,70,29,"coords"],[156,23,70,25],[156,24,70,36,"longitude"],[156,33,70,18],[156,34,68,16],[156,35,67,14],[157,0,73,13],[157,9,66,12],[157,10,62,8],[157,11,57,6],[157,13,75,8],[157,42,75,9],[157,71,75,8],[158,0,75,26],[158,10,75,26],[158,17,75,33],[158,19,75,35],[158,24,75,40,"getDistace"],[158,34,75,8],[159,0,75,8],[160,0,75,8],[161,0,75,8],[162,0,75,8],[163,0,75,8],[163,11,76,10],[163,40,76,11],[163,57,76,10],[164,0,76,16],[164,10,76,16],[164,15,76,21],[164,17,76,23,"styles"],[164,23,76,29],[164,24,76,30,"welcome"],[164,31,76,10],[165,0,76,10],[166,0,76,10],[167,0,76,10],[168,0,76,10],[169,0,76,10],[169,26,75,8],[169,28,77,11],[169,33,77,16,"state"],[169,38,77,11],[169,39,77,22,"distance"],[169,47,77,11],[169,51,77,34],[169,80,77,35],[169,97,77,34],[170,0,77,34],[171,0,77,34],[172,0,77,34],[173,0,77,34],[174,0,77,34],[174,11,77,41],[174,16,77,46,"state"],[174,21,77,41],[174,22,77,52,"distance"],[174,30,77,34],[174,31,75,8],[174,32,57,6],[174,34,79,8],[174,63,79,9],[174,92,79,8],[175,0,79,26],[175,10,79,26],[175,17,79,33],[175,19,79,35],[175,24,79,40,"getArea"],[175,31,79,8],[176,0,79,8],[177,0,79,8],[178,0,79,8],[179,0,79,8],[180,0,79,8],[180,11,80,10],[180,40,80,11],[180,57,80,10],[181,0,80,16],[181,10,80,16],[181,15,80,21],[181,17,80,23,"styles"],[181,23,80,29],[181,24,80,30,"welcome"],[181,31,80,10],[182,0,80,10],[183,0,80,10],[184,0,80,10],[185,0,80,10],[186,0,80,10],[186,22,79,8],[186,24,81,11],[186,29,81,16,"state"],[186,34,81,11],[186,35,81,22,"area"],[186,39,81,11],[186,43,81,30],[186,72,81,31],[186,89,81,30],[187,0,81,30],[188,0,81,30],[189,0,81,30],[190,0,81,30],[191,0,81,30],[191,11,81,37],[191,16,81,42,"state"],[191,21,81,37],[191,22,81,48,"area"],[191,26,81,30],[191,27,79,8],[191,28,57,6],[191,29,56,4],[192,0,85,3],[195,4,5,33,"React"],[195,19,5,39,"Component"],[195,28],[199,0,88,0],[199,6,88,4,"styles"],[199,12,88,10],[199,15,88,13,"StyleSheet"],[199,39,88,24,"create"],[199,45,88,13],[199,46,88,31],[200,0,89,2,"container"],[200,4,89,2,"container"],[200,13,89,11],[200,15,89,13],[201,0,90,4,"flex"],[201,6,90,4,"flex"],[201,10,90,8],[201,12,90,10],[201,13,89,13],[202,0,91,4,"justifyContent"],[202,6,91,4,"justifyContent"],[202,20,91,18],[202,22,91,20],[202,30,89,13],[203,0,92,4,"alignItems"],[203,6,92,4,"alignItems"],[203,16,92,14],[203,18,92,16],[203,26,89,13],[204,0,93,4,"backgroundColor"],[204,6,93,4,"backgroundColor"],[204,21,93,19],[204,23,93,21],[205,0,89,13],[205,5,88,31],[206,0,95,2,"welcome"],[206,4,95,2,"welcome"],[206,11,95,9],[206,13,95,11],[207,0,96,4,"fontSize"],[207,6,96,4,"fontSize"],[207,14,96,12],[207,16,96,14],[207,18,95,11],[208,0,97,4,"textAlign"],[208,6,97,4,"textAlign"],[208,15,97,13],[208,17,97,15],[208,25,95,11],[209,0,98,4,"margin"],[209,6,98,4,"margin"],[209,12,98,10],[209,14,98,12],[210,0,95,11],[211,0,88,31],[211,3,88,13],[211,4,88,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJc;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;GPY;CDC"}},"type":"js/module"}]}