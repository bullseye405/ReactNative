{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var points = [[cood1.logitude, cood1.latitude], [cood2.logitude, cood2.latitude]];\n          var distance = geolib.getDistance(points);\n          var preciseDistance = geolib.getPreciseDistance(points);\n          console.log(distance, preciseDistance);\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, this.state.distance)), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, this.state.area)));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":205,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,30,6],[70,14,30,10,"points"],[70,20,30,16],[70,23,30,19],[70,24,31,8],[70,25,31,9,"cood1"],[70,30,31,14],[70,31,31,15,"logitude"],[70,39,31,8],[70,41,31,25,"cood1"],[70,46,31,30],[70,47,31,31,"latitude"],[70,55,31,8],[70,56,30,19],[70,58,32,8],[70,59,32,9,"cood2"],[70,64,32,14],[70,65,32,15,"logitude"],[70,73,32,8],[70,75,32,25,"cood2"],[70,80,32,30],[70,81,32,31,"latitude"],[70,89,32,8],[70,90,30,19],[70,91,30,6],[71,0,34,6],[71,14,34,10,"distance"],[71,22,34,18],[71,25,34,21,"geolib"],[71,31,34,27],[71,32,34,28,"getDistance"],[71,43,34,21],[71,44,34,40,"points"],[71,50,34,21],[71,51,34,6],[72,0,35,6],[72,14,35,10,"preciseDistance"],[72,29,35,25],[72,32,35,28,"geolib"],[72,38,35,34],[72,39,35,35,"getPreciseDistance"],[72,57,35,28],[72,58,35,54,"points"],[72,64,35,28],[72,65,35,6],[73,0,36,6,"console"],[73,10,36,6,"console"],[73,17,36,13],[73,18,36,14,"log"],[73,21,36,6],[73,22,36,18,"distance"],[73,30,36,6],[73,32,36,28,"preciseDistance"],[73,47,36,6],[74,0,37,5],[74,9,27,4],[74,15,37,11],[75,0,38,6,"Alert"],[75,29,38,12,"alert"],[75,34,38,6],[75,35,38,18],[75,68,38,6],[76,0,39,5],[77,0,40,3],[77,7],[79,12,42,2,"getArea"],[79,19],[79,22,42,12],[79,34,42,18],[80,0,43,4],[80,12,43,8,"myArr"],[80,17,43,13],[80,20,43,16],[80,22,43,4],[81,0,44,4],[81,14,44,9,"state"],[81,19,44,4],[81,20,44,15,"locations"],[81,29,44,4],[81,30,44,25,"length"],[81,36,44,4],[81,39,44,34],[81,40,44,4],[81,44,45,6],[81,50,45,11,"state"],[81,55,45,6],[81,56,45,17,"locations"],[81,65,45,6],[81,66,45,27,"map"],[81,69,45,6],[81,70,45,31],[81,80,45,31,"loc"],[81,83,45,34],[81,85,45,38],[82,0,46,8,"myArr"],[82,10,46,8,"myArr"],[82,15,46,13],[82,16,46,14,"push"],[82,20,46,8],[82,21,46,19],[82,22,46,20,"loc"],[82,25,46,23],[82,26,46,24,"coords"],[82,32,46,20],[82,33,46,31,"latitude"],[82,41,46,19],[82,43,46,41,"loc"],[82,46,46,44],[82,47,46,45,"coords"],[82,53,46,41],[82,54,46,52,"longitude"],[82,63,46,19],[82,64,46,8],[83,0,47,7],[83,9,45,6],[83,10,44,4],[84,0,48,4,"console"],[84,8,48,4,"console"],[84,15,48,11],[84,16,48,12,"log"],[84,19,48,4],[84,20,48,16],[84,29,48,4],[84,31,48,27,"myArr"],[84,36,48,4],[86,0,49,4],[86,12,49,8,"myArr"],[86,17,49,13],[86,18,49,14,"length"],[86,24,49,8],[86,27,49,23],[86,28,49,4],[86,30,49,26],[87,0,50,6],[87,14,50,10,"data"],[87,18,50,14],[87,21,50,17,"geolib"],[87,27,50,23],[87,28,50,24,"getAreaOfPolygon"],[87,44,50,17],[87,45,50,41,"myArr"],[87,50,50,17],[87,51,50,6],[89,0,52,6],[89,16,52,11,"setState"],[89,24,52,6],[89,25,52,20],[90,0,52,22,"area"],[90,12,52,22,"area"],[90,16,52,26],[90,18,52,28,"data"],[91,0,52,20],[91,11,52,6],[92,0,53,5],[93,0,54,3],[93,7],[100,31,55,11],[101,0,56,4],[101,15,57,6],[101,44,57,7],[101,61,57,6],[102,0,57,12],[102,10,57,12],[102,15,57,17],[102,17,57,19,"styles"],[102,23,57,25],[102,24,57,26,"container"],[102,33,57,6],[103,0,57,6],[104,0,57,6],[105,0,57,6],[106,0,57,6],[107,0,57,6],[107,11,58,8],[107,40,58,9],[107,69,58,8],[108,0,58,26],[108,10,58,26],[108,17,58,33],[108,19,58,35],[108,24,58,40,"findCoordinates"],[108,39,58,8],[109,0,58,8],[110,0,58,8],[111,0,58,8],[112,0,58,8],[113,0,58,8],[113,11,59,10],[113,40,59,11],[113,57,59,10],[114,0,59,16],[114,10,59,16],[114,15,59,21],[114,17,59,23,"styles"],[114,23,59,29],[114,24,59,30,"welcome"],[114,31,59,10],[115,0,59,10],[116,0,59,10],[117,0,59,10],[118,0,59,10],[119,0,59,10],[119,29,58,8],[119,30,57,6],[119,32,62,8],[119,61,62,9],[119,78,62,8],[120,0,63,10],[120,10,63,10],[120,15,63,15],[120,17,63,17],[121,0,63,19,"display"],[121,12,63,19,"display"],[121,19,63,26],[121,21,63,28],[121,27,63,17],[122,0,63,36,"flexDirection"],[122,12,63,36,"flexDirection"],[122,25,63,49],[122,27,63,51],[122,32,63,17],[123,0,63,58,"flexWrap"],[123,12,63,58,"flexWrap"],[123,20,63,66],[123,22,63,68],[124,0,63,17],[124,11,62,8],[125,0,62,8],[126,0,62,8],[127,0,62,8],[128,0,62,8],[129,0,62,8],[129,11,65,11],[129,16,65,16,"state"],[129,21,65,11],[129,22,65,22,"locations"],[129,31,65,11],[129,32,65,32,"length"],[129,38,65,11],[129,41,65,41],[129,42,65,11],[129,46,66,12],[129,51,66,17,"state"],[129,56,66,12],[129,57,66,23,"locations"],[129,66,66,12],[129,67,66,33,"map"],[129,70,66,12],[129,71,66,37],[129,81,66,38,"loc"],[129,84,66,37],[129,86,66,43,"key"],[129,89,66,37],[129,91,66,51],[130,0,67,14],[130,17,68,16],[130,46,68,17],[130,63,68,16],[131,0,68,22],[131,12,68,22],[131,17,68,27],[131,19,68,29],[132,0,68,31,"padding"],[132,14,68,31,"padding"],[132,21,68,38],[132,23,68,40],[133,0,68,29],[133,13,68,16],[134,0,68,46],[134,12,68,46],[134,15,68,49],[134,17,68,51,"key"],[134,20,68,16],[135,0,68,16],[136,0,68,16],[137,0,68,16],[138,0,68,16],[139,0,68,16],[139,13,69,18],[139,42,69,19],[139,59,69,18],[140,0,69,18],[141,0,69,18],[142,0,69,18],[143,0,69,18],[144,0,69,18],[144,13,69,25,"loc"],[144,16,69,28],[144,17,69,29,"coords"],[144,23,69,25],[144,24,69,36,"latitude"],[144,32,69,18],[144,33,68,16],[144,35,70,18],[144,64,70,19],[144,81,70,18],[145,0,70,18],[146,0,70,18],[147,0,70,18],[148,0,70,18],[149,0,70,18],[149,13,70,25,"loc"],[149,16,70,28],[149,17,70,29,"coords"],[149,23,70,25],[149,24,70,36,"longitude"],[149,33,70,18],[149,34,68,16],[149,35,67,14],[150,0,73,13],[150,9,66,12],[150,10,62,8],[150,11,57,6],[150,13,75,8],[150,42,75,9],[150,71,75,8],[151,0,75,26],[151,10,75,26],[151,17,75,33],[151,19,75,35],[151,24,75,40,"getDistace"],[151,34,75,8],[152,0,75,8],[153,0,75,8],[154,0,75,8],[155,0,75,8],[156,0,75,8],[156,11,76,10],[156,40,76,11],[156,57,76,10],[157,0,76,16],[157,10,76,16],[157,15,76,21],[157,17,76,23,"styles"],[157,23,76,29],[157,24,76,30,"welcome"],[157,31,76,10],[158,0,76,10],[159,0,76,10],[160,0,76,10],[161,0,76,10],[162,0,76,10],[162,26,75,8],[162,28,77,11],[162,33,77,16,"state"],[162,38,77,11],[162,39,77,22,"distance"],[162,47,77,11],[162,51,77,34],[162,80,77,35],[162,97,77,34],[163,0,77,34],[164,0,77,34],[165,0,77,34],[166,0,77,34],[167,0,77,34],[167,11,77,41],[167,16,77,46,"state"],[167,21,77,41],[167,22,77,52,"distance"],[167,30,77,34],[167,31,75,8],[167,32,57,6],[167,34,79,8],[167,63,79,9],[167,92,79,8],[168,0,79,26],[168,10,79,26],[168,17,79,33],[168,19,79,35],[168,24,79,40,"getArea"],[168,31,79,8],[169,0,79,8],[170,0,79,8],[171,0,79,8],[172,0,79,8],[173,0,79,8],[173,11,80,10],[173,40,80,11],[173,57,80,10],[174,0,80,16],[174,10,80,16],[174,15,80,21],[174,17,80,23,"styles"],[174,23,80,29],[174,24,80,30,"welcome"],[174,31,80,10],[175,0,80,10],[176,0,80,10],[177,0,80,10],[178,0,80,10],[179,0,80,10],[179,22,79,8],[179,24,81,11],[179,29,81,16,"state"],[179,34,81,11],[179,35,81,22,"area"],[179,39,81,11],[179,43,81,30],[179,72,81,31],[179,89,81,30],[180,0,81,30],[181,0,81,30],[182,0,81,30],[183,0,81,30],[184,0,81,30],[184,11,81,37],[184,16,81,42,"state"],[184,21,81,37],[184,22,81,48,"area"],[184,26,81,30],[184,27,79,8],[184,28,57,6],[184,29,56,4],[185,0,85,3],[188,4,5,33,"React"],[188,19,5,39,"Component"],[188,28],[192,0,88,0],[192,6,88,4,"styles"],[192,12,88,10],[192,15,88,13,"StyleSheet"],[192,39,88,24,"create"],[192,45,88,13],[192,46,88,31],[193,0,89,2,"container"],[193,4,89,2,"container"],[193,13,89,11],[193,15,89,13],[194,0,90,4,"flex"],[194,6,90,4,"flex"],[194,10,90,8],[194,12,90,10],[194,13,89,13],[195,0,91,4,"justifyContent"],[195,6,91,4,"justifyContent"],[195,20,91,18],[195,22,91,20],[195,30,89,13],[196,0,92,4,"alignItems"],[196,6,92,4,"alignItems"],[196,16,92,14],[196,18,92,16],[196,26,89,13],[197,0,93,4,"backgroundColor"],[197,6,93,4,"backgroundColor"],[197,21,93,19],[197,23,93,21],[198,0,89,13],[198,5,88,31],[199,0,95,2,"welcome"],[199,4,95,2,"welcome"],[199,11,95,9],[199,13,95,11],[200,0,96,4,"fontSize"],[200,6,96,4,"fontSize"],[200,14,96,12],[200,16,96,14],[200,18,95,11],[201,0,97,4,"textAlign"],[201,6,97,4,"textAlign"],[201,15,97,13],[201,17,97,15],[201,25,95,11],[202,0,98,4,"margin"],[202,6,98,4,"margin"],[202,12,98,10],[202,14,98,12],[203,0,95,11],[204,0,88,31],[204,3,88,13],[204,4,88,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJc;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;GPY;CDC"}},"type":"js/module"}]}