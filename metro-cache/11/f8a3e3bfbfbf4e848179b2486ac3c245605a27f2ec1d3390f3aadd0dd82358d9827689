{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.log(distance, preciseDistance);\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({});\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":232,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,31,6],[70,14,31,10,"point1"],[70,20,31,16],[70,23,31,19],[71,0,31,21,"longitude"],[71,12,31,21,"longitude"],[71,21,31,30],[71,23,31,32,"cood1"],[71,28,31,37],[71,29,31,38,"longitude"],[71,38,31,19],[72,0,31,49,"latitude"],[72,12,31,49,"latitude"],[72,20,31,57],[72,22,31,59,"cood1"],[72,27,31,64],[72,28,31,65,"latitude"],[73,0,31,19],[73,11,31,6],[74,0,32,6],[74,14,32,10,"point2"],[74,20,32,16],[74,23,32,19],[75,0,32,21,"longitude"],[75,12,32,21,"longitude"],[75,21,32,30],[75,23,32,32,"cood2"],[75,28,32,37],[75,29,32,38,"longitude"],[75,38,32,19],[76,0,32,49,"latitude"],[76,12,32,49,"latitude"],[76,20,32,57],[76,22,32,59,"cood2"],[76,27,32,64],[76,28,32,65,"latitude"],[77,0,32,19],[77,11,32,6],[78,0,34,6],[78,14,34,10,"distance"],[78,22,34,18],[78,25,34,21,"geolib"],[78,31,34,27],[78,32,34,28,"getDistance"],[78,43,34,21],[78,44,34,40,"point1"],[78,50,34,21],[78,52,34,48,"point2"],[78,58,34,21],[78,60,34,56],[78,64,34,21],[78,65,34,6],[79,0,35,6],[79,14,35,10,"preciseDistance"],[79,29,35,25],[79,32,35,28,"geolib"],[79,38,35,34],[79,39,35,35,"getPreciseDistance"],[79,57,35,28],[79,58,35,54,"point2"],[79,64,35,28],[79,66,35,62,"point1"],[79,72,35,28],[79,74,35,70],[79,79,35,28],[79,80,35,6],[80,0,36,6,"console"],[80,10,36,6,"console"],[80,17,36,13],[80,18,36,14,"log"],[80,21,36,6],[80,22,36,18,"distance"],[80,30,36,6],[80,32,36,28,"preciseDistance"],[80,47,36,6],[82,0,37,6],[82,16,37,11,"setState"],[82,24,37,6],[82,25,37,20],[83,0,37,22,"distance"],[83,12,37,22,"distance"],[83,20,37,30],[83,22,37,22,"distance"],[84,0,37,20],[84,11,37,6],[85,0,38,5],[85,9,27,4],[85,15,38,11],[86,0,39,6,"Alert"],[86,29,39,12,"alert"],[86,34,39,6],[86,35,39,18],[86,68,39,6],[87,0,40,5],[88,0,41,3],[88,7],[90,12,43,2,"getArea"],[90,19],[90,22,43,12],[90,34,43,18],[91,0,44,4],[91,12,44,8,"myArr"],[91,17,44,13],[91,20,44,16],[91,22,44,4],[92,0,45,4],[92,14,45,9,"state"],[92,19,45,4],[92,20,45,15,"locations"],[92,29,45,4],[92,30,45,25,"length"],[92,36,45,4],[92,39,45,34],[92,40,45,4],[92,44,46,6],[92,50,46,11,"state"],[92,55,46,6],[92,56,46,17,"locations"],[92,65,46,6],[92,66,46,27,"map"],[92,69,46,6],[92,70,46,31],[92,80,46,31,"loc"],[92,83,46,34],[92,85,46,38],[93,0,47,8,"myArr"],[93,10,47,8,"myArr"],[93,15,47,13],[93,16,47,14,"push"],[93,20,47,8],[93,21,47,19],[93,22,47,20,"loc"],[93,25,47,23],[93,26,47,24,"coords"],[93,32,47,20],[93,33,47,31,"latitude"],[93,41,47,19],[93,43,47,41,"loc"],[93,46,47,44],[93,47,47,45,"coords"],[93,53,47,41],[93,54,47,52,"longitude"],[93,63,47,19],[93,64,47,8],[94,0,48,7],[94,9,46,6],[94,10,45,4],[95,0,49,4,"console"],[95,8,49,4,"console"],[95,15,49,11],[95,16,49,12,"log"],[95,19,49,4],[95,20,49,16],[95,29,49,4],[95,31,49,27,"myArr"],[95,36,49,4],[97,0,50,4],[97,12,50,8,"myArr"],[97,17,50,13],[97,18,50,14,"length"],[97,24,50,8],[97,27,50,23],[97,28,50,4],[97,30,50,26],[98,0,51,6],[98,14,51,10,"data"],[98,18,51,14],[98,21,51,17,"geolib"],[98,27,51,23],[98,28,51,24,"getAreaOfPolygon"],[98,44,51,17],[98,45,51,41,"myArr"],[98,50,51,17],[98,51,51,6],[100,0,53,6],[100,16,53,11,"setState"],[100,24,53,6],[100,25,53,20],[101,0,53,22,"area"],[101,12,53,22,"area"],[101,16,53,26],[101,18,53,28,"data"],[102,0,53,20],[102,11,53,6],[103,0,54,5],[104,0,55,3],[104,7],[111,31,56,11],[112,0,56,11],[114,0,57,4],[114,15,58,6],[114,44,58,7],[114,61,58,6],[115,0,58,12],[115,10,58,12],[115,15,58,17],[115,17,58,19,"styles"],[115,23,58,25],[115,24,58,26,"container"],[115,33,58,6],[116,0,58,6],[117,0,58,6],[118,0,58,6],[119,0,58,6],[120,0,58,6],[120,11,59,8],[120,40,59,9],[120,69,59,8],[121,0,59,26],[121,10,59,26],[121,17,59,33],[121,19,59,35],[121,24,59,40,"findCoordinates"],[121,39,59,8],[122,0,59,8],[123,0,59,8],[124,0,59,8],[125,0,59,8],[126,0,59,8],[126,11,60,10],[126,40,60,11],[126,57,60,10],[127,0,60,16],[127,10,60,16],[127,15,60,21],[127,17,60,23,"styles"],[127,23,60,29],[127,24,60,30,"welcome"],[127,31,60,10],[128,0,60,10],[129,0,60,10],[130,0,60,10],[131,0,60,10],[132,0,60,10],[132,29,59,8],[132,30,58,6],[132,32,63,8],[132,61,63,9],[132,78,63,8],[133,0,64,10],[133,10,64,10],[133,15,64,15],[133,17,64,17],[134,0,64,19,"display"],[134,12,64,19,"display"],[134,19,64,26],[134,21,64,28],[134,27,64,17],[135,0,64,36,"flexDirection"],[135,12,64,36,"flexDirection"],[135,25,64,49],[135,27,64,51],[135,32,64,17],[136,0,64,58,"flexWrap"],[136,12,64,58,"flexWrap"],[136,20,64,66],[136,22,64,68],[137,0,64,17],[137,11,63,8],[138,0,63,8],[139,0,63,8],[140,0,63,8],[141,0,63,8],[142,0,63,8],[142,11,66,11],[142,16,66,16,"state"],[142,21,66,11],[142,22,66,22,"locations"],[142,31,66,11],[142,32,66,32,"length"],[142,38,66,11],[142,41,66,41],[142,42,66,11],[142,46,67,12],[142,51,67,17,"state"],[142,56,67,12],[142,57,67,23,"locations"],[142,66,67,12],[142,67,67,33,"map"],[142,70,67,12],[142,71,67,37],[142,81,67,38,"loc"],[142,84,67,37],[142,86,67,43,"key"],[142,89,67,37],[142,91,67,51],[143,0,68,14],[143,17,69,16],[143,46,69,17],[143,63,69,16],[144,0,69,22],[144,12,69,22],[144,17,69,27],[144,19,69,29],[145,0,69,31,"padding"],[145,14,69,31,"padding"],[145,21,69,38],[145,23,69,40],[146,0,69,29],[146,13,69,16],[147,0,69,46],[147,12,69,46],[147,15,69,49],[147,17,69,51,"key"],[147,20,69,16],[148,0,69,16],[149,0,69,16],[150,0,69,16],[151,0,69,16],[152,0,69,16],[152,13,70,18],[152,42,70,19],[152,59,70,18],[153,0,70,18],[154,0,70,18],[155,0,70,18],[156,0,70,18],[157,0,70,18],[157,13,70,25,"loc"],[157,16,70,28],[157,17,70,29,"coords"],[157,23,70,25],[157,24,70,36,"latitude"],[157,32,70,18],[157,33,69,16],[157,35,71,18],[157,64,71,19],[157,81,71,18],[158,0,71,18],[159,0,71,18],[160,0,71,18],[161,0,71,18],[162,0,71,18],[162,13,71,25,"loc"],[162,16,71,28],[162,17,71,29,"coords"],[162,23,71,25],[162,24,71,36,"longitude"],[162,33,71,18],[162,34,69,16],[162,35,68,14],[163,0,74,13],[163,9,67,12],[163,10,63,8],[163,11,58,6],[163,13,76,8],[163,42,76,9],[163,71,76,8],[164,0,76,26],[164,10,76,26],[164,17,76,33],[164,19,76,35],[164,24,76,40,"getDistace"],[164,34,76,8],[165,0,76,8],[166,0,76,8],[167,0,76,8],[168,0,76,8],[169,0,76,8],[169,11,77,10],[169,40,77,11],[169,57,77,10],[170,0,77,16],[170,10,77,16],[170,15,77,21],[170,17,77,23,"styles"],[170,23,77,29],[170,24,77,30,"welcome"],[170,31,77,10],[171,0,77,10],[172,0,77,10],[173,0,77,10],[174,0,77,10],[175,0,77,10],[175,26,76,8],[175,28,78,11],[175,33,78,16,"state"],[175,38,78,11],[175,39,78,22,"distance"],[175,47,78,11],[175,51,78,34],[175,80,78,35],[175,97,78,34],[176,0,78,34],[177,0,78,34],[178,0,78,34],[179,0,78,34],[180,0,78,34],[180,11,78,41],[180,16,78,46,"state"],[180,21,78,41],[180,22,78,52,"distance"],[180,30,78,34],[180,43,76,8],[180,44,58,6],[180,46,80,8],[180,75,80,9],[180,104,80,8],[181,0,80,26],[181,10,80,26],[181,17,80,33],[181,19,80,35],[181,24,80,40,"getArea"],[181,31,80,8],[182,0,80,8],[183,0,80,8],[184,0,80,8],[185,0,80,8],[186,0,80,8],[186,11,81,10],[186,40,81,11],[186,57,81,10],[187,0,81,16],[187,10,81,16],[187,15,81,21],[187,17,81,23,"styles"],[187,23,81,29],[187,24,81,30,"welcome"],[187,31,81,10],[188,0,81,10],[189,0,81,10],[190,0,81,10],[191,0,81,10],[192,0,81,10],[192,22,80,8],[192,24,82,11],[192,29,82,16,"state"],[192,34,82,11],[192,35,82,22,"area"],[192,39,82,11],[192,43,82,30],[192,72,82,31],[192,89,82,30],[193,0,82,30],[194,0,82,30],[195,0,82,30],[196,0,82,30],[197,0,82,30],[197,11,82,37],[197,16,82,42,"state"],[197,21,82,37],[197,22,82,48,"area"],[197,26,82,30],[197,44,80,8],[197,45,58,6],[197,47,85,8],[197,76,85,9],[197,105,85,8],[198,0,86,10],[198,10,86,10],[198,17,86,17],[198,19,86,19],[198,38,86,25],[199,0,87,12],[199,12,87,12],[199,18,87,16],[199,19,87,17,"setState"],[199,27,87,12],[199,28,87,26],[199,30,87,12],[200,0,88,11],[200,11,85,8],[201,0,85,8],[202,0,85,8],[203,0,85,8],[204,0,85,8],[205,0,85,8],[205,11,90,10],[205,40,90,11],[205,57,90,10],[206,0,90,16],[206,10,90,16],[206,15,90,21],[206,17,90,23,"styles"],[206,23,90,29],[206,24,90,30,"welcome"],[206,31,90,10],[207,0,90,10],[208,0,90,10],[209,0,90,10],[210,0,90,10],[211,0,90,10],[211,23,85,8],[211,24,58,6],[211,25,57,4],[212,0,94,3],[215,4,5,33,"React"],[215,19,5,39,"Component"],[215,28],[219,0,97,0],[219,6,97,4,"styles"],[219,12,97,10],[219,15,97,13,"StyleSheet"],[219,39,97,24,"create"],[219,45,97,13],[219,46,97,31],[220,0,98,2,"container"],[220,4,98,2,"container"],[220,13,98,11],[220,15,98,13],[221,0,99,4,"flex"],[221,6,99,4,"flex"],[221,10,99,8],[221,12,99,10],[221,13,98,13],[222,0,100,4,"justifyContent"],[222,6,100,4,"justifyContent"],[222,20,100,18],[222,22,100,20],[222,30,98,13],[223,0,101,4,"alignItems"],[223,6,101,4,"alignItems"],[223,16,101,14],[223,18,101,16],[223,26,98,13],[224,0,102,4,"backgroundColor"],[224,6,102,4,"backgroundColor"],[224,21,102,19],[224,23,102,21],[225,0,98,13],[225,5,97,31],[226,0,104,2,"welcome"],[226,4,104,2,"welcome"],[226,11,104,9],[226,13,104,11],[227,0,105,4,"fontSize"],[227,6,105,4,"fontSize"],[227,14,105,12],[227,16,105,14],[227,18,104,11],[228,0,106,4,"textAlign"],[228,6,106,4,"textAlign"],[228,15,106,13],[228,17,106,15],[228,25,104,11],[229,0,107,4,"margin"],[229,6,107,4,"margin"],[229,12,107,10],[229,14,107,12],[230,0,104,11],[231,0,97,31],[231,3,97,13],[231,4,97,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJe;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;mBCY;WDE;GPM;CDC"}},"type":"js/module"}]}