{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null,\n        initialPosition: \"unknown\",\n        lastPosition: \"unknown\"\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var initialPosition = JSON.stringify(position);\n\n          _this.setState({\n            initialPosition: initialPosition\n          });\n        }, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = JSON.stringify(position);\n\n          _this.setState({\n            lastPosition: lastPosition\n          });\n        });\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":269,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,17,"state"],[46,17],[46,20,6,25],[47,0,7,19,"locations"],[47,8,7,19,"locations"],[47,17,7,28],[47,19,7,30],[47,21,6,25],[48,0,8,19,"area"],[48,8,8,19,"area"],[48,12,8,23],[48,14,8,25],[48,18,6,25],[49,0,9,19,"distance"],[49,8,9,19,"distance"],[49,16,9,27],[49,18,9,29],[49,22,6,25],[50,0,10,19,"initialPosition"],[50,8,10,19,"initialPosition"],[50,23,10,34],[50,25,10,36],[50,34,6,25],[51,0,11,19,"lastPosition"],[51,8,11,19,"lastPosition"],[51,20,11,31],[51,22,11,33],[52,0,6,25],[52,7],[53,12,14,17,"watchID"],[53,19],[53,22,14,36],[53,26],[55,12,15,17,"componentDidMount"],[55,29],[55,32,15,37],[55,44,15,43],[56,0,16,19,"navigator"],[56,8,16,19,"navigator"],[56,17,16,28],[56,18,16,29,"geolocation"],[56,29,16,19],[56,30,16,41,"getCurrentPosition"],[56,48,16,19],[56,49,17,21],[56,59,17,21,"position"],[56,67,17,29],[56,69,17,33],[57,0,18,23],[57,14,18,29,"initialPosition"],[57,29,18,44],[57,32,18,47,"JSON"],[57,36,18,51],[57,37,18,52,"stringify"],[57,46,18,47],[57,47,18,62,"position"],[57,55,18,47],[57,56,18,23],[59,0,19,23],[59,16,19,28,"setState"],[59,24,19,23],[59,25,19,37],[60,0,19,39,"initialPosition"],[60,12,19,39,"initialPosition"],[60,27,19,54],[60,29,19,39,"initialPosition"],[61,0,19,37],[61,11,19,23],[62,0,20,22],[62,9,16,19],[62,11,21,21],[62,21,21,21,"error"],[62,26,21,26],[63,0,21,26],[63,17,21,30,"alert"],[63,22,21,35],[63,23,21,36,"error"],[63,28,21,41],[63,29,21,42,"message"],[63,36,21,35],[63,37,21,26],[64,0,21,26],[64,9,16,19],[64,11,22,21],[65,0,23,23,"enableHighAccuracy"],[65,10,23,23,"enableHighAccuracy"],[65,28,23,41],[65,30,23,43],[65,34,22,21],[66,0,24,23,"timeout"],[66,10,24,23,"timeout"],[66,17,24,30],[66,19,24,32],[66,24,22,21],[67,0,25,23,"maximumAge"],[67,10,25,23,"maximumAge"],[67,20,25,33],[67,22,25,35],[68,0,22,21],[68,9,16,19],[69,0,28,19],[69,14,28,24,"watchID"],[69,21,28,19],[69,24,28,34,"navigator"],[69,33,28,43],[69,34,28,44,"geolocation"],[69,45,28,34],[69,46,28,56,"watchPosition"],[69,59,28,34],[69,60,29,21],[69,70,29,21,"position"],[69,78,29,29],[69,80,29,33],[70,0,30,23],[70,14,30,29,"lastPosition"],[70,26,30,41],[70,29,30,44,"JSON"],[70,33,30,48],[70,34,30,49,"stringify"],[70,43,30,44],[70,44,30,59,"position"],[70,52,30,44],[70,53,30,23],[72,0,31,23],[72,16,31,28,"setState"],[72,24,31,23],[72,25,31,37],[73,0,31,39,"lastPosition"],[73,12,31,39,"lastPosition"],[73,24,31,51],[73,26,31,39,"lastPosition"],[74,0,31,37],[74,11,31,23],[75,0,32,22],[75,9,28,34],[75,10,28,19],[76,0,34,18],[76,7],[78,12,35,17,"componentWillUnmount"],[78,32],[78,35,35,40],[78,47,35,46],[79,0,36,19,"navigator"],[79,8,36,19,"navigator"],[79,17,36,28],[79,18,36,29,"geolocation"],[79,29,36,19],[79,30,36,41,"clearWatch"],[79,40,36,19],[79,41,36,52],[79,47,36,57,"watchID"],[79,54,36,19],[80,0,37,18],[80,7],[82,12,39,17,"findCoordinates"],[82,27],[82,30,39,35],[82,42,39,41],[83,0,40,19,"navigator"],[83,8,40,19,"navigator"],[83,17,40,28],[83,18,40,29,"geolocation"],[83,29,40,19],[83,30,40,41,"getCurrentPosition"],[83,48,40,19],[83,49,41,21],[83,59,41,21,"pos"],[83,62,41,24],[83,64,41,28],[84,0,42,23],[84,16,42,28,"setState"],[84,24,42,23],[84,25,42,37],[85,0,43,25,"locations"],[85,12,43,25,"locations"],[85,21,43,34],[85,66,43,40],[85,72,43,45,"state"],[85,77,43,40],[85,78,43,51,"locations"],[85,87,43,34],[85,91,43,62,"pos"],[85,94,43,34],[86,0,42,37],[86,11,42,23],[87,0,45,22],[87,9,40,19],[87,11,46,21],[87,21,46,21,"error"],[87,26,46,26],[88,0,46,26],[88,17,46,30,"Alert"],[88,36,46,36,"alert"],[88,41,46,30],[88,42,46,42,"error"],[88,47,46,47],[88,48,46,48,"message"],[88,55,46,30],[88,56,46,26],[89,0,46,26],[89,9,40,19],[89,11,47,21],[90,0,48,23,"enableHighAccuracy"],[90,10,48,23,"enableHighAccuracy"],[90,28,48,41],[90,30,48,43],[90,34,47,21],[91,0,49,23,"timeout"],[91,10,49,23,"timeout"],[91,17,49,30],[91,19,49,32],[91,24,47,21],[92,0,50,23,"maximumAge"],[92,10,50,23,"maximumAge"],[92,20,50,33],[92,22,50,35],[93,0,47,21],[93,9,40,19],[94,0,53,18],[94,7],[96,12,55,17,"getDistace"],[96,22],[96,25,55,30],[96,37,55,36],[97,0,56,19],[97,12,56,23],[97,18,56,28,"state"],[97,23,56,23],[97,24,56,34,"locations"],[97,33,56,23],[97,34,56,44,"length"],[97,40,56,23],[97,44,56,54],[97,45,56,19],[97,47,56,57],[98,0,57,21],[98,14,57,25,"cood1"],[98,19,57,30],[98,22,57,33],[98,28,57,38,"state"],[98,33,57,33],[98,34,57,44,"locations"],[98,43,57,33],[98,44,57,54],[98,45,57,33],[98,47,57,57,"coords"],[98,53,57,21],[99,0,58,21],[99,14,58,25,"cood2"],[99,19,58,30],[99,22,58,33],[99,28,58,38,"state"],[99,33,58,33],[99,34,58,44,"locations"],[99,43,58,33],[99,44,58,54],[99,45,58,33],[99,47,58,57,"coords"],[99,53,58,21],[100,0,60,21],[100,14,60,25,"point1"],[100,20,60,31],[100,23,60,34],[101,0,61,23,"longitude"],[101,12,61,23,"longitude"],[101,21,61,32],[101,23,61,34,"cood1"],[101,28,61,39],[101,29,61,40,"longitude"],[101,38,60,34],[102,0,62,23,"latitude"],[102,12,62,23,"latitude"],[102,20,62,31],[102,22,62,33,"cood1"],[102,27,62,38],[102,28,62,39,"latitude"],[103,0,60,34],[103,11,60,21],[104,0,64,21],[104,14,64,25,"point2"],[104,20,64,31],[104,23,64,34],[105,0,65,23,"longitude"],[105,12,65,23,"longitude"],[105,21,65,32],[105,23,65,34,"cood2"],[105,28,65,39],[105,29,65,40,"longitude"],[105,38,64,34],[106,0,66,23,"latitude"],[106,12,66,23,"latitude"],[106,20,66,31],[106,22,66,33,"cood2"],[106,27,66,38],[106,28,66,39,"latitude"],[107,0,64,34],[107,11,64,21],[108,0,69,21],[108,14,69,25,"distance"],[108,22,69,33],[108,25,69,36,"geolib"],[108,31,69,42],[108,32,69,43,"getDistance"],[108,43,69,36],[108,44,69,55,"point1"],[108,50,69,36],[108,52,69,63,"point2"],[108,58,69,36],[108,60,69,71],[108,64,69,36],[108,65,69,21],[109,0,70,21],[109,14,70,25,"preciseDistance"],[109,29,70,40],[109,32,70,43,"geolib"],[109,38,70,49],[109,39,70,50,"getPreciseDistance"],[109,57,70,43],[109,58,71,23,"point2"],[109,64,70,43],[109,66,72,23,"point1"],[109,72,70,43],[109,74,73,23],[109,79,70,43],[109,80,70,21],[110,0,75,21,"console"],[110,10,75,21,"console"],[110,17,75,28],[110,18,75,29,"table"],[110,23,75,21],[110,24,75,35],[111,0,76,23,"point1"],[111,12,76,23,"point1"],[111,18,76,29],[111,20,76,23,"point1"],[111,26,75,35],[112,0,77,23,"point2"],[112,12,77,23,"point2"],[112,18,77,29],[112,20,77,23,"point2"],[112,26,75,35],[113,0,78,23,"distance"],[113,12,78,23,"distance"],[113,20,78,31],[113,22,78,23,"distance"],[113,30,75,35],[114,0,79,23,"preciseDistance"],[114,12,79,23,"preciseDistance"],[114,27,79,38],[114,29,79,23,"preciseDistance"],[115,0,75,35],[115,11,75,21],[117,0,81,21],[117,16,81,26,"setState"],[117,24,81,21],[117,25,81,35],[118,0,81,37,"distance"],[118,12,81,37,"distance"],[118,20,81,45],[118,22,81,37,"distance"],[119,0,81,35],[119,11,81,21],[120,0,82,20],[120,9,56,19],[120,15,82,26],[121,0,83,21,"Alert"],[121,29,83,27,"alert"],[121,34,83,21],[121,35,83,33],[121,68,83,21],[122,0,84,20],[123,0,85,18],[123,7],[125,12,87,17,"getArea"],[125,19],[125,22,87,27],[125,34,87,33],[126,0,88,19],[126,12,88,23,"myArr"],[126,17,88,28],[126,20,88,31],[126,22,88,19],[127,0,89,19],[127,14,89,24,"state"],[127,19,89,19],[127,20,89,30,"locations"],[127,29,89,19],[127,30,89,40,"length"],[127,36,89,19],[127,39,89,49],[127,40,89,19],[127,44,90,21],[127,50,90,26,"state"],[127,55,90,21],[127,56,90,32,"locations"],[127,65,90,21],[127,66,90,42,"map"],[127,69,90,21],[127,70,90,46],[127,80,90,46,"loc"],[127,83,90,49],[127,85,90,53],[128,0,91,23,"myArr"],[128,10,91,23,"myArr"],[128,15,91,28],[128,16,91,29,"push"],[128,20,91,23],[128,21,91,34],[128,22,91,35,"loc"],[128,25,91,38],[128,26,91,39,"coords"],[128,32,91,35],[128,33,91,46,"latitude"],[128,41,91,34],[128,43,91,56,"loc"],[128,46,91,59],[128,47,91,60,"coords"],[128,53,91,56],[128,54,91,67,"longitude"],[128,63,91,34],[128,64,91,23],[129,0,92,22],[129,9,90,21],[129,10,89,19],[130,0,93,19,"console"],[130,8,93,19,"console"],[130,15,93,26],[130,16,93,27,"log"],[130,19,93,19],[130,20,93,31],[130,29,93,19],[130,31,93,42,"myArr"],[130,36,93,19],[132,0,94,19],[132,12,94,23,"myArr"],[132,17,94,28],[132,18,94,29,"length"],[132,24,94,23],[132,27,94,38],[132,28,94,19],[132,30,94,41],[133,0,95,21],[133,14,95,25,"data"],[133,18,95,29],[133,21,95,32,"geolib"],[133,27,95,38],[133,28,95,39,"getAreaOfPolygon"],[133,44,95,32],[133,45,95,56,"myArr"],[133,50,95,32],[133,51,95,21],[135,0,97,21],[135,16,97,26,"setState"],[135,24,97,21],[135,25,97,35],[136,0,97,37,"area"],[136,12,97,37,"area"],[136,16,97,41],[136,18,97,43,"data"],[137,0,97,35],[137,11,97,21],[138,0,98,20],[139,0,99,18],[139,7],[146,31,100,26],[147,0,100,26],[149,0,101,19],[149,15,102,21],[149,44,102,22],[149,61,102,21],[150,0,102,27],[150,10,102,27],[150,15,102,32],[150,17,102,34,"styles"],[150,23,102,40],[150,24,102,41,"container"],[150,33,102,21],[151,0,102,21],[152,0,102,21],[153,0,102,21],[154,0,102,21],[155,0,102,21],[155,11,103,23],[155,40,103,24],[155,69,103,23],[156,0,103,41],[156,10,103,41],[156,17,103,48],[156,19,103,50],[156,24,103,55,"findCoordinates"],[156,39,103,23],[157,0,103,23],[158,0,103,23],[159,0,103,23],[160,0,103,23],[161,0,103,23],[161,11,104,25],[161,40,104,26],[161,57,104,25],[162,0,104,31],[162,10,104,31],[162,15,104,36],[162,17,104,38,"styles"],[162,23,104,44],[162,24,104,45,"welcome"],[162,31,104,25],[163,0,104,25],[164,0,104,25],[165,0,104,25],[166,0,104,25],[167,0,104,25],[167,29,103,23],[167,30,102,21],[167,32,107,23],[167,61,107,24],[167,78,107,23],[168,0,108,25],[168,10,108,25],[168,15,108,30],[168,17,108,32],[169,0,109,27,"display"],[169,12,109,27,"display"],[169,19,109,34],[169,21,109,36],[169,27,108,32],[170,0,110,27,"flexDirection"],[170,12,110,27,"flexDirection"],[170,25,110,40],[170,27,110,42],[170,32,108,32],[171,0,111,27,"flexWrap"],[171,12,111,27,"flexWrap"],[171,20,111,35],[171,22,111,37],[172,0,108,32],[172,11,107,23],[173,0,107,23],[174,0,107,23],[175,0,107,23],[176,0,107,23],[177,0,107,23],[177,11,114,26],[177,16,114,31,"state"],[177,21,114,26],[177,22,114,37,"locations"],[177,31,114,26],[177,32,114,47,"length"],[177,38,114,26],[177,41,114,56],[177,42,114,26],[177,46,115,27],[177,51,115,32,"state"],[177,56,115,27],[177,57,115,38,"locations"],[177,66,115,27],[177,67,115,48,"map"],[177,70,115,27],[177,71,115,52],[177,81,115,53,"loc"],[177,84,115,52],[177,86,115,58,"key"],[177,89,115,52],[177,91,115,66],[178,0,116,29],[178,17,117,31],[178,46,117,32],[178,63,117,31],[179,0,117,37],[179,12,117,37],[179,17,117,42],[179,19,117,44],[180,0,117,46,"padding"],[180,14,117,46,"padding"],[180,21,117,53],[180,23,117,55],[181,0,117,44],[181,13,117,31],[182,0,117,61],[182,12,117,61],[182,15,117,64],[182,17,117,66,"key"],[182,20,117,31],[183,0,117,31],[184,0,117,31],[185,0,117,31],[186,0,117,31],[187,0,117,31],[187,13,118,33],[187,42,118,34],[187,59,118,33],[188,0,118,33],[189,0,118,33],[190,0,118,33],[191,0,118,33],[192,0,118,33],[192,13,118,40,"loc"],[192,16,118,43],[192,17,118,44,"coords"],[192,23,118,40],[192,24,118,51,"latitude"],[192,32,118,33],[192,33,117,31],[192,35,119,33],[192,64,119,34],[192,81,119,33],[193,0,119,33],[194,0,119,33],[195,0,119,33],[196,0,119,33],[197,0,119,33],[197,13,119,40,"loc"],[197,16,119,43],[197,17,119,44,"coords"],[197,23,119,40],[197,24,119,51,"longitude"],[197,33,119,33],[197,34,117,31],[197,35,116,29],[198,0,122,28],[198,9,115,27],[198,10,107,23],[198,11,102,21],[198,13,124,23],[198,42,124,24],[198,71,124,23],[199,0,124,41],[199,10,124,41],[199,17,124,48],[199,19,124,50],[199,24,124,55,"getDistace"],[199,34,124,23],[200,0,124,23],[201,0,124,23],[202,0,124,23],[203,0,124,23],[204,0,124,23],[204,11,125,25],[204,40,125,26],[204,57,125,25],[205,0,125,31],[205,10,125,31],[205,15,125,36],[205,17,125,38,"styles"],[205,23,125,44],[205,24,125,45,"welcome"],[205,31,125,25],[206,0,125,25],[207,0,125,25],[208,0,125,25],[209,0,125,25],[210,0,125,25],[210,26,124,23],[210,28,126,26],[210,33,126,31,"state"],[210,38,126,26],[210,39,126,37,"distance"],[210,47,126,26],[210,51,127,27],[210,80,127,28],[210,97,127,27],[211,0,127,27],[212,0,127,27],[213,0,127,27],[214,0,127,27],[215,0,127,27],[215,11,127,34],[215,16,127,39,"state"],[215,21,127,34],[215,22,127,45,"distance"],[215,30,127,27],[215,43,124,23],[215,44,102,21],[215,46,130,23],[215,75,130,24],[215,104,130,23],[216,0,130,41],[216,10,130,41],[216,17,130,48],[216,19,130,50],[216,24,130,55,"getArea"],[216,31,130,23],[217,0,130,23],[218,0,130,23],[219,0,130,23],[220,0,130,23],[221,0,130,23],[221,11,131,25],[221,40,131,26],[221,57,131,25],[222,0,131,31],[222,10,131,31],[222,15,131,36],[222,17,131,38,"styles"],[222,23,131,44],[222,24,131,45,"welcome"],[222,31,131,25],[223,0,131,25],[224,0,131,25],[225,0,131,25],[226,0,131,25],[227,0,131,25],[227,22,130,23],[227,24,132,26],[227,29,132,31,"state"],[227,34,132,26],[227,35,132,37,"area"],[227,39,132,26],[227,43,133,27],[227,72,133,28],[227,89,133,27],[228,0,133,27],[229,0,133,27],[230,0,133,27],[231,0,133,27],[232,0,133,27],[232,11,133,34],[232,16,133,39,"state"],[232,21,133,34],[232,22,133,45,"area"],[232,26,133,27],[232,44,130,23],[232,45,102,21],[232,47,137,23],[232,76,137,24],[232,105,137,23],[233,0,138,25],[233,10,138,25],[233,17,138,32],[233,19,138,34],[233,38,138,40],[234,0,139,27],[234,12,139,27],[234,18,139,31],[234,19,139,32,"setState"],[234,27,139,27],[234,28,139,41],[235,0,139,43,"locations"],[235,14,139,43,"locations"],[235,23,139,52],[235,25,139,54],[236,0,139,41],[236,13,139,27],[237,0,140,26],[237,11,137,23],[238,0,137,23],[239,0,137,23],[240,0,137,23],[241,0,137,23],[242,0,137,23],[242,11,142,25],[242,40,142,26],[242,57,142,25],[243,0,142,31],[243,10,142,31],[243,15,142,36],[243,17,142,38,"styles"],[243,23,142,44],[243,24,142,45,"welcome"],[243,31,142,25],[244,0,142,25],[245,0,142,25],[246,0,142,25],[247,0,142,25],[248,0,142,25],[248,23,137,23],[248,24,102,21],[248,25,101,19],[249,0,146,18],[252,4,5,33,"React"],[252,19,5,39,"Component"],[252,28],[256,0,149,0],[256,6,149,4,"styles"],[256,12,149,10],[256,15,149,13,"StyleSheet"],[256,39,149,24,"create"],[256,45,149,13],[256,46,149,31],[257,0,150,2,"container"],[257,4,150,2,"container"],[257,13,150,11],[257,15,150,13],[258,0,151,4,"flex"],[258,6,151,4,"flex"],[258,10,151,8],[258,12,151,10],[258,13,150,13],[259,0,152,4,"justifyContent"],[259,6,152,4,"justifyContent"],[259,20,152,18],[259,22,152,20],[259,30,150,13],[260,0,153,4,"alignItems"],[260,6,153,4,"alignItems"],[260,16,153,14],[260,18,153,16],[260,26,150,13],[261,0,154,4,"backgroundColor"],[261,6,154,4,"backgroundColor"],[261,21,154,19],[261,23,154,21],[262,0,150,13],[262,5,149,31],[263,0,156,2,"welcome"],[263,4,156,2,"welcome"],[263,11,156,9],[263,13,156,11],[264,0,157,4,"fontSize"],[264,6,157,4,"fontSize"],[264,14,157,12],[264,16,157,14],[264,18,156,11],[265,0,158,4,"textAlign"],[265,6,158,4,"textAlign"],[265,15,158,13],[265,17,158,15],[265,25,156,11],[266,0,159,4,"margin"],[266,6,159,4,"margin"],[266,12,159,10],[266,14,159,12],[267,0,156,11],[268,0,149,31],[268,3,149,13],[268,4,149,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","navigator.geolocation.watchPosition$argument_0","componentWillUnmount","findCoordinates","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;qCCU;qBCE;sBDG;qBEC,6BF;qBGQ;sBHG;kBDE;wCKC;kBLE;mCME;qBJE;sBII;qBHC,mCG;kBNO;8BOE;kBP8B;2BQE;8CCG;sBDE;kBRO;iBUC;oDDe;4BCO;kCCgB;0BDE;kBVM;gBDC"}},"type":"js/module"}]}