{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":239,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,16,10,"locations"],[55,12,16,10,"locations"],[55,21,16,19],[55,66,16,25],[55,72,16,30,"state"],[55,77,16,25],[55,78,16,36,"locations"],[55,87,16,19],[55,91,16,47,"pos"],[55,94,16,19],[56,0,15,22],[56,11,15,8],[57,0,18,7],[57,9,13,4],[57,11,19,6],[57,21,19,6,"error"],[57,26,19,11],[58,0,19,11],[58,17,19,15,"Alert"],[58,36,19,21,"alert"],[58,41,19,15],[58,42,19,27,"error"],[58,47,19,32],[58,48,19,33,"message"],[58,55,19,15],[58,56,19,11],[59,0,19,11],[59,9,13,4],[59,11,20,6],[60,0,21,8,"enableHighAccuracy"],[60,10,21,8,"enableHighAccuracy"],[60,28,21,26],[60,30,21,28],[60,34,20,6],[61,0,22,8,"timeout"],[61,10,22,8,"timeout"],[61,17,22,15],[61,19,22,17],[61,21,20,6],[62,0,23,8,"maximumAge"],[62,10,23,8,"maximumAge"],[62,20,23,18],[62,22,23,20],[63,0,20,6],[63,9,13,4],[64,0,26,3],[64,7],[66,12,28,2,"getDistace"],[66,22],[66,25,28,15],[66,37,28,21],[67,0,29,4],[67,12,29,8],[67,18,29,13,"state"],[67,23,29,8],[67,24,29,19,"locations"],[67,33,29,8],[67,34,29,29,"length"],[67,40,29,8],[67,44,29,39],[67,45,29,4],[67,47,29,42],[68,0,30,6],[68,14,30,10,"cood1"],[68,19,30,15],[68,22,30,18],[68,28,30,23,"state"],[68,33,30,18],[68,34,30,29,"locations"],[68,43,30,18],[68,44,30,39],[68,45,30,18],[68,47,30,42,"coords"],[68,53,30,6],[69,0,31,6],[69,14,31,10,"cood2"],[69,19,31,15],[69,22,31,18],[69,28,31,23,"state"],[69,33,31,18],[69,34,31,29,"locations"],[69,43,31,18],[69,44,31,39],[69,45,31,18],[69,47,31,42,"coords"],[69,53,31,6],[70,0,33,6],[70,14,33,10,"point1"],[70,20,33,16],[70,23,33,19],[71,0,34,8,"longitude"],[71,12,34,8,"longitude"],[71,21,34,17],[71,23,34,19,"cood1"],[71,28,34,24],[71,29,34,25,"longitude"],[71,38,33,19],[72,0,35,8,"latitude"],[72,12,35,8,"latitude"],[72,20,35,16],[72,22,35,18,"cood1"],[72,27,35,23],[72,28,35,24,"latitude"],[73,0,33,19],[73,11,33,6],[74,0,37,6],[74,14,37,10,"point2"],[74,20,37,16],[74,23,37,19],[75,0,38,8,"longitude"],[75,12,38,8,"longitude"],[75,21,38,17],[75,23,38,19,"cood2"],[75,28,38,24],[75,29,38,25,"longitude"],[75,38,37,19],[76,0,39,8,"latitude"],[76,12,39,8,"latitude"],[76,20,39,16],[76,22,39,18,"cood2"],[76,27,39,23],[76,28,39,24,"latitude"],[77,0,37,19],[77,11,37,6],[78,0,42,6],[78,14,42,10,"distance"],[78,22,42,18],[78,25,42,21,"geolib"],[78,31,42,27],[78,32,42,28,"getDistance"],[78,43,42,21],[78,44,42,40,"point1"],[78,50,42,21],[78,52,42,48,"point2"],[78,58,42,21],[78,60,42,56],[78,64,42,21],[78,65,42,6],[79,0,43,6],[79,14,43,10,"preciseDistance"],[79,29,43,25],[79,32,43,28,"geolib"],[79,38,43,34],[79,39,43,35,"getPreciseDistance"],[79,57,43,28],[79,58,43,54,"point2"],[79,64,43,28],[79,66,43,62,"point1"],[79,72,43,28],[79,74,43,70],[79,79,43,28],[79,80,43,6],[80,0,44,6,"console"],[80,10,44,6,"console"],[80,17,44,13],[80,18,44,14,"table"],[80,23,44,6],[80,24,44,20],[81,0,45,8,"point1"],[81,12,45,8,"point1"],[81,18,45,14],[81,20,45,8,"point1"],[81,26,44,20],[82,0,46,8,"point2"],[82,12,46,8,"point2"],[82,18,46,14],[82,20,46,8,"point2"],[82,26,44,20],[83,0,47,8,"distance"],[83,12,47,8,"distance"],[83,20,47,16],[83,22,47,8,"distance"],[83,30,44,20],[84,0,48,8,"preciseDistance"],[84,12,48,8,"preciseDistance"],[84,27,48,23],[84,29,48,8,"preciseDistance"],[85,0,44,20],[85,11,44,6],[87,0,50,6],[87,16,50,11,"setState"],[87,24,50,6],[87,25,50,20],[88,0,50,22,"distance"],[88,12,50,22,"distance"],[88,20,50,30],[88,22,50,22,"distance"],[89,0,50,20],[89,11,50,6],[90,0,51,5],[90,9,29,4],[90,15,51,11],[91,0,52,6,"Alert"],[91,29,52,12,"alert"],[91,34,52,6],[91,35,52,18],[91,68,52,6],[92,0,53,5],[93,0,54,3],[93,7],[95,12,56,2,"getArea"],[95,19],[95,22,56,12],[95,34,56,18],[96,0,57,4],[96,12,57,8,"myArr"],[96,17,57,13],[96,20,57,16],[96,22,57,4],[97,0,58,4],[97,14,58,9,"state"],[97,19,58,4],[97,20,58,15,"locations"],[97,29,58,4],[97,30,58,25,"length"],[97,36,58,4],[97,39,58,34],[97,40,58,4],[97,44,59,6],[97,50,59,11,"state"],[97,55,59,6],[97,56,59,17,"locations"],[97,65,59,6],[97,66,59,27,"map"],[97,69,59,6],[97,70,59,31],[97,80,59,31,"loc"],[97,83,59,34],[97,85,59,38],[98,0,60,8,"myArr"],[98,10,60,8,"myArr"],[98,15,60,13],[98,16,60,14,"push"],[98,20,60,8],[98,21,60,19],[98,22,60,20,"loc"],[98,25,60,23],[98,26,60,24,"coords"],[98,32,60,20],[98,33,60,31,"latitude"],[98,41,60,19],[98,43,60,41,"loc"],[98,46,60,44],[98,47,60,45,"coords"],[98,53,60,41],[98,54,60,52,"longitude"],[98,63,60,19],[98,64,60,8],[99,0,61,7],[99,9,59,6],[99,10,58,4],[100,0,62,4,"console"],[100,8,62,4,"console"],[100,15,62,11],[100,16,62,12,"log"],[100,19,62,4],[100,20,62,16],[100,29,62,4],[100,31,62,27,"myArr"],[100,36,62,4],[102,0,63,4],[102,12,63,8,"myArr"],[102,17,63,13],[102,18,63,14,"length"],[102,24,63,8],[102,27,63,23],[102,28,63,4],[102,30,63,26],[103,0,64,6],[103,14,64,10,"data"],[103,18,64,14],[103,21,64,17,"geolib"],[103,27,64,23],[103,28,64,24,"getAreaOfPolygon"],[103,44,64,17],[103,45,64,41,"myArr"],[103,50,64,17],[103,51,64,6],[105,0,66,6],[105,16,66,11,"setState"],[105,24,66,6],[105,25,66,20],[106,0,66,22,"area"],[106,12,66,22,"area"],[106,16,66,26],[106,18,66,28,"data"],[107,0,66,20],[107,11,66,6],[108,0,67,5],[109,0,68,3],[109,7],[116,31,69,11],[117,0,69,11],[119,0,70,4],[119,15,71,6],[119,44,71,7],[119,61,71,6],[120,0,71,12],[120,10,71,12],[120,15,71,17],[120,17,71,19,"styles"],[120,23,71,25],[120,24,71,26,"container"],[120,33,71,6],[121,0,71,6],[122,0,71,6],[123,0,71,6],[124,0,71,6],[125,0,71,6],[125,11,72,8],[125,40,72,9],[125,69,72,8],[126,0,72,26],[126,10,72,26],[126,17,72,33],[126,19,72,35],[126,24,72,40,"findCoordinates"],[126,39,72,8],[127,0,72,8],[128,0,72,8],[129,0,72,8],[130,0,72,8],[131,0,72,8],[131,11,73,10],[131,40,73,11],[131,57,73,10],[132,0,73,16],[132,10,73,16],[132,15,73,21],[132,17,73,23,"styles"],[132,23,73,29],[132,24,73,30,"welcome"],[132,31,73,10],[133,0,73,10],[134,0,73,10],[135,0,73,10],[136,0,73,10],[137,0,73,10],[137,29,72,8],[137,30,71,6],[137,32,76,8],[137,61,76,9],[137,78,76,8],[138,0,77,10],[138,10,77,10],[138,15,77,15],[138,17,77,17],[139,0,78,12,"display"],[139,12,78,12,"display"],[139,19,78,19],[139,21,78,21],[139,27,77,17],[140,0,79,12,"flexDirection"],[140,12,79,12,"flexDirection"],[140,25,79,25],[140,27,79,27],[140,32,77,17],[141,0,80,12,"flexWrap"],[141,12,80,12,"flexWrap"],[141,20,80,20],[141,22,80,22],[142,0,77,17],[142,11,76,8],[143,0,76,8],[144,0,76,8],[145,0,76,8],[146,0,76,8],[147,0,76,8],[147,11,83,11],[147,16,83,16,"state"],[147,21,83,11],[147,22,83,22,"locations"],[147,31,83,11],[147,32,83,32,"length"],[147,38,83,11],[147,41,83,41],[147,42,83,11],[147,46,84,12],[147,51,84,17,"state"],[147,56,84,12],[147,57,84,23,"locations"],[147,66,84,12],[147,67,84,33,"map"],[147,70,84,12],[147,71,84,37],[147,81,84,38,"loc"],[147,84,84,37],[147,86,84,43,"key"],[147,89,84,37],[147,91,84,51],[148,0,85,14],[148,17,86,16],[148,46,86,17],[148,63,86,16],[149,0,86,22],[149,12,86,22],[149,17,86,27],[149,19,86,29],[150,0,86,31,"padding"],[150,14,86,31,"padding"],[150,21,86,38],[150,23,86,40],[151,0,86,29],[151,13,86,16],[152,0,86,46],[152,12,86,46],[152,15,86,49],[152,17,86,51,"key"],[152,20,86,16],[153,0,86,16],[154,0,86,16],[155,0,86,16],[156,0,86,16],[157,0,86,16],[157,13,87,18],[157,42,87,19],[157,59,87,18],[158,0,87,18],[159,0,87,18],[160,0,87,18],[161,0,87,18],[162,0,87,18],[162,13,87,25,"loc"],[162,16,87,28],[162,17,87,29,"coords"],[162,23,87,25],[162,24,87,36,"latitude"],[162,32,87,18],[162,33,86,16],[162,35,88,18],[162,64,88,19],[162,81,88,18],[163,0,88,18],[164,0,88,18],[165,0,88,18],[166,0,88,18],[167,0,88,18],[167,13,88,25,"loc"],[167,16,88,28],[167,17,88,29,"coords"],[167,23,88,25],[167,24,88,36,"longitude"],[167,33,88,18],[167,34,86,16],[167,35,85,14],[168,0,91,13],[168,9,84,12],[168,10,76,8],[168,11,71,6],[168,13,93,8],[168,42,93,9],[168,71,93,8],[169,0,93,26],[169,10,93,26],[169,17,93,33],[169,19,93,35],[169,24,93,40,"getDistace"],[169,34,93,8],[170,0,93,8],[171,0,93,8],[172,0,93,8],[173,0,93,8],[174,0,93,8],[174,11,94,10],[174,40,94,11],[174,57,94,10],[175,0,94,16],[175,10,94,16],[175,15,94,21],[175,17,94,23,"styles"],[175,23,94,29],[175,24,94,30,"welcome"],[175,31,94,10],[176,0,94,10],[177,0,94,10],[178,0,94,10],[179,0,94,10],[180,0,94,10],[180,26,93,8],[180,28,95,11],[180,33,95,16,"state"],[180,38,95,11],[180,39,95,22,"distance"],[180,47,95,11],[180,51,95,34],[180,80,95,35],[180,97,95,34],[181,0,95,34],[182,0,95,34],[183,0,95,34],[184,0,95,34],[185,0,95,34],[185,11,95,41],[185,16,95,46,"state"],[185,21,95,41],[185,22,95,52,"distance"],[185,30,95,34],[185,43,93,8],[185,44,71,6],[185,46,97,8],[185,75,97,9],[185,104,97,8],[186,0,97,26],[186,10,97,26],[186,17,97,33],[186,19,97,35],[186,24,97,40,"getArea"],[186,31,97,8],[187,0,97,8],[188,0,97,8],[189,0,97,8],[190,0,97,8],[191,0,97,8],[191,11,98,10],[191,40,98,11],[191,57,98,10],[192,0,98,16],[192,10,98,16],[192,15,98,21],[192,17,98,23,"styles"],[192,23,98,29],[192,24,98,30,"welcome"],[192,31,98,10],[193,0,98,10],[194,0,98,10],[195,0,98,10],[196,0,98,10],[197,0,98,10],[197,22,97,8],[197,24,99,11],[197,29,99,16,"state"],[197,34,99,11],[197,35,99,22,"area"],[197,39,99,11],[197,43,99,30],[197,72,99,31],[197,89,99,30],[198,0,99,30],[199,0,99,30],[200,0,99,30],[201,0,99,30],[202,0,99,30],[202,11,99,37],[202,16,99,42,"state"],[202,21,99,37],[202,22,99,48,"area"],[202,26,99,30],[202,44,97,8],[202,45,71,6],[202,47,102,8],[202,76,102,9],[202,105,102,8],[203,0,103,10],[203,10,103,10],[203,17,103,17],[203,19,103,19],[203,38,103,25],[204,0,104,12],[204,12,104,12],[204,18,104,16],[204,19,104,17,"setState"],[204,27,104,12],[204,28,104,26],[205,0,104,28,"locations"],[205,14,104,28,"locations"],[205,23,104,37],[205,25,104,39],[206,0,104,26],[206,13,104,12],[207,0,105,11],[207,11,102,8],[208,0,102,8],[209,0,102,8],[210,0,102,8],[211,0,102,8],[212,0,102,8],[212,11,107,10],[212,40,107,11],[212,57,107,10],[213,0,107,16],[213,10,107,16],[213,15,107,21],[213,17,107,23,"styles"],[213,23,107,29],[213,24,107,30,"welcome"],[213,31,107,10],[214,0,107,10],[215,0,107,10],[216,0,107,10],[217,0,107,10],[218,0,107,10],[218,23,102,8],[218,24,71,6],[218,25,70,4],[219,0,111,3],[222,4,5,33,"React"],[222,19,5,39,"Component"],[222,28],[226,0,114,0],[226,6,114,4,"styles"],[226,12,114,10],[226,15,114,13,"StyleSheet"],[226,39,114,24,"create"],[226,45,114,13],[226,46,114,31],[227,0,115,2,"container"],[227,4,115,2,"container"],[227,13,115,11],[227,15,115,13],[228,0,116,4,"flex"],[228,6,116,4,"flex"],[228,10,116,8],[228,12,116,10],[228,13,115,13],[229,0,117,4,"justifyContent"],[229,6,117,4,"justifyContent"],[229,20,117,18],[229,22,117,20],[229,30,115,13],[230,0,118,4,"alignItems"],[230,6,118,4,"alignItems"],[230,16,118,14],[230,18,118,16],[230,26,115,13],[231,0,119,4,"backgroundColor"],[231,6,119,4,"backgroundColor"],[231,21,119,19],[231,23,119,21],[232,0,115,13],[232,5,114,31],[233,0,121,2,"welcome"],[233,4,121,2,"welcome"],[233,11,121,9],[233,13,121,11],[234,0,122,4,"fontSize"],[234,6,122,4,"fontSize"],[234,14,122,12],[234,16,122,14],[234,18,121,11],[235,0,123,4,"textAlign"],[235,6,123,4,"textAlign"],[235,15,123,13],[235,17,123,15],[235,25,121,11],[236,0,124,4,"margin"],[236,6,124,4,"margin"],[236,12,124,10],[236,14,124,12],[237,0,121,11],[238,0,114,31],[238,3,114,13],[238,4,114,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;oBCO;MCE;ODI;MEC,mCF;GDO;eIE;GJ0B;YKE;+BCG;ODE;GLO;EOC;qCDe;aCO;mBCY;WDE;GPM;CDC"}},"type":"js/module"}]}