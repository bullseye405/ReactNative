{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var points = [[cood1.logitude, cood1.latitude], [cood2.logitude, cood2.latitude]];\n          var distance = geolib.getDistance(points);\n          var preciseDistance = geolib.getPreciseDistance(points);\n          console.log(distance, preciseDistance);\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          }\n        }, this.state.distance)), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, this.state.area)));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":203,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,30,6],[70,14,30,10,"points"],[70,20,30,16],[70,23,30,19],[70,24,31,8],[70,25,31,9,"cood1"],[70,30,31,14],[70,31,31,15,"logitude"],[70,39,31,8],[70,41,31,25,"cood1"],[70,46,31,30],[70,47,31,31,"latitude"],[70,55,31,8],[70,56,30,19],[70,58,32,8],[70,59,32,9,"cood2"],[70,64,32,14],[70,65,32,15,"logitude"],[70,73,32,8],[70,75,32,25,"cood2"],[70,80,32,30],[70,81,32,31,"latitude"],[70,89,32,8],[70,90,30,19],[70,91,30,6],[71,0,34,6],[71,14,34,10,"distance"],[71,22,34,18],[71,25,34,21,"geolib"],[71,31,34,27],[71,32,34,28,"getDistance"],[71,43,34,21],[71,44,34,40,"points"],[71,50,34,21],[71,51,34,6],[72,0,35,6],[72,14,35,10,"preciseDistance"],[72,29,35,25],[72,32,35,28,"geolib"],[72,38,35,34],[72,39,35,35,"getPreciseDistance"],[72,57,35,28],[72,58,35,54,"points"],[72,64,35,28],[72,65,35,6],[73,0,36,6,"console"],[73,10,36,6,"console"],[73,17,36,13],[73,18,36,14,"log"],[73,21,36,6],[73,22,36,18,"distance"],[73,30,36,6],[73,32,36,28,"preciseDistance"],[73,47,36,6],[74,0,37,5],[75,0,38,3],[75,7],[77,12,40,2,"getArea"],[77,19],[77,22,40,12],[77,34,40,18],[78,0,41,4],[78,12,41,8,"myArr"],[78,17,41,13],[78,20,41,16],[78,22,41,4],[79,0,42,4],[79,14,42,9,"state"],[79,19,42,4],[79,20,42,15,"locations"],[79,29,42,4],[79,30,42,25,"length"],[79,36,42,4],[79,39,42,34],[79,40,42,4],[79,44,43,6],[79,50,43,11,"state"],[79,55,43,6],[79,56,43,17,"locations"],[79,65,43,6],[79,66,43,27,"map"],[79,69,43,6],[79,70,43,31],[79,80,43,31,"loc"],[79,83,43,34],[79,85,43,38],[80,0,44,8,"myArr"],[80,10,44,8,"myArr"],[80,15,44,13],[80,16,44,14,"push"],[80,20,44,8],[80,21,44,19],[80,22,44,20,"loc"],[80,25,44,23],[80,26,44,24,"coords"],[80,32,44,20],[80,33,44,31,"latitude"],[80,41,44,19],[80,43,44,41,"loc"],[80,46,44,44],[80,47,44,45,"coords"],[80,53,44,41],[80,54,44,52,"longitude"],[80,63,44,19],[80,64,44,8],[81,0,45,7],[81,9,43,6],[81,10,42,4],[82,0,46,4,"console"],[82,8,46,4,"console"],[82,15,46,11],[82,16,46,12,"log"],[82,19,46,4],[82,20,46,16],[82,29,46,4],[82,31,46,27,"myArr"],[82,36,46,4],[84,0,47,4],[84,12,47,8,"myArr"],[84,17,47,13],[84,18,47,14,"length"],[84,24,47,8],[84,27,47,23],[84,28,47,4],[84,30,47,26],[85,0,48,6],[85,14,48,10,"data"],[85,18,48,14],[85,21,48,17,"geolib"],[85,27,48,23],[85,28,48,24,"getAreaOfPolygon"],[85,44,48,17],[85,45,48,41,"myArr"],[85,50,48,17],[85,51,48,6],[87,0,50,6],[87,16,50,11,"setState"],[87,24,50,6],[87,25,50,20],[88,0,50,22,"area"],[88,12,50,22,"area"],[88,16,50,26],[88,18,50,28,"data"],[89,0,50,20],[89,11,50,6],[90,0,51,5],[91,0,52,3],[91,7],[98,31,53,11],[99,0,54,4],[99,15,55,6],[99,44,55,7],[99,61,55,6],[100,0,55,12],[100,10,55,12],[100,15,55,17],[100,17,55,19,"styles"],[100,23,55,25],[100,24,55,26,"container"],[100,33,55,6],[101,0,55,6],[102,0,55,6],[103,0,55,6],[104,0,55,6],[105,0,55,6],[105,11,56,8],[105,40,56,9],[105,69,56,8],[106,0,56,26],[106,10,56,26],[106,17,56,33],[106,19,56,35],[106,24,56,40,"findCoordinates"],[106,39,56,8],[107,0,56,8],[108,0,56,8],[109,0,56,8],[110,0,56,8],[111,0,56,8],[111,11,57,10],[111,40,57,11],[111,57,57,10],[112,0,57,16],[112,10,57,16],[112,15,57,21],[112,17,57,23,"styles"],[112,23,57,29],[112,24,57,30,"welcome"],[112,31,57,10],[113,0,57,10],[114,0,57,10],[115,0,57,10],[116,0,57,10],[117,0,57,10],[117,29,56,8],[117,30,55,6],[117,32,60,8],[117,61,60,9],[117,78,60,8],[118,0,61,10],[118,10,61,10],[118,15,61,15],[118,17,61,17],[119,0,61,19,"display"],[119,12,61,19,"display"],[119,19,61,26],[119,21,61,28],[119,27,61,17],[120,0,61,36,"flexDirection"],[120,12,61,36,"flexDirection"],[120,25,61,49],[120,27,61,51],[120,32,61,17],[121,0,61,58,"flexWrap"],[121,12,61,58,"flexWrap"],[121,20,61,66],[121,22,61,68],[122,0,61,17],[122,11,60,8],[123,0,60,8],[124,0,60,8],[125,0,60,8],[126,0,60,8],[127,0,60,8],[127,11,63,11],[127,16,63,16,"state"],[127,21,63,11],[127,22,63,22,"locations"],[127,31,63,11],[127,32,63,32,"length"],[127,38,63,11],[127,41,63,41],[127,42,63,11],[127,46,64,12],[127,51,64,17,"state"],[127,56,64,12],[127,57,64,23,"locations"],[127,66,64,12],[127,67,64,33,"map"],[127,70,64,12],[127,71,64,37],[127,81,64,38,"loc"],[127,84,64,37],[127,86,64,43,"key"],[127,89,64,37],[127,91,64,51],[128,0,65,14],[128,17,66,16],[128,46,66,17],[128,63,66,16],[129,0,66,22],[129,12,66,22],[129,17,66,27],[129,19,66,29],[130,0,66,31,"padding"],[130,14,66,31,"padding"],[130,21,66,38],[130,23,66,40],[131,0,66,29],[131,13,66,16],[132,0,66,46],[132,12,66,46],[132,15,66,49],[132,17,66,51,"key"],[132,20,66,16],[133,0,66,16],[134,0,66,16],[135,0,66,16],[136,0,66,16],[137,0,66,16],[137,13,67,18],[137,42,67,19],[137,59,67,18],[138,0,67,18],[139,0,67,18],[140,0,67,18],[141,0,67,18],[142,0,67,18],[142,13,67,25,"loc"],[142,16,67,28],[142,17,67,29,"coords"],[142,23,67,25],[142,24,67,36,"latitude"],[142,32,67,18],[142,33,66,16],[142,35,68,18],[142,64,68,19],[142,81,68,18],[143,0,68,18],[144,0,68,18],[145,0,68,18],[146,0,68,18],[147,0,68,18],[147,13,68,25,"loc"],[147,16,68,28],[147,17,68,29,"coords"],[147,23,68,25],[147,24,68,36,"longitude"],[147,33,68,18],[147,34,66,16],[147,35,65,14],[148,0,71,13],[148,9,64,12],[148,10,60,8],[148,11,55,6],[148,13,73,8],[148,42,73,9],[148,71,73,8],[149,0,73,26],[149,10,73,26],[149,17,73,33],[149,19,73,35],[149,24,73,40,"getDistace"],[149,34,73,8],[150,0,73,8],[151,0,73,8],[152,0,73,8],[153,0,73,8],[154,0,73,8],[154,11,74,10],[154,40,74,11],[154,57,74,10],[155,0,74,16],[155,10,74,16],[155,15,74,21],[155,17,74,23,"styles"],[155,23,74,29],[155,24,74,30,"welcome"],[155,31,74,10],[156,0,74,10],[157,0,74,10],[158,0,74,10],[159,0,74,10],[160,0,74,10],[160,26,73,8],[160,28,75,11],[160,33,75,16,"state"],[160,38,75,11],[160,39,75,22,"distance"],[160,47,75,11],[160,51,75,34],[160,80,75,35],[160,97,75,34],[161,0,75,34],[162,0,75,34],[163,0,75,34],[164,0,75,34],[165,0,75,34],[165,11,75,41],[165,16,75,46,"state"],[165,21,75,41],[165,22,75,52,"distance"],[165,30,75,34],[165,31,73,8],[165,32,55,6],[165,34,77,8],[165,63,77,9],[165,92,77,8],[166,0,77,26],[166,10,77,26],[166,17,77,33],[166,19,77,35],[166,24,77,40,"getArea"],[166,31,77,8],[167,0,77,8],[168,0,77,8],[169,0,77,8],[170,0,77,8],[171,0,77,8],[171,11,78,10],[171,40,78,11],[171,57,78,10],[172,0,78,16],[172,10,78,16],[172,15,78,21],[172,17,78,23,"styles"],[172,23,78,29],[172,24,78,30,"welcome"],[172,31,78,10],[173,0,78,10],[174,0,78,10],[175,0,78,10],[176,0,78,10],[177,0,78,10],[177,22,77,8],[177,24,79,11],[177,29,79,16,"state"],[177,34,79,11],[177,35,79,22,"area"],[177,39,79,11],[177,43,79,30],[177,72,79,31],[177,89,79,30],[178,0,79,30],[179,0,79,30],[180,0,79,30],[181,0,79,30],[182,0,79,30],[182,11,79,37],[182,16,79,42,"state"],[182,21,79,37],[182,22,79,48,"area"],[182,26,79,30],[182,27,77,8],[182,28,55,6],[182,29,54,4],[183,0,83,3],[186,4,5,33,"React"],[186,19,5,39,"Component"],[186,28],[190,0,86,0],[190,6,86,4,"styles"],[190,12,86,10],[190,15,86,13,"StyleSheet"],[190,39,86,24,"create"],[190,45,86,13],[190,46,86,31],[191,0,87,2,"container"],[191,4,87,2,"container"],[191,13,87,11],[191,15,87,13],[192,0,88,4,"flex"],[192,6,88,4,"flex"],[192,10,88,8],[192,12,88,10],[192,13,87,13],[193,0,89,4,"justifyContent"],[193,6,89,4,"justifyContent"],[193,20,89,18],[193,22,89,20],[193,30,87,13],[194,0,90,4,"alignItems"],[194,6,90,4,"alignItems"],[194,16,90,14],[194,18,90,16],[194,26,87,13],[195,0,91,4,"backgroundColor"],[195,6,91,4,"backgroundColor"],[195,21,91,19],[195,23,91,21],[196,0,87,13],[196,5,86,31],[197,0,93,2,"welcome"],[197,4,93,2,"welcome"],[197,11,93,9],[197,13,93,11],[198,0,94,4,"fontSize"],[198,6,94,4,"fontSize"],[198,14,94,12],[198,16,94,14],[198,18,93,11],[199,0,95,4,"textAlign"],[199,6,95,4,"textAlign"],[199,15,95,13],[199,17,95,15],[199,25,93,11],[200,0,96,4,"margin"],[200,6,96,4,"margin"],[200,12,96,10],[200,14,96,12],[201,0,93,11],[202,0,86,31],[202,3,86,13],[202,4,86,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJY;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;GPY;CDC"}},"type":"js/module"}]}