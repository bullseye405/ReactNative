{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var initialPosition = JSON.stringify(position);\n\n          _this.setState({\n            initialPosition: initialPosition\n          });\n        }, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = JSON.stringify(position);\n\n          _this.setState({\n            lastPosition: lastPosition\n          });\n        });\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":267,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,17,"state"],[46,17],[46,20,6,25],[47,0,7,19,"locations"],[47,8,7,19,"locations"],[47,17,7,28],[47,19,7,30],[47,21,6,25],[48,0,8,19,"area"],[48,8,8,19,"area"],[48,12,8,23],[48,14,8,25],[48,18,6,25],[49,0,9,19,"distance"],[49,8,9,19,"distance"],[49,16,9,27],[49,18,9,29],[50,0,6,25],[50,7],[51,12,12,17,"watchID"],[51,19],[51,22,12,36],[51,26],[53,12,13,17,"componentDidMount"],[53,29],[53,32,13,37],[53,44,13,43],[54,0,14,19,"navigator"],[54,8,14,19,"navigator"],[54,17,14,28],[54,18,14,29,"geolocation"],[54,29,14,19],[54,30,14,41,"getCurrentPosition"],[54,48,14,19],[54,49,15,21],[54,59,15,21,"position"],[54,67,15,29],[54,69,15,33],[55,0,16,23],[55,14,16,29,"initialPosition"],[55,29,16,44],[55,32,16,47,"JSON"],[55,36,16,51],[55,37,16,52,"stringify"],[55,46,16,47],[55,47,16,62,"position"],[55,55,16,47],[55,56,16,23],[57,0,17,23],[57,16,17,28,"setState"],[57,24,17,23],[57,25,17,37],[58,0,17,39,"initialPosition"],[58,12,17,39,"initialPosition"],[58,27,17,54],[58,29,17,39,"initialPosition"],[59,0,17,37],[59,11,17,23],[60,0,18,22],[60,9,14,19],[60,11,19,21],[60,21,19,21,"error"],[60,26,19,26],[61,0,19,26],[61,17,19,30,"alert"],[61,22,19,35],[61,23,19,36,"error"],[61,28,19,41],[61,29,19,42,"message"],[61,36,19,35],[61,37,19,26],[62,0,19,26],[62,9,14,19],[62,11,20,21],[63,0,21,23,"enableHighAccuracy"],[63,10,21,23,"enableHighAccuracy"],[63,28,21,41],[63,30,21,43],[63,34,20,21],[64,0,22,23,"timeout"],[64,10,22,23,"timeout"],[64,17,22,30],[64,19,22,32],[64,24,20,21],[65,0,23,23,"maximumAge"],[65,10,23,23,"maximumAge"],[65,20,23,33],[65,22,23,35],[66,0,20,21],[66,9,14,19],[67,0,26,19],[67,14,26,24,"watchID"],[67,21,26,19],[67,24,26,34,"navigator"],[67,33,26,43],[67,34,26,44,"geolocation"],[67,45,26,34],[67,46,26,56,"watchPosition"],[67,59,26,34],[67,60,27,21],[67,70,27,21,"position"],[67,78,27,29],[67,80,27,33],[68,0,28,23],[68,14,28,29,"lastPosition"],[68,26,28,41],[68,29,28,44,"JSON"],[68,33,28,48],[68,34,28,49,"stringify"],[68,43,28,44],[68,44,28,59,"position"],[68,52,28,44],[68,53,28,23],[70,0,29,23],[70,16,29,28,"setState"],[70,24,29,23],[70,25,29,37],[71,0,29,39,"lastPosition"],[71,12,29,39,"lastPosition"],[71,24,29,51],[71,26,29,39,"lastPosition"],[72,0,29,37],[72,11,29,23],[73,0,30,22],[73,9,26,34],[73,10,26,19],[74,0,32,18],[74,7],[76,12,33,17,"componentWillUnmount"],[76,32],[76,35,33,40],[76,47,33,46],[77,0,34,19,"navigator"],[77,8,34,19,"navigator"],[77,17,34,28],[77,18,34,29,"geolocation"],[77,29,34,19],[77,30,34,41,"clearWatch"],[77,40,34,19],[77,41,34,52],[77,47,34,57,"watchID"],[77,54,34,19],[78,0,35,18],[78,7],[80,12,37,17,"findCoordinates"],[80,27],[80,30,37,35],[80,42,37,41],[81,0,38,19,"navigator"],[81,8,38,19,"navigator"],[81,17,38,28],[81,18,38,29,"geolocation"],[81,29,38,19],[81,30,38,41,"getCurrentPosition"],[81,48,38,19],[81,49,39,21],[81,59,39,21,"pos"],[81,62,39,24],[81,64,39,28],[82,0,40,23],[82,16,40,28,"setState"],[82,24,40,23],[82,25,40,37],[83,0,41,25,"locations"],[83,12,41,25,"locations"],[83,21,41,34],[83,66,41,40],[83,72,41,45,"state"],[83,77,41,40],[83,78,41,51,"locations"],[83,87,41,34],[83,91,41,62,"pos"],[83,94,41,34],[84,0,40,37],[84,11,40,23],[85,0,43,22],[85,9,38,19],[85,11,44,21],[85,21,44,21,"error"],[85,26,44,26],[86,0,44,26],[86,17,44,30,"Alert"],[86,36,44,36,"alert"],[86,41,44,30],[86,42,44,42,"error"],[86,47,44,47],[86,48,44,48,"message"],[86,55,44,30],[86,56,44,26],[87,0,44,26],[87,9,38,19],[87,11,45,21],[88,0,46,23,"enableHighAccuracy"],[88,10,46,23,"enableHighAccuracy"],[88,28,46,41],[88,30,46,43],[88,34,45,21],[89,0,47,23,"timeout"],[89,10,47,23,"timeout"],[89,17,47,30],[89,19,47,32],[89,24,45,21],[90,0,48,23,"maximumAge"],[90,10,48,23,"maximumAge"],[90,20,48,33],[90,22,48,35],[91,0,45,21],[91,9,38,19],[92,0,51,18],[92,7],[94,12,53,17,"getDistace"],[94,22],[94,25,53,30],[94,37,53,36],[95,0,54,19],[95,12,54,23],[95,18,54,28,"state"],[95,23,54,23],[95,24,54,34,"locations"],[95,33,54,23],[95,34,54,44,"length"],[95,40,54,23],[95,44,54,54],[95,45,54,19],[95,47,54,57],[96,0,55,21],[96,14,55,25,"cood1"],[96,19,55,30],[96,22,55,33],[96,28,55,38,"state"],[96,33,55,33],[96,34,55,44,"locations"],[96,43,55,33],[96,44,55,54],[96,45,55,33],[96,47,55,57,"coords"],[96,53,55,21],[97,0,56,21],[97,14,56,25,"cood2"],[97,19,56,30],[97,22,56,33],[97,28,56,38,"state"],[97,33,56,33],[97,34,56,44,"locations"],[97,43,56,33],[97,44,56,54],[97,45,56,33],[97,47,56,57,"coords"],[97,53,56,21],[98,0,58,21],[98,14,58,25,"point1"],[98,20,58,31],[98,23,58,34],[99,0,59,23,"longitude"],[99,12,59,23,"longitude"],[99,21,59,32],[99,23,59,34,"cood1"],[99,28,59,39],[99,29,59,40,"longitude"],[99,38,58,34],[100,0,60,23,"latitude"],[100,12,60,23,"latitude"],[100,20,60,31],[100,22,60,33,"cood1"],[100,27,60,38],[100,28,60,39,"latitude"],[101,0,58,34],[101,11,58,21],[102,0,62,21],[102,14,62,25,"point2"],[102,20,62,31],[102,23,62,34],[103,0,63,23,"longitude"],[103,12,63,23,"longitude"],[103,21,63,32],[103,23,63,34,"cood2"],[103,28,63,39],[103,29,63,40,"longitude"],[103,38,62,34],[104,0,64,23,"latitude"],[104,12,64,23,"latitude"],[104,20,64,31],[104,22,64,33,"cood2"],[104,27,64,38],[104,28,64,39,"latitude"],[105,0,62,34],[105,11,62,21],[106,0,67,21],[106,14,67,25,"distance"],[106,22,67,33],[106,25,67,36,"geolib"],[106,31,67,42],[106,32,67,43,"getDistance"],[106,43,67,36],[106,44,67,55,"point1"],[106,50,67,36],[106,52,67,63,"point2"],[106,58,67,36],[106,60,67,71],[106,64,67,36],[106,65,67,21],[107,0,68,21],[107,14,68,25,"preciseDistance"],[107,29,68,40],[107,32,68,43,"geolib"],[107,38,68,49],[107,39,68,50,"getPreciseDistance"],[107,57,68,43],[107,58,69,23,"point2"],[107,64,68,43],[107,66,70,23,"point1"],[107,72,68,43],[107,74,71,23],[107,79,68,43],[107,80,68,21],[108,0,73,21,"console"],[108,10,73,21,"console"],[108,17,73,28],[108,18,73,29,"table"],[108,23,73,21],[108,24,73,35],[109,0,74,23,"point1"],[109,12,74,23,"point1"],[109,18,74,29],[109,20,74,23,"point1"],[109,26,73,35],[110,0,75,23,"point2"],[110,12,75,23,"point2"],[110,18,75,29],[110,20,75,23,"point2"],[110,26,73,35],[111,0,76,23,"distance"],[111,12,76,23,"distance"],[111,20,76,31],[111,22,76,23,"distance"],[111,30,73,35],[112,0,77,23,"preciseDistance"],[112,12,77,23,"preciseDistance"],[112,27,77,38],[112,29,77,23,"preciseDistance"],[113,0,73,35],[113,11,73,21],[115,0,79,21],[115,16,79,26,"setState"],[115,24,79,21],[115,25,79,35],[116,0,79,37,"distance"],[116,12,79,37,"distance"],[116,20,79,45],[116,22,79,37,"distance"],[117,0,79,35],[117,11,79,21],[118,0,80,20],[118,9,54,19],[118,15,80,26],[119,0,81,21,"Alert"],[119,29,81,27,"alert"],[119,34,81,21],[119,35,81,33],[119,68,81,21],[120,0,82,20],[121,0,83,18],[121,7],[123,12,85,17,"getArea"],[123,19],[123,22,85,27],[123,34,85,33],[124,0,86,19],[124,12,86,23,"myArr"],[124,17,86,28],[124,20,86,31],[124,22,86,19],[125,0,87,19],[125,14,87,24,"state"],[125,19,87,19],[125,20,87,30,"locations"],[125,29,87,19],[125,30,87,40,"length"],[125,36,87,19],[125,39,87,49],[125,40,87,19],[125,44,88,21],[125,50,88,26,"state"],[125,55,88,21],[125,56,88,32,"locations"],[125,65,88,21],[125,66,88,42,"map"],[125,69,88,21],[125,70,88,46],[125,80,88,46,"loc"],[125,83,88,49],[125,85,88,53],[126,0,89,23,"myArr"],[126,10,89,23,"myArr"],[126,15,89,28],[126,16,89,29,"push"],[126,20,89,23],[126,21,89,34],[126,22,89,35,"loc"],[126,25,89,38],[126,26,89,39,"coords"],[126,32,89,35],[126,33,89,46,"latitude"],[126,41,89,34],[126,43,89,56,"loc"],[126,46,89,59],[126,47,89,60,"coords"],[126,53,89,56],[126,54,89,67,"longitude"],[126,63,89,34],[126,64,89,23],[127,0,90,22],[127,9,88,21],[127,10,87,19],[128,0,91,19,"console"],[128,8,91,19,"console"],[128,15,91,26],[128,16,91,27,"log"],[128,19,91,19],[128,20,91,31],[128,29,91,19],[128,31,91,42,"myArr"],[128,36,91,19],[130,0,92,19],[130,12,92,23,"myArr"],[130,17,92,28],[130,18,92,29,"length"],[130,24,92,23],[130,27,92,38],[130,28,92,19],[130,30,92,41],[131,0,93,21],[131,14,93,25,"data"],[131,18,93,29],[131,21,93,32,"geolib"],[131,27,93,38],[131,28,93,39,"getAreaOfPolygon"],[131,44,93,32],[131,45,93,56,"myArr"],[131,50,93,32],[131,51,93,21],[133,0,95,21],[133,16,95,26,"setState"],[133,24,95,21],[133,25,95,35],[134,0,95,37,"area"],[134,12,95,37,"area"],[134,16,95,41],[134,18,95,43,"data"],[135,0,95,35],[135,11,95,21],[136,0,96,20],[137,0,97,18],[137,7],[144,31,98,26],[145,0,98,26],[147,0,99,19],[147,15,100,21],[147,44,100,22],[147,61,100,21],[148,0,100,27],[148,10,100,27],[148,15,100,32],[148,17,100,34,"styles"],[148,23,100,40],[148,24,100,41,"container"],[148,33,100,21],[149,0,100,21],[150,0,100,21],[151,0,100,21],[152,0,100,21],[153,0,100,21],[153,11,101,23],[153,40,101,24],[153,69,101,23],[154,0,101,41],[154,10,101,41],[154,17,101,48],[154,19,101,50],[154,24,101,55,"findCoordinates"],[154,39,101,23],[155,0,101,23],[156,0,101,23],[157,0,101,23],[158,0,101,23],[159,0,101,23],[159,11,102,25],[159,40,102,26],[159,57,102,25],[160,0,102,31],[160,10,102,31],[160,15,102,36],[160,17,102,38,"styles"],[160,23,102,44],[160,24,102,45,"welcome"],[160,31,102,25],[161,0,102,25],[162,0,102,25],[163,0,102,25],[164,0,102,25],[165,0,102,25],[165,29,101,23],[165,30,100,21],[165,32,105,23],[165,61,105,24],[165,78,105,23],[166,0,106,25],[166,10,106,25],[166,15,106,30],[166,17,106,32],[167,0,107,27,"display"],[167,12,107,27,"display"],[167,19,107,34],[167,21,107,36],[167,27,106,32],[168,0,108,27,"flexDirection"],[168,12,108,27,"flexDirection"],[168,25,108,40],[168,27,108,42],[168,32,106,32],[169,0,109,27,"flexWrap"],[169,12,109,27,"flexWrap"],[169,20,109,35],[169,22,109,37],[170,0,106,32],[170,11,105,23],[171,0,105,23],[172,0,105,23],[173,0,105,23],[174,0,105,23],[175,0,105,23],[175,11,112,26],[175,16,112,31,"state"],[175,21,112,26],[175,22,112,37,"locations"],[175,31,112,26],[175,32,112,47,"length"],[175,38,112,26],[175,41,112,56],[175,42,112,26],[175,46,113,27],[175,51,113,32,"state"],[175,56,113,27],[175,57,113,38,"locations"],[175,66,113,27],[175,67,113,48,"map"],[175,70,113,27],[175,71,113,52],[175,81,113,53,"loc"],[175,84,113,52],[175,86,113,58,"key"],[175,89,113,52],[175,91,113,66],[176,0,114,29],[176,17,115,31],[176,46,115,32],[176,63,115,31],[177,0,115,37],[177,12,115,37],[177,17,115,42],[177,19,115,44],[178,0,115,46,"padding"],[178,14,115,46,"padding"],[178,21,115,53],[178,23,115,55],[179,0,115,44],[179,13,115,31],[180,0,115,61],[180,12,115,61],[180,15,115,64],[180,17,115,66,"key"],[180,20,115,31],[181,0,115,31],[182,0,115,31],[183,0,115,31],[184,0,115,31],[185,0,115,31],[185,13,116,33],[185,42,116,34],[185,59,116,33],[186,0,116,33],[187,0,116,33],[188,0,116,33],[189,0,116,33],[190,0,116,33],[190,13,116,40,"loc"],[190,16,116,43],[190,17,116,44,"coords"],[190,23,116,40],[190,24,116,51,"latitude"],[190,32,116,33],[190,33,115,31],[190,35,117,33],[190,64,117,34],[190,81,117,33],[191,0,117,33],[192,0,117,33],[193,0,117,33],[194,0,117,33],[195,0,117,33],[195,13,117,40,"loc"],[195,16,117,43],[195,17,117,44,"coords"],[195,23,117,40],[195,24,117,51,"longitude"],[195,33,117,33],[195,34,115,31],[195,35,114,29],[196,0,120,28],[196,9,113,27],[196,10,105,23],[196,11,100,21],[196,13,122,23],[196,42,122,24],[196,71,122,23],[197,0,122,41],[197,10,122,41],[197,17,122,48],[197,19,122,50],[197,24,122,55,"getDistace"],[197,34,122,23],[198,0,122,23],[199,0,122,23],[200,0,122,23],[201,0,122,23],[202,0,122,23],[202,11,123,25],[202,40,123,26],[202,57,123,25],[203,0,123,31],[203,10,123,31],[203,15,123,36],[203,17,123,38,"styles"],[203,23,123,44],[203,24,123,45,"welcome"],[203,31,123,25],[204,0,123,25],[205,0,123,25],[206,0,123,25],[207,0,123,25],[208,0,123,25],[208,26,122,23],[208,28,124,26],[208,33,124,31,"state"],[208,38,124,26],[208,39,124,37,"distance"],[208,47,124,26],[208,51,125,27],[208,80,125,28],[208,97,125,27],[209,0,125,27],[210,0,125,27],[211,0,125,27],[212,0,125,27],[213,0,125,27],[213,11,125,34],[213,16,125,39,"state"],[213,21,125,34],[213,22,125,45,"distance"],[213,30,125,27],[213,43,122,23],[213,44,100,21],[213,46,128,23],[213,75,128,24],[213,104,128,23],[214,0,128,41],[214,10,128,41],[214,17,128,48],[214,19,128,50],[214,24,128,55,"getArea"],[214,31,128,23],[215,0,128,23],[216,0,128,23],[217,0,128,23],[218,0,128,23],[219,0,128,23],[219,11,129,25],[219,40,129,26],[219,57,129,25],[220,0,129,31],[220,10,129,31],[220,15,129,36],[220,17,129,38,"styles"],[220,23,129,44],[220,24,129,45,"welcome"],[220,31,129,25],[221,0,129,25],[222,0,129,25],[223,0,129,25],[224,0,129,25],[225,0,129,25],[225,22,128,23],[225,24,130,26],[225,29,130,31,"state"],[225,34,130,26],[225,35,130,37,"area"],[225,39,130,26],[225,43,131,27],[225,72,131,28],[225,89,131,27],[226,0,131,27],[227,0,131,27],[228,0,131,27],[229,0,131,27],[230,0,131,27],[230,11,131,34],[230,16,131,39,"state"],[230,21,131,34],[230,22,131,45,"area"],[230,26,131,27],[230,44,128,23],[230,45,100,21],[230,47,135,23],[230,76,135,24],[230,105,135,23],[231,0,136,25],[231,10,136,25],[231,17,136,32],[231,19,136,34],[231,38,136,40],[232,0,137,27],[232,12,137,27],[232,18,137,31],[232,19,137,32,"setState"],[232,27,137,27],[232,28,137,41],[233,0,137,43,"locations"],[233,14,137,43,"locations"],[233,23,137,52],[233,25,137,54],[234,0,137,41],[234,13,137,27],[235,0,138,26],[235,11,135,23],[236,0,135,23],[237,0,135,23],[238,0,135,23],[239,0,135,23],[240,0,135,23],[240,11,140,25],[240,40,140,26],[240,57,140,25],[241,0,140,31],[241,10,140,31],[241,15,140,36],[241,17,140,38,"styles"],[241,23,140,44],[241,24,140,45,"welcome"],[241,31,140,25],[242,0,140,25],[243,0,140,25],[244,0,140,25],[245,0,140,25],[246,0,140,25],[246,23,135,23],[246,24,100,21],[246,25,99,19],[247,0,144,18],[250,4,5,33,"React"],[250,19,5,39,"Component"],[250,28],[254,0,147,0],[254,6,147,4,"styles"],[254,12,147,10],[254,15,147,13,"StyleSheet"],[254,39,147,24,"create"],[254,45,147,13],[254,46,147,31],[255,0,148,2,"container"],[255,4,148,2,"container"],[255,13,148,11],[255,15,148,13],[256,0,149,4,"flex"],[256,6,149,4,"flex"],[256,10,149,8],[256,12,149,10],[256,13,148,13],[257,0,150,4,"justifyContent"],[257,6,150,4,"justifyContent"],[257,20,150,18],[257,22,150,20],[257,30,148,13],[258,0,151,4,"alignItems"],[258,6,151,4,"alignItems"],[258,16,151,14],[258,18,151,16],[258,26,148,13],[259,0,152,4,"backgroundColor"],[259,6,152,4,"backgroundColor"],[259,21,152,19],[259,23,152,21],[260,0,148,13],[260,5,147,31],[261,0,154,2,"welcome"],[261,4,154,2,"welcome"],[261,11,154,9],[261,13,154,11],[262,0,155,4,"fontSize"],[262,6,155,4,"fontSize"],[262,14,155,12],[262,16,155,14],[262,18,154,11],[263,0,156,4,"textAlign"],[263,6,156,4,"textAlign"],[263,15,156,13],[263,17,156,15],[263,25,154,11],[264,0,157,4,"margin"],[264,6,157,4,"margin"],[264,12,157,10],[264,14,157,12],[265,0,154,11],[266,0,147,31],[266,3,147,13],[266,4,147,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","navigator.geolocation.watchPosition$argument_0","componentWillUnmount","findCoordinates","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;qCCQ;qBCE;sBDG;qBEC,6BF;qBGQ;sBHG;kBDE;wCKC;kBLE;mCME;qBJE;sBII;qBHC,mCG;kBNO;8BOE;kBP8B;2BQE;8CCG;sBDE;kBRO;iBUC;oDDe;4BCO;kCCgB;0BDE;kBVM;gBDC"}},"type":"js/module"}]}