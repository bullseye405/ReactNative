{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null,\n        initialPosition: \"unknown\",\n        lastPosition: \"unknown\"\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var initialPosition = JSON.stringify(position);\n\n          _this.setState({\n            initialPosition: initialPosition\n          });\n        }, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = JSON.stringify(position);\n\n          _this.setState({\n            lastPosition: lastPosition\n          });\n        });\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":269,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[49,22,6,10],[50,0,10,4,"initialPosition"],[50,8,10,4,"initialPosition"],[50,23,10,19],[50,25,10,21],[50,34,6,10],[51,0,11,4,"lastPosition"],[51,8,11,4,"lastPosition"],[51,20,11,16],[51,22,11,18],[52,0,6,10],[52,7],[53,12,14,2,"watchID"],[53,19],[53,22,14,12],[53,26],[55,12,15,2,"componentDidMount"],[55,29],[55,32,15,22],[55,44,15,28],[56,0,16,4,"navigator"],[56,8,16,4,"navigator"],[56,17,16,13],[56,18,16,14,"geolocation"],[56,29,16,4],[56,30,16,26,"getCurrentPosition"],[56,48,16,4],[56,49,17,6],[56,59,17,6,"position"],[56,67,17,14],[56,69,17,18],[57,0,18,8],[57,14,18,14,"initialPosition"],[57,29,18,29],[57,32,18,32,"JSON"],[57,36,18,36],[57,37,18,37,"stringify"],[57,46,18,32],[57,47,18,47,"position"],[57,55,18,32],[57,56,18,8],[59,0,19,8],[59,16,19,13,"setState"],[59,24,19,8],[59,25,19,22],[60,0,19,24,"initialPosition"],[60,12,19,24,"initialPosition"],[60,27,19,39],[60,29,19,24,"initialPosition"],[61,0,19,22],[61,11,19,8],[62,0,20,7],[62,9,16,4],[62,11,21,6],[62,21,21,6,"error"],[62,26,21,11],[63,0,21,11],[63,17,21,15,"alert"],[63,22,21,20],[63,23,21,21,"error"],[63,28,21,26],[63,29,21,27,"message"],[63,36,21,20],[63,37,21,11],[64,0,21,11],[64,9,16,4],[64,11,22,6],[65,0,23,8,"enableHighAccuracy"],[65,10,23,8,"enableHighAccuracy"],[65,28,23,26],[65,30,23,28],[65,34,22,6],[66,0,24,8,"timeout"],[66,10,24,8,"timeout"],[66,17,24,15],[66,19,24,17],[66,24,22,6],[67,0,25,8,"maximumAge"],[67,10,25,8,"maximumAge"],[67,20,25,18],[67,22,25,20],[68,0,22,6],[68,9,16,4],[69,0,28,4],[69,14,28,9,"watchID"],[69,21,28,4],[69,24,28,19,"navigator"],[69,33,28,28],[69,34,28,29,"geolocation"],[69,45,28,19],[69,46,28,41,"watchPosition"],[69,59,28,19],[69,60,28,55],[69,70,28,55,"position"],[69,78,28,63],[69,80,28,67],[70,0,29,6],[70,14,29,12,"lastPosition"],[70,26,29,24],[70,29,29,27,"JSON"],[70,33,29,31],[70,34,29,32,"stringify"],[70,43,29,27],[70,44,29,42,"position"],[70,52,29,27],[70,53,29,6],[72,0,30,6],[72,16,30,11,"setState"],[72,24,30,6],[72,25,30,20],[73,0,30,22,"lastPosition"],[73,12,30,22,"lastPosition"],[73,24,30,34],[73,26,30,22,"lastPosition"],[74,0,30,20],[74,11,30,6],[75,0,31,5],[75,9,28,19],[75,10,28,4],[76,0,32,3],[76,7],[78,12,33,2,"componentWillUnmount"],[78,32],[78,35,33,25],[78,47,33,31],[79,0,34,4,"navigator"],[79,8,34,4,"navigator"],[79,17,34,13],[79,18,34,14,"geolocation"],[79,29,34,4],[79,30,34,26,"clearWatch"],[79,40,34,4],[79,41,34,37],[79,47,34,42,"watchID"],[79,54,34,4],[80,0,35,3],[80,7],[82,12,37,2,"findCoordinates"],[82,27],[82,30,37,20],[82,42,37,26],[83,0,38,4,"navigator"],[83,8,38,4,"navigator"],[83,17,38,13],[83,18,38,14,"geolocation"],[83,29,38,4],[83,30,38,26,"getCurrentPosition"],[83,48,38,4],[83,49,39,6],[83,59,39,6,"pos"],[83,62,39,9],[83,64,39,13],[84,0,40,8],[84,16,40,13,"setState"],[84,24,40,8],[84,25,40,22],[85,0,41,10,"locations"],[85,12,41,10,"locations"],[85,21,41,19],[85,66,41,25],[85,72,41,30,"state"],[85,77,41,25],[85,78,41,36,"locations"],[85,87,41,19],[85,91,41,47,"pos"],[85,94,41,19],[86,0,40,22],[86,11,40,8],[87,0,43,7],[87,9,38,4],[87,11,44,6],[87,21,44,6,"error"],[87,26,44,11],[88,0,44,11],[88,17,44,15,"Alert"],[88,36,44,21,"alert"],[88,41,44,15],[88,42,44,27,"error"],[88,47,44,32],[88,48,44,33,"message"],[88,55,44,15],[88,56,44,11],[89,0,44,11],[89,9,38,4],[89,11,45,6],[90,0,46,8,"enableHighAccuracy"],[90,10,46,8,"enableHighAccuracy"],[90,28,46,26],[90,30,46,28],[90,34,45,6],[91,0,47,8,"timeout"],[91,10,47,8,"timeout"],[91,17,47,15],[91,19,47,17],[91,24,45,6],[92,0,48,8,"maximumAge"],[92,10,48,8,"maximumAge"],[92,20,48,18],[92,22,48,20],[93,0,45,6],[93,9,38,4],[94,0,51,3],[94,7],[96,12,53,2,"getDistace"],[96,22],[96,25,53,15],[96,37,53,21],[97,0,54,4],[97,12,54,8],[97,18,54,13,"state"],[97,23,54,8],[97,24,54,19,"locations"],[97,33,54,8],[97,34,54,29,"length"],[97,40,54,8],[97,44,54,39],[97,45,54,4],[97,47,54,42],[98,0,55,6],[98,14,55,10,"cood1"],[98,19,55,15],[98,22,55,18],[98,28,55,23,"state"],[98,33,55,18],[98,34,55,29,"locations"],[98,43,55,18],[98,44,55,39],[98,45,55,18],[98,47,55,42,"coords"],[98,53,55,6],[99,0,56,6],[99,14,56,10,"cood2"],[99,19,56,15],[99,22,56,18],[99,28,56,23,"state"],[99,33,56,18],[99,34,56,29,"locations"],[99,43,56,18],[99,44,56,39],[99,45,56,18],[99,47,56,42,"coords"],[99,53,56,6],[100,0,58,6],[100,14,58,10,"point1"],[100,20,58,16],[100,23,58,19],[101,0,59,8,"longitude"],[101,12,59,8,"longitude"],[101,21,59,17],[101,23,59,19,"cood1"],[101,28,59,24],[101,29,59,25,"longitude"],[101,38,58,19],[102,0,60,8,"latitude"],[102,12,60,8,"latitude"],[102,20,60,16],[102,22,60,18,"cood1"],[102,27,60,23],[102,28,60,24,"latitude"],[103,0,58,19],[103,11,58,6],[104,0,62,6],[104,14,62,10,"point2"],[104,20,62,16],[104,23,62,19],[105,0,63,8,"longitude"],[105,12,63,8,"longitude"],[105,21,63,17],[105,23,63,19,"cood2"],[105,28,63,24],[105,29,63,25,"longitude"],[105,38,62,19],[106,0,64,8,"latitude"],[106,12,64,8,"latitude"],[106,20,64,16],[106,22,64,18,"cood2"],[106,27,64,23],[106,28,64,24,"latitude"],[107,0,62,19],[107,11,62,6],[108,0,67,6],[108,14,67,10,"distance"],[108,22,67,18],[108,25,67,21,"geolib"],[108,31,67,27],[108,32,67,28,"getDistance"],[108,43,67,21],[108,44,67,40,"point1"],[108,50,67,21],[108,52,67,48,"point2"],[108,58,67,21],[108,60,67,56],[108,64,67,21],[108,65,67,6],[109,0,68,6],[109,14,68,10,"preciseDistance"],[109,29,68,25],[109,32,68,28,"geolib"],[109,38,68,34],[109,39,68,35,"getPreciseDistance"],[109,57,68,28],[109,58,68,54,"point2"],[109,64,68,28],[109,66,68,62,"point1"],[109,72,68,28],[109,74,68,70],[109,79,68,28],[109,80,68,6],[110,0,69,6,"console"],[110,10,69,6,"console"],[110,17,69,13],[110,18,69,14,"table"],[110,23,69,6],[110,24,69,20],[111,0,70,8,"point1"],[111,12,70,8,"point1"],[111,18,70,14],[111,20,70,8,"point1"],[111,26,69,20],[112,0,71,8,"point2"],[112,12,71,8,"point2"],[112,18,71,14],[112,20,71,8,"point2"],[112,26,69,20],[113,0,72,8,"distance"],[113,12,72,8,"distance"],[113,20,72,16],[113,22,72,8,"distance"],[113,30,69,20],[114,0,73,8,"preciseDistance"],[114,12,73,8,"preciseDistance"],[114,27,73,23],[114,29,73,8,"preciseDistance"],[115,0,69,20],[115,11,69,6],[117,0,75,6],[117,16,75,11,"setState"],[117,24,75,6],[117,25,75,20],[118,0,75,22,"distance"],[118,12,75,22,"distance"],[118,20,75,30],[118,22,75,22,"distance"],[119,0,75,20],[119,11,75,6],[120,0,76,5],[120,9,54,4],[120,15,76,11],[121,0,77,6,"Alert"],[121,29,77,12,"alert"],[121,34,77,6],[121,35,77,18],[121,68,77,6],[122,0,78,5],[123,0,79,3],[123,7],[125,12,81,2,"getArea"],[125,19],[125,22,81,12],[125,34,81,18],[126,0,82,4],[126,12,82,8,"myArr"],[126,17,82,13],[126,20,82,16],[126,22,82,4],[127,0,83,4],[127,14,83,9,"state"],[127,19,83,4],[127,20,83,15,"locations"],[127,29,83,4],[127,30,83,25,"length"],[127,36,83,4],[127,39,83,34],[127,40,83,4],[127,44,84,6],[127,50,84,11,"state"],[127,55,84,6],[127,56,84,17,"locations"],[127,65,84,6],[127,66,84,27,"map"],[127,69,84,6],[127,70,84,31],[127,80,84,31,"loc"],[127,83,84,34],[127,85,84,38],[128,0,85,8,"myArr"],[128,10,85,8,"myArr"],[128,15,85,13],[128,16,85,14,"push"],[128,20,85,8],[128,21,85,19],[128,22,85,20,"loc"],[128,25,85,23],[128,26,85,24,"coords"],[128,32,85,20],[128,33,85,31,"latitude"],[128,41,85,19],[128,43,85,41,"loc"],[128,46,85,44],[128,47,85,45,"coords"],[128,53,85,41],[128,54,85,52,"longitude"],[128,63,85,19],[128,64,85,8],[129,0,86,7],[129,9,84,6],[129,10,83,4],[130,0,87,4,"console"],[130,8,87,4,"console"],[130,15,87,11],[130,16,87,12,"log"],[130,19,87,4],[130,20,87,16],[130,29,87,4],[130,31,87,27,"myArr"],[130,36,87,4],[132,0,88,4],[132,12,88,8,"myArr"],[132,17,88,13],[132,18,88,14,"length"],[132,24,88,8],[132,27,88,23],[132,28,88,4],[132,30,88,26],[133,0,89,6],[133,14,89,10,"data"],[133,18,89,14],[133,21,89,17,"geolib"],[133,27,89,23],[133,28,89,24,"getAreaOfPolygon"],[133,44,89,17],[133,45,89,41,"myArr"],[133,50,89,17],[133,51,89,6],[135,0,91,6],[135,16,91,11,"setState"],[135,24,91,6],[135,25,91,20],[136,0,91,22,"area"],[136,12,91,22,"area"],[136,16,91,26],[136,18,91,28,"data"],[137,0,91,20],[137,11,91,6],[138,0,92,5],[139,0,93,3],[139,7],[146,31,94,11],[147,0,94,11],[149,0,95,4],[149,15,96,6],[149,44,96,7],[149,61,96,6],[150,0,96,12],[150,10,96,12],[150,15,96,17],[150,17,96,19,"styles"],[150,23,96,25],[150,24,96,26,"container"],[150,33,96,6],[151,0,96,6],[152,0,96,6],[153,0,96,6],[154,0,96,6],[155,0,96,6],[155,11,97,8],[155,40,97,9],[155,69,97,8],[156,0,97,26],[156,10,97,26],[156,17,97,33],[156,19,97,35],[156,24,97,40,"findCoordinates"],[156,39,97,8],[157,0,97,8],[158,0,97,8],[159,0,97,8],[160,0,97,8],[161,0,97,8],[161,11,98,10],[161,40,98,11],[161,57,98,10],[162,0,98,16],[162,10,98,16],[162,15,98,21],[162,17,98,23,"styles"],[162,23,98,29],[162,24,98,30,"welcome"],[162,31,98,10],[163,0,98,10],[164,0,98,10],[165,0,98,10],[166,0,98,10],[167,0,98,10],[167,29,97,8],[167,30,96,6],[167,32,101,8],[167,61,101,9],[167,78,101,8],[168,0,102,10],[168,10,102,10],[168,15,102,15],[168,17,102,17],[169,0,103,12,"display"],[169,12,103,12,"display"],[169,19,103,19],[169,21,103,21],[169,27,102,17],[170,0,104,12,"flexDirection"],[170,12,104,12,"flexDirection"],[170,25,104,25],[170,27,104,27],[170,32,102,17],[171,0,105,12,"flexWrap"],[171,12,105,12,"flexWrap"],[171,20,105,20],[171,22,105,22],[172,0,102,17],[172,11,101,8],[173,0,101,8],[174,0,101,8],[175,0,101,8],[176,0,101,8],[177,0,101,8],[177,11,108,11],[177,16,108,16,"state"],[177,21,108,11],[177,22,108,22,"locations"],[177,31,108,11],[177,32,108,32,"length"],[177,38,108,11],[177,41,108,41],[177,42,108,11],[177,46,109,12],[177,51,109,17,"state"],[177,56,109,12],[177,57,109,23,"locations"],[177,66,109,12],[177,67,109,33,"map"],[177,70,109,12],[177,71,109,37],[177,81,109,38,"loc"],[177,84,109,37],[177,86,109,43,"key"],[177,89,109,37],[177,91,109,51],[178,0,110,14],[178,17,111,16],[178,46,111,17],[178,63,111,16],[179,0,111,22],[179,12,111,22],[179,17,111,27],[179,19,111,29],[180,0,111,31,"padding"],[180,14,111,31,"padding"],[180,21,111,38],[180,23,111,40],[181,0,111,29],[181,13,111,16],[182,0,111,46],[182,12,111,46],[182,15,111,49],[182,17,111,51,"key"],[182,20,111,16],[183,0,111,16],[184,0,111,16],[185,0,111,16],[186,0,111,16],[187,0,111,16],[187,13,112,18],[187,42,112,19],[187,59,112,18],[188,0,112,18],[189,0,112,18],[190,0,112,18],[191,0,112,18],[192,0,112,18],[192,13,112,25,"loc"],[192,16,112,28],[192,17,112,29,"coords"],[192,23,112,25],[192,24,112,36,"latitude"],[192,32,112,18],[192,33,111,16],[192,35,113,18],[192,64,113,19],[192,81,113,18],[193,0,113,18],[194,0,113,18],[195,0,113,18],[196,0,113,18],[197,0,113,18],[197,13,113,25,"loc"],[197,16,113,28],[197,17,113,29,"coords"],[197,23,113,25],[197,24,113,36,"longitude"],[197,33,113,18],[197,34,111,16],[197,35,110,14],[198,0,116,13],[198,9,109,12],[198,10,101,8],[198,11,96,6],[198,13,118,8],[198,42,118,9],[198,71,118,8],[199,0,118,26],[199,10,118,26],[199,17,118,33],[199,19,118,35],[199,24,118,40,"getDistace"],[199,34,118,8],[200,0,118,8],[201,0,118,8],[202,0,118,8],[203,0,118,8],[204,0,118,8],[204,11,119,10],[204,40,119,11],[204,57,119,10],[205,0,119,16],[205,10,119,16],[205,15,119,21],[205,17,119,23,"styles"],[205,23,119,29],[205,24,119,30,"welcome"],[205,31,119,10],[206,0,119,10],[207,0,119,10],[208,0,119,10],[209,0,119,10],[210,0,119,10],[210,26,118,8],[210,28,120,11],[210,33,120,16,"state"],[210,38,120,11],[210,39,120,22,"distance"],[210,47,120,11],[210,51,120,34],[210,80,120,35],[210,97,120,34],[211,0,120,34],[212,0,120,34],[213,0,120,34],[214,0,120,34],[215,0,120,34],[215,11,120,41],[215,16,120,46,"state"],[215,21,120,41],[215,22,120,52,"distance"],[215,30,120,34],[215,43,118,8],[215,44,96,6],[215,46,122,8],[215,75,122,9],[215,104,122,8],[216,0,122,26],[216,10,122,26],[216,17,122,33],[216,19,122,35],[216,24,122,40,"getArea"],[216,31,122,8],[217,0,122,8],[218,0,122,8],[219,0,122,8],[220,0,122,8],[221,0,122,8],[221,11,123,10],[221,40,123,11],[221,57,123,10],[222,0,123,16],[222,10,123,16],[222,15,123,21],[222,17,123,23,"styles"],[222,23,123,29],[222,24,123,30,"welcome"],[222,31,123,10],[223,0,123,10],[224,0,123,10],[225,0,123,10],[226,0,123,10],[227,0,123,10],[227,22,122,8],[227,24,124,11],[227,29,124,16,"state"],[227,34,124,11],[227,35,124,22,"area"],[227,39,124,11],[227,43,124,30],[227,72,124,31],[227,89,124,30],[228,0,124,30],[229,0,124,30],[230,0,124,30],[231,0,124,30],[232,0,124,30],[232,11,124,37],[232,16,124,42,"state"],[232,21,124,37],[232,22,124,48,"area"],[232,26,124,30],[232,44,122,8],[232,45,96,6],[232,47,127,8],[232,76,127,9],[232,105,127,8],[233,0,128,10],[233,10,128,10],[233,17,128,17],[233,19,128,19],[233,38,128,25],[234,0,129,12],[234,12,129,12],[234,18,129,16],[234,19,129,17,"setState"],[234,27,129,12],[234,28,129,26],[235,0,129,28,"locations"],[235,14,129,28,"locations"],[235,23,129,37],[235,25,129,39],[236,0,129,26],[236,13,129,12],[237,0,130,11],[237,11,127,8],[238,0,127,8],[239,0,127,8],[240,0,127,8],[241,0,127,8],[242,0,127,8],[242,11,132,10],[242,40,132,11],[242,57,132,10],[243,0,132,16],[243,10,132,16],[243,15,132,21],[243,17,132,23,"styles"],[243,23,132,29],[243,24,132,30,"welcome"],[243,31,132,10],[244,0,132,10],[245,0,132,10],[246,0,132,10],[247,0,132,10],[248,0,132,10],[248,23,127,8],[248,24,96,6],[248,25,95,4],[249,0,136,3],[252,4,5,33,"React"],[252,19,5,39,"Component"],[252,28],[256,0,139,0],[256,6,139,4,"styles"],[256,12,139,10],[256,15,139,13,"StyleSheet"],[256,39,139,24,"create"],[256,45,139,13],[256,46,139,31],[257,0,140,2,"container"],[257,4,140,2,"container"],[257,13,140,11],[257,15,140,13],[258,0,141,4,"flex"],[258,6,141,4,"flex"],[258,10,141,8],[258,12,141,10],[258,13,140,13],[259,0,142,4,"justifyContent"],[259,6,142,4,"justifyContent"],[259,20,142,18],[259,22,142,20],[259,30,140,13],[260,0,143,4,"alignItems"],[260,6,143,4,"alignItems"],[260,16,143,14],[260,18,143,16],[260,26,140,13],[261,0,144,4,"backgroundColor"],[261,6,144,4,"backgroundColor"],[261,21,144,19],[261,23,144,21],[262,0,140,13],[262,5,139,31],[263,0,146,2,"welcome"],[263,4,146,2,"welcome"],[263,11,146,9],[263,13,146,11],[264,0,147,4,"fontSize"],[264,6,147,4,"fontSize"],[264,14,147,12],[264,16,147,14],[264,18,146,11],[265,0,148,4,"textAlign"],[265,6,148,4,"textAlign"],[265,15,148,13],[265,17,148,15],[265,25,146,11],[266,0,149,4,"margin"],[266,6,149,4,"margin"],[266,12,149,10],[266,14,149,12],[267,0,146,11],[268,0,139,31],[268,3,139,13],[268,4,139,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","navigator.geolocation.watchPosition$argument_0","componentWillUnmount","findCoordinates","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;sBCU;MCE;ODG;MEC,6BF;uDGO;KHG;GDC;yBKC;GLE;oBME;MJE;OII;MHC,mCG;GNO;eOE;GP0B;YQE;+BCG;ODE;GRO;EUC;qCDe;aCO;mBCY;WDE;GVM;CDC"}},"type":"js/module"}]}