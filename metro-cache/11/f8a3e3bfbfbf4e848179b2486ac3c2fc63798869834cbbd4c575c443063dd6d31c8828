{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null,\n        initialPosition: \"unknown\",\n        lastPosition: []\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = position.coords.latitude + position.coords.longitude;\n          console.log(\"last position\", lastPosition);\n\n          _this.setState({\n            lastPosition: [].concat((0, _toConsumableArray2.default)(_this.state.lastPosition), [lastPosition])\n          });\n        });\n        console.log(\"this.state\", _this.state.lastPosition);\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":258,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[49,22,6,10],[50,0,10,4,"initialPosition"],[50,8,10,4,"initialPosition"],[50,23,10,19],[50,25,10,21],[50,34,6,10],[51,0,11,4,"lastPosition"],[51,8,11,4,"lastPosition"],[51,20,11,16],[51,22,11,18],[52,0,6,10],[52,7],[53,12,14,2,"watchID"],[53,19],[53,22,14,12],[53,26],[55,12,15,2,"componentDidMount"],[55,29],[55,32,15,22],[55,44,15,28],[56,0,28,4],[56,14,28,9,"watchID"],[56,21,28,4],[56,24,28,19,"navigator"],[56,33,28,28],[56,34,28,29,"geolocation"],[56,45,28,19],[56,46,28,41,"watchPosition"],[56,59,28,19],[56,60,28,55],[56,70,28,55,"position"],[56,78,28,63],[56,80,28,67],[57,0,30,6],[57,14,30,10,"lastPosition"],[57,26,30,22],[57,29,30,25,"position"],[57,37,30,33],[57,38,30,34,"coords"],[57,44,30,25],[57,45,30,41,"latitude"],[57,53,30,25],[57,56,30,52,"position"],[57,64,30,60],[57,65,30,61,"coords"],[57,71,30,52],[57,72,30,68,"longitude"],[57,81,30,6],[58,0,31,6,"console"],[58,10,31,6,"console"],[58,17,31,13],[58,18,31,14,"log"],[58,21,31,6],[58,22,31,18],[58,37,31,6],[58,39,31,35,"lastPosition"],[58,51,31,6],[60,0,32,6],[60,16,32,11,"setState"],[60,24,32,6],[60,25,32,20],[61,0,33,8,"lastPosition"],[61,12,33,8,"lastPosition"],[61,24,33,20],[61,69,33,26],[61,75,33,31,"state"],[61,80,33,26],[61,81,33,37,"lastPosition"],[61,93,33,20],[61,97,33,51,"lastPosition"],[61,109,33,20],[62,0,32,20],[62,11,32,6],[63,0,35,5],[63,9,28,19],[63,10,28,4],[64,0,36,4,"console"],[64,8,36,4,"console"],[64,15,36,11],[64,16,36,12,"log"],[64,19,36,4],[64,20,36,16],[64,32,36,4],[64,34,36,30],[64,40,36,35,"state"],[64,45,36,30],[64,46,36,41,"lastPosition"],[64,58,36,4],[65,0,37,3],[65,7],[67,12,38,2,"componentWillUnmount"],[67,32],[67,35,38,25],[67,47,38,31],[68,0,39,4,"navigator"],[68,8,39,4,"navigator"],[68,17,39,13],[68,18,39,14,"geolocation"],[68,29,39,4],[68,30,39,26,"clearWatch"],[68,40,39,4],[68,41,39,37],[68,47,39,42,"watchID"],[68,54,39,4],[69,0,40,3],[69,7],[71,12,42,2,"findCoordinates"],[71,27],[71,30,42,20],[71,42,42,26],[72,0,43,4,"navigator"],[72,8,43,4,"navigator"],[72,17,43,13],[72,18,43,14,"geolocation"],[72,29,43,4],[72,30,43,26,"getCurrentPosition"],[72,48,43,4],[72,49,44,6],[72,59,44,6,"pos"],[72,62,44,9],[72,64,44,13],[73,0,45,8],[73,16,45,13,"setState"],[73,24,45,8],[73,25,45,22],[74,0,46,10,"locations"],[74,12,46,10,"locations"],[74,21,46,19],[74,66,46,25],[74,72,46,30,"state"],[74,77,46,25],[74,78,46,36,"locations"],[74,87,46,19],[74,91,46,47,"pos"],[74,94,46,19],[75,0,45,22],[75,11,45,8],[76,0,48,7],[76,9,43,4],[76,11,49,6],[76,21,49,6,"error"],[76,26,49,11],[77,0,49,11],[77,17,49,15,"Alert"],[77,36,49,21,"alert"],[77,41,49,15],[77,42,49,27,"error"],[77,47,49,32],[77,48,49,33,"message"],[77,55,49,15],[77,56,49,11],[78,0,49,11],[78,9,43,4],[78,11,50,6],[79,0,51,8,"enableHighAccuracy"],[79,10,51,8,"enableHighAccuracy"],[79,28,51,26],[79,30,51,28],[79,34,50,6],[80,0,52,8,"timeout"],[80,10,52,8,"timeout"],[80,17,52,15],[80,19,52,17],[80,24,50,6],[81,0,53,8,"maximumAge"],[81,10,53,8,"maximumAge"],[81,20,53,18],[81,22,53,20],[82,0,50,6],[82,9,43,4],[83,0,56,3],[83,7],[85,12,58,2,"getDistace"],[85,22],[85,25,58,15],[85,37,58,21],[86,0,59,4],[86,12,59,8],[86,18,59,13,"state"],[86,23,59,8],[86,24,59,19,"locations"],[86,33,59,8],[86,34,59,29,"length"],[86,40,59,8],[86,44,59,39],[86,45,59,4],[86,47,59,42],[87,0,60,6],[87,14,60,10,"cood1"],[87,19,60,15],[87,22,60,18],[87,28,60,23,"state"],[87,33,60,18],[87,34,60,29,"locations"],[87,43,60,18],[87,44,60,39],[87,45,60,18],[87,47,60,42,"coords"],[87,53,60,6],[88,0,61,6],[88,14,61,10,"cood2"],[88,19,61,15],[88,22,61,18],[88,28,61,23,"state"],[88,33,61,18],[88,34,61,29,"locations"],[88,43,61,18],[88,44,61,39],[88,45,61,18],[88,47,61,42,"coords"],[88,53,61,6],[89,0,63,6],[89,14,63,10,"point1"],[89,20,63,16],[89,23,63,19],[90,0,64,8,"longitude"],[90,12,64,8,"longitude"],[90,21,64,17],[90,23,64,19,"cood1"],[90,28,64,24],[90,29,64,25,"longitude"],[90,38,63,19],[91,0,65,8,"latitude"],[91,12,65,8,"latitude"],[91,20,65,16],[91,22,65,18,"cood1"],[91,27,65,23],[91,28,65,24,"latitude"],[92,0,63,19],[92,11,63,6],[93,0,67,6],[93,14,67,10,"point2"],[93,20,67,16],[93,23,67,19],[94,0,68,8,"longitude"],[94,12,68,8,"longitude"],[94,21,68,17],[94,23,68,19,"cood2"],[94,28,68,24],[94,29,68,25,"longitude"],[94,38,67,19],[95,0,69,8,"latitude"],[95,12,69,8,"latitude"],[95,20,69,16],[95,22,69,18,"cood2"],[95,27,69,23],[95,28,69,24,"latitude"],[96,0,67,19],[96,11,67,6],[97,0,72,6],[97,14,72,10,"distance"],[97,22,72,18],[97,25,72,21,"geolib"],[97,31,72,27],[97,32,72,28,"getDistance"],[97,43,72,21],[97,44,72,40,"point1"],[97,50,72,21],[97,52,72,48,"point2"],[97,58,72,21],[97,60,72,56],[97,64,72,21],[97,65,72,6],[98,0,73,6],[98,14,73,10,"preciseDistance"],[98,29,73,25],[98,32,73,28,"geolib"],[98,38,73,34],[98,39,73,35,"getPreciseDistance"],[98,57,73,28],[98,58,73,54,"point2"],[98,64,73,28],[98,66,73,62,"point1"],[98,72,73,28],[98,74,73,70],[98,79,73,28],[98,80,73,6],[99,0,74,6,"console"],[99,10,74,6,"console"],[99,17,74,13],[99,18,74,14,"table"],[99,23,74,6],[99,24,74,20],[100,0,75,8,"point1"],[100,12,75,8,"point1"],[100,18,75,14],[100,20,75,8,"point1"],[100,26,74,20],[101,0,76,8,"point2"],[101,12,76,8,"point2"],[101,18,76,14],[101,20,76,8,"point2"],[101,26,74,20],[102,0,77,8,"distance"],[102,12,77,8,"distance"],[102,20,77,16],[102,22,77,8,"distance"],[102,30,74,20],[103,0,78,8,"preciseDistance"],[103,12,78,8,"preciseDistance"],[103,27,78,23],[103,29,78,8,"preciseDistance"],[104,0,74,20],[104,11,74,6],[106,0,80,6],[106,16,80,11,"setState"],[106,24,80,6],[106,25,80,20],[107,0,80,22,"distance"],[107,12,80,22,"distance"],[107,20,80,30],[107,22,80,22,"distance"],[108,0,80,20],[108,11,80,6],[109,0,81,5],[109,9,59,4],[109,15,81,11],[110,0,82,6,"Alert"],[110,29,82,12,"alert"],[110,34,82,6],[110,35,82,18],[110,68,82,6],[111,0,83,5],[112,0,84,3],[112,7],[114,12,86,2,"getArea"],[114,19],[114,22,86,12],[114,34,86,18],[115,0,87,4],[115,12,87,8,"myArr"],[115,17,87,13],[115,20,87,16],[115,22,87,4],[116,0,88,4],[116,14,88,9,"state"],[116,19,88,4],[116,20,88,15,"locations"],[116,29,88,4],[116,30,88,25,"length"],[116,36,88,4],[116,39,88,34],[116,40,88,4],[116,44,89,6],[116,50,89,11,"state"],[116,55,89,6],[116,56,89,17,"locations"],[116,65,89,6],[116,66,89,27,"map"],[116,69,89,6],[116,70,89,31],[116,80,89,31,"loc"],[116,83,89,34],[116,85,89,38],[117,0,90,8,"myArr"],[117,10,90,8,"myArr"],[117,15,90,13],[117,16,90,14,"push"],[117,20,90,8],[117,21,90,19],[117,22,90,20,"loc"],[117,25,90,23],[117,26,90,24,"coords"],[117,32,90,20],[117,33,90,31,"latitude"],[117,41,90,19],[117,43,90,41,"loc"],[117,46,90,44],[117,47,90,45,"coords"],[117,53,90,41],[117,54,90,52,"longitude"],[117,63,90,19],[117,64,90,8],[118,0,91,7],[118,9,89,6],[118,10,88,4],[119,0,92,4,"console"],[119,8,92,4,"console"],[119,15,92,11],[119,16,92,12,"log"],[119,19,92,4],[119,20,92,16],[119,29,92,4],[119,31,92,27,"myArr"],[119,36,92,4],[121,0,93,4],[121,12,93,8,"myArr"],[121,17,93,13],[121,18,93,14,"length"],[121,24,93,8],[121,27,93,23],[121,28,93,4],[121,30,93,26],[122,0,94,6],[122,14,94,10,"data"],[122,18,94,14],[122,21,94,17,"geolib"],[122,27,94,23],[122,28,94,24,"getAreaOfPolygon"],[122,44,94,17],[122,45,94,41,"myArr"],[122,50,94,17],[122,51,94,6],[124,0,96,6],[124,16,96,11,"setState"],[124,24,96,6],[124,25,96,20],[125,0,96,22,"area"],[125,12,96,22,"area"],[125,16,96,26],[125,18,96,28,"data"],[126,0,96,20],[126,11,96,6],[127,0,97,5],[128,0,98,3],[128,7],[135,31,99,11],[136,0,99,11],[138,0,100,4],[138,15,101,6],[138,44,101,7],[138,61,101,6],[139,0,101,12],[139,10,101,12],[139,15,101,17],[139,17,101,19,"styles"],[139,23,101,25],[139,24,101,26,"container"],[139,33,101,6],[140,0,101,6],[141,0,101,6],[142,0,101,6],[143,0,101,6],[144,0,101,6],[144,11,102,8],[144,40,102,9],[144,69,102,8],[145,0,102,26],[145,10,102,26],[145,17,102,33],[145,19,102,35],[145,24,102,40,"findCoordinates"],[145,39,102,8],[146,0,102,8],[147,0,102,8],[148,0,102,8],[149,0,102,8],[150,0,102,8],[150,11,103,10],[150,40,103,11],[150,57,103,10],[151,0,103,16],[151,10,103,16],[151,15,103,21],[151,17,103,23,"styles"],[151,23,103,29],[151,24,103,30,"welcome"],[151,31,103,10],[152,0,103,10],[153,0,103,10],[154,0,103,10],[155,0,103,10],[156,0,103,10],[156,29,102,8],[156,30,101,6],[156,32,106,8],[156,61,106,9],[156,78,106,8],[157,0,107,10],[157,10,107,10],[157,15,107,15],[157,17,107,17],[158,0,108,12,"display"],[158,12,108,12,"display"],[158,19,108,19],[158,21,108,21],[158,27,107,17],[159,0,109,12,"flexDirection"],[159,12,109,12,"flexDirection"],[159,25,109,25],[159,27,109,27],[159,32,107,17],[160,0,110,12,"flexWrap"],[160,12,110,12,"flexWrap"],[160,20,110,20],[160,22,110,22],[161,0,107,17],[161,11,106,8],[162,0,106,8],[163,0,106,8],[164,0,106,8],[165,0,106,8],[166,0,106,8],[166,11,113,11],[166,16,113,16,"state"],[166,21,113,11],[166,22,113,22,"locations"],[166,31,113,11],[166,32,113,32,"length"],[166,38,113,11],[166,41,113,41],[166,42,113,11],[166,46,114,12],[166,51,114,17,"state"],[166,56,114,12],[166,57,114,23,"locations"],[166,66,114,12],[166,67,114,33,"map"],[166,70,114,12],[166,71,114,37],[166,81,114,38,"loc"],[166,84,114,37],[166,86,114,43,"key"],[166,89,114,37],[166,91,114,51],[167,0,115,14],[167,17,116,16],[167,46,116,17],[167,63,116,16],[168,0,116,22],[168,12,116,22],[168,17,116,27],[168,19,116,29],[169,0,116,31,"padding"],[169,14,116,31,"padding"],[169,21,116,38],[169,23,116,40],[170,0,116,29],[170,13,116,16],[171,0,116,46],[171,12,116,46],[171,15,116,49],[171,17,116,51,"key"],[171,20,116,16],[172,0,116,16],[173,0,116,16],[174,0,116,16],[175,0,116,16],[176,0,116,16],[176,13,117,18],[176,42,117,19],[176,59,117,18],[177,0,117,18],[178,0,117,18],[179,0,117,18],[180,0,117,18],[181,0,117,18],[181,13,117,25,"loc"],[181,16,117,28],[181,17,117,29,"coords"],[181,23,117,25],[181,24,117,36,"latitude"],[181,32,117,18],[181,33,116,16],[181,35,118,18],[181,64,118,19],[181,81,118,18],[182,0,118,18],[183,0,118,18],[184,0,118,18],[185,0,118,18],[186,0,118,18],[186,13,118,25,"loc"],[186,16,118,28],[186,17,118,29,"coords"],[186,23,118,25],[186,24,118,36,"longitude"],[186,33,118,18],[186,34,116,16],[186,35,115,14],[187,0,121,13],[187,9,114,12],[187,10,106,8],[187,11,101,6],[187,13,123,8],[187,42,123,9],[187,71,123,8],[188,0,123,26],[188,10,123,26],[188,17,123,33],[188,19,123,35],[188,24,123,40,"getDistace"],[188,34,123,8],[189,0,123,8],[190,0,123,8],[191,0,123,8],[192,0,123,8],[193,0,123,8],[193,11,124,10],[193,40,124,11],[193,57,124,10],[194,0,124,16],[194,10,124,16],[194,15,124,21],[194,17,124,23,"styles"],[194,23,124,29],[194,24,124,30,"welcome"],[194,31,124,10],[195,0,124,10],[196,0,124,10],[197,0,124,10],[198,0,124,10],[199,0,124,10],[199,26,123,8],[199,28,125,11],[199,33,125,16,"state"],[199,38,125,11],[199,39,125,22,"distance"],[199,47,125,11],[199,51,125,34],[199,80,125,35],[199,97,125,34],[200,0,125,34],[201,0,125,34],[202,0,125,34],[203,0,125,34],[204,0,125,34],[204,11,125,41],[204,16,125,46,"state"],[204,21,125,41],[204,22,125,52,"distance"],[204,30,125,34],[204,43,123,8],[204,44,101,6],[204,46,127,8],[204,75,127,9],[204,104,127,8],[205,0,127,26],[205,10,127,26],[205,17,127,33],[205,19,127,35],[205,24,127,40,"getArea"],[205,31,127,8],[206,0,127,8],[207,0,127,8],[208,0,127,8],[209,0,127,8],[210,0,127,8],[210,11,128,10],[210,40,128,11],[210,57,128,10],[211,0,128,16],[211,10,128,16],[211,15,128,21],[211,17,128,23,"styles"],[211,23,128,29],[211,24,128,30,"welcome"],[211,31,128,10],[212,0,128,10],[213,0,128,10],[214,0,128,10],[215,0,128,10],[216,0,128,10],[216,22,127,8],[216,24,129,11],[216,29,129,16,"state"],[216,34,129,11],[216,35,129,22,"area"],[216,39,129,11],[216,43,129,30],[216,72,129,31],[216,89,129,30],[217,0,129,30],[218,0,129,30],[219,0,129,30],[220,0,129,30],[221,0,129,30],[221,11,129,37],[221,16,129,42,"state"],[221,21,129,37],[221,22,129,48,"area"],[221,26,129,30],[221,44,127,8],[221,45,101,6],[221,47,132,8],[221,76,132,9],[221,105,132,8],[222,0,133,10],[222,10,133,10],[222,17,133,17],[222,19,133,19],[222,38,133,25],[223,0,134,12],[223,12,134,12],[223,18,134,16],[223,19,134,17,"setState"],[223,27,134,12],[223,28,134,26],[224,0,134,28,"locations"],[224,14,134,28,"locations"],[224,23,134,37],[224,25,134,39],[225,0,134,26],[225,13,134,12],[226,0,135,11],[226,11,132,8],[227,0,132,8],[228,0,132,8],[229,0,132,8],[230,0,132,8],[231,0,132,8],[231,11,137,10],[231,40,137,11],[231,57,137,10],[232,0,137,16],[232,10,137,16],[232,15,137,21],[232,17,137,23,"styles"],[232,23,137,29],[232,24,137,30,"welcome"],[232,31,137,10],[233,0,137,10],[234,0,137,10],[235,0,137,10],[236,0,137,10],[237,0,137,10],[237,23,132,8],[237,24,101,6],[237,25,100,4],[238,0,141,3],[241,4,5,33,"React"],[241,19,5,39,"Component"],[241,28],[245,0,144,0],[245,6,144,4,"styles"],[245,12,144,10],[245,15,144,13,"StyleSheet"],[245,39,144,24,"create"],[245,45,144,13],[245,46,144,31],[246,0,145,2,"container"],[246,4,145,2,"container"],[246,13,145,11],[246,15,145,13],[247,0,146,4,"flex"],[247,6,146,4,"flex"],[247,10,146,8],[247,12,146,10],[247,13,145,13],[248,0,147,4,"justifyContent"],[248,6,147,4,"justifyContent"],[248,20,147,18],[248,22,147,20],[248,30,145,13],[249,0,148,4,"alignItems"],[249,6,148,4,"alignItems"],[249,16,148,14],[249,18,148,16],[249,26,145,13],[250,0,149,4,"backgroundColor"],[250,6,149,4,"backgroundColor"],[250,21,149,19],[250,23,149,21],[251,0,145,13],[251,5,144,31],[252,0,151,2,"welcome"],[252,4,151,2,"welcome"],[252,11,151,9],[252,13,151,11],[253,0,152,4,"fontSize"],[253,6,152,4,"fontSize"],[253,14,152,12],[253,16,152,14],[253,18,151,11],[254,0,153,4,"textAlign"],[254,6,153,4,"textAlign"],[254,15,153,13],[254,17,153,15],[254,25,151,11],[255,0,154,4,"margin"],[255,6,154,4,"margin"],[255,12,154,10],[255,14,154,12],[256,0,151,11],[257,0,144,31],[257,3,144,13],[257,4,144,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.watchPosition$argument_0","componentWillUnmount","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;sBCU;uDCa;KDO;GDE;yBGC;GHE;oBIE;MCE;ODI;MEC,mCF;GJO;eOE;GP0B;YQE;+BCG;ODE;GRO;EUC;qCDe;aCO;mBCY;WDE;GVM;CDC"}},"type":"js/module"}]}