{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var points = [{\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          }, {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          }];\n          console.log(points);\n          var distance = geolib.getDistance(points);\n          var preciseDistance = geolib.getPreciseDistance(points);\n          console.log(distance, preciseDistance);\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, this.state.distance)), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          }\n        }, this.state.area)));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":212,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,31,6],[70,14,31,10,"points"],[70,20,31,16],[70,23,31,19],[70,24,32,8],[71,0,32,10,"longitude"],[71,12,32,10,"longitude"],[71,21,32,19],[71,23,32,21,"cood1"],[71,28,32,26],[71,29,32,27,"longitude"],[71,38,32,8],[72,0,32,38,"latitude"],[72,12,32,38,"latitude"],[72,20,32,46],[72,22,32,48,"cood1"],[72,27,32,53],[72,28,32,54,"latitude"],[73,0,32,8],[73,11,31,19],[73,13,33,8],[74,0,33,10,"longitude"],[74,12,33,10,"longitude"],[74,21,33,19],[74,23,33,21,"cood2"],[74,28,33,26],[74,29,33,27,"longitude"],[74,38,33,8],[75,0,33,38,"latitude"],[75,12,33,38,"latitude"],[75,20,33,46],[75,22,33,48,"cood2"],[75,27,33,53],[75,28,33,54,"latitude"],[76,0,33,8],[76,11,31,19],[76,12,31,6],[77,0,36,6,"console"],[77,10,36,6,"console"],[77,17,36,13],[77,18,36,14,"log"],[77,21,36,6],[77,22,36,18,"points"],[77,28,36,6],[78,0,37,6],[78,14,37,10,"distance"],[78,22,37,18],[78,25,37,21,"geolib"],[78,31,37,27],[78,32,37,28,"getDistance"],[78,43,37,21],[78,44,37,40,"points"],[78,50,37,21],[78,51,37,6],[79,0,38,6],[79,14,38,10,"preciseDistance"],[79,29,38,25],[79,32,38,28,"geolib"],[79,38,38,34],[79,39,38,35,"getPreciseDistance"],[79,57,38,28],[79,58,38,54,"points"],[79,64,38,28],[79,65,38,6],[80,0,39,6,"console"],[80,10,39,6,"console"],[80,17,39,13],[80,18,39,14,"log"],[80,21,39,6],[80,22,39,18,"distance"],[80,30,39,6],[80,32,39,28,"preciseDistance"],[80,47,39,6],[81,0,40,5],[81,9,27,4],[81,15,40,11],[82,0,41,6,"Alert"],[82,29,41,12,"alert"],[82,34,41,6],[82,35,41,18],[82,68,41,6],[83,0,42,5],[84,0,43,3],[84,7],[86,12,45,2,"getArea"],[86,19],[86,22,45,12],[86,34,45,18],[87,0,46,4],[87,12,46,8,"myArr"],[87,17,46,13],[87,20,46,16],[87,22,46,4],[88,0,47,4],[88,14,47,9,"state"],[88,19,47,4],[88,20,47,15,"locations"],[88,29,47,4],[88,30,47,25,"length"],[88,36,47,4],[88,39,47,34],[88,40,47,4],[88,44,48,6],[88,50,48,11,"state"],[88,55,48,6],[88,56,48,17,"locations"],[88,65,48,6],[88,66,48,27,"map"],[88,69,48,6],[88,70,48,31],[88,80,48,31,"loc"],[88,83,48,34],[88,85,48,38],[89,0,49,8,"myArr"],[89,10,49,8,"myArr"],[89,15,49,13],[89,16,49,14,"push"],[89,20,49,8],[89,21,49,19],[89,22,49,20,"loc"],[89,25,49,23],[89,26,49,24,"coords"],[89,32,49,20],[89,33,49,31,"latitude"],[89,41,49,19],[89,43,49,41,"loc"],[89,46,49,44],[89,47,49,45,"coords"],[89,53,49,41],[89,54,49,52,"longitude"],[89,63,49,19],[89,64,49,8],[90,0,50,7],[90,9,48,6],[90,10,47,4],[91,0,51,4,"console"],[91,8,51,4,"console"],[91,15,51,11],[91,16,51,12,"log"],[91,19,51,4],[91,20,51,16],[91,29,51,4],[91,31,51,27,"myArr"],[91,36,51,4],[93,0,52,4],[93,12,52,8,"myArr"],[93,17,52,13],[93,18,52,14,"length"],[93,24,52,8],[93,27,52,23],[93,28,52,4],[93,30,52,26],[94,0,53,6],[94,14,53,10,"data"],[94,18,53,14],[94,21,53,17,"geolib"],[94,27,53,23],[94,28,53,24,"getAreaOfPolygon"],[94,44,53,17],[94,45,53,41,"myArr"],[94,50,53,17],[94,51,53,6],[96,0,55,6],[96,16,55,11,"setState"],[96,24,55,6],[96,25,55,20],[97,0,55,22,"area"],[97,12,55,22,"area"],[97,16,55,26],[97,18,55,28,"data"],[98,0,55,20],[98,11,55,6],[99,0,56,5],[100,0,57,3],[100,7],[107,31,58,11],[108,0,59,4],[108,15,60,6],[108,44,60,7],[108,61,60,6],[109,0,60,12],[109,10,60,12],[109,15,60,17],[109,17,60,19,"styles"],[109,23,60,25],[109,24,60,26,"container"],[109,33,60,6],[110,0,60,6],[111,0,60,6],[112,0,60,6],[113,0,60,6],[114,0,60,6],[114,11,61,8],[114,40,61,9],[114,69,61,8],[115,0,61,26],[115,10,61,26],[115,17,61,33],[115,19,61,35],[115,24,61,40,"findCoordinates"],[115,39,61,8],[116,0,61,8],[117,0,61,8],[118,0,61,8],[119,0,61,8],[120,0,61,8],[120,11,62,10],[120,40,62,11],[120,57,62,10],[121,0,62,16],[121,10,62,16],[121,15,62,21],[121,17,62,23,"styles"],[121,23,62,29],[121,24,62,30,"welcome"],[121,31,62,10],[122,0,62,10],[123,0,62,10],[124,0,62,10],[125,0,62,10],[126,0,62,10],[126,29,61,8],[126,30,60,6],[126,32,65,8],[126,61,65,9],[126,78,65,8],[127,0,66,10],[127,10,66,10],[127,15,66,15],[127,17,66,17],[128,0,66,19,"display"],[128,12,66,19,"display"],[128,19,66,26],[128,21,66,28],[128,27,66,17],[129,0,66,36,"flexDirection"],[129,12,66,36,"flexDirection"],[129,25,66,49],[129,27,66,51],[129,32,66,17],[130,0,66,58,"flexWrap"],[130,12,66,58,"flexWrap"],[130,20,66,66],[130,22,66,68],[131,0,66,17],[131,11,65,8],[132,0,65,8],[133,0,65,8],[134,0,65,8],[135,0,65,8],[136,0,65,8],[136,11,68,11],[136,16,68,16,"state"],[136,21,68,11],[136,22,68,22,"locations"],[136,31,68,11],[136,32,68,32,"length"],[136,38,68,11],[136,41,68,41],[136,42,68,11],[136,46,69,12],[136,51,69,17,"state"],[136,56,69,12],[136,57,69,23,"locations"],[136,66,69,12],[136,67,69,33,"map"],[136,70,69,12],[136,71,69,37],[136,81,69,38,"loc"],[136,84,69,37],[136,86,69,43,"key"],[136,89,69,37],[136,91,69,51],[137,0,70,14],[137,17,71,16],[137,46,71,17],[137,63,71,16],[138,0,71,22],[138,12,71,22],[138,17,71,27],[138,19,71,29],[139,0,71,31,"padding"],[139,14,71,31,"padding"],[139,21,71,38],[139,23,71,40],[140,0,71,29],[140,13,71,16],[141,0,71,46],[141,12,71,46],[141,15,71,49],[141,17,71,51,"key"],[141,20,71,16],[142,0,71,16],[143,0,71,16],[144,0,71,16],[145,0,71,16],[146,0,71,16],[146,13,72,18],[146,42,72,19],[146,59,72,18],[147,0,72,18],[148,0,72,18],[149,0,72,18],[150,0,72,18],[151,0,72,18],[151,13,72,25,"loc"],[151,16,72,28],[151,17,72,29,"coords"],[151,23,72,25],[151,24,72,36,"latitude"],[151,32,72,18],[151,33,71,16],[151,35,73,18],[151,64,73,19],[151,81,73,18],[152,0,73,18],[153,0,73,18],[154,0,73,18],[155,0,73,18],[156,0,73,18],[156,13,73,25,"loc"],[156,16,73,28],[156,17,73,29,"coords"],[156,23,73,25],[156,24,73,36,"longitude"],[156,33,73,18],[156,34,71,16],[156,35,70,14],[157,0,76,13],[157,9,69,12],[157,10,65,8],[157,11,60,6],[157,13,78,8],[157,42,78,9],[157,71,78,8],[158,0,78,26],[158,10,78,26],[158,17,78,33],[158,19,78,35],[158,24,78,40,"getDistace"],[158,34,78,8],[159,0,78,8],[160,0,78,8],[161,0,78,8],[162,0,78,8],[163,0,78,8],[163,11,79,10],[163,40,79,11],[163,57,79,10],[164,0,79,16],[164,10,79,16],[164,15,79,21],[164,17,79,23,"styles"],[164,23,79,29],[164,24,79,30,"welcome"],[164,31,79,10],[165,0,79,10],[166,0,79,10],[167,0,79,10],[168,0,79,10],[169,0,79,10],[169,26,78,8],[169,28,80,11],[169,33,80,16,"state"],[169,38,80,11],[169,39,80,22,"distance"],[169,47,80,11],[169,51,80,34],[169,80,80,35],[169,97,80,34],[170,0,80,34],[171,0,80,34],[172,0,80,34],[173,0,80,34],[174,0,80,34],[174,11,80,41],[174,16,80,46,"state"],[174,21,80,41],[174,22,80,52,"distance"],[174,30,80,34],[174,31,78,8],[174,32,60,6],[174,34,82,8],[174,63,82,9],[174,92,82,8],[175,0,82,26],[175,10,82,26],[175,17,82,33],[175,19,82,35],[175,24,82,40,"getArea"],[175,31,82,8],[176,0,82,8],[177,0,82,8],[178,0,82,8],[179,0,82,8],[180,0,82,8],[180,11,83,10],[180,40,83,11],[180,57,83,10],[181,0,83,16],[181,10,83,16],[181,15,83,21],[181,17,83,23,"styles"],[181,23,83,29],[181,24,83,30,"welcome"],[181,31,83,10],[182,0,83,10],[183,0,83,10],[184,0,83,10],[185,0,83,10],[186,0,83,10],[186,22,82,8],[186,24,84,11],[186,29,84,16,"state"],[186,34,84,11],[186,35,84,22,"area"],[186,39,84,11],[186,43,84,30],[186,72,84,31],[186,89,84,30],[187,0,84,30],[188,0,84,30],[189,0,84,30],[190,0,84,30],[191,0,84,30],[191,11,84,37],[191,16,84,42,"state"],[191,21,84,37],[191,22,84,48,"area"],[191,26,84,30],[191,27,82,8],[191,28,60,6],[191,29,59,4],[192,0,88,3],[195,4,5,33,"React"],[195,19,5,39,"Component"],[195,28],[199,0,91,0],[199,6,91,4,"styles"],[199,12,91,10],[199,15,91,13,"StyleSheet"],[199,39,91,24,"create"],[199,45,91,13],[199,46,91,31],[200,0,92,2,"container"],[200,4,92,2,"container"],[200,13,92,11],[200,15,92,13],[201,0,93,4,"flex"],[201,6,93,4,"flex"],[201,10,93,8],[201,12,93,10],[201,13,92,13],[202,0,94,4,"justifyContent"],[202,6,94,4,"justifyContent"],[202,20,94,18],[202,22,94,20],[202,30,92,13],[203,0,95,4,"alignItems"],[203,6,95,4,"alignItems"],[203,16,95,14],[203,18,95,16],[203,26,92,13],[204,0,96,4,"backgroundColor"],[204,6,96,4,"backgroundColor"],[204,21,96,19],[204,23,96,21],[205,0,92,13],[205,5,91,31],[206,0,98,2,"welcome"],[206,4,98,2,"welcome"],[206,11,98,9],[206,13,98,11],[207,0,99,4,"fontSize"],[207,6,99,4,"fontSize"],[207,14,99,12],[207,16,99,14],[207,18,98,11],[208,0,100,4,"textAlign"],[208,6,100,4,"textAlign"],[208,15,100,13],[208,17,100,15],[208,25,98,11],[209,0,101,4,"margin"],[209,6,101,4,"margin"],[209,12,101,10],[209,14,101,12],[210,0,98,11],[211,0,91,31],[211,3,91,13],[211,4,91,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJiB;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;GPY;CDC"}},"type":"js/module"}]}