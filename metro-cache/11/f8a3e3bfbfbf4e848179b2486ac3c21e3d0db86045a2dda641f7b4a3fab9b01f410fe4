{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          console.log(points);\n          var distance = geolib.getDistance(points);\n          var preciseDistance = geolib.getPreciseDistance(points);\n          console.log(distance, preciseDistance);\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, this.state.distance)), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          }\n        }, this.state.area)));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":213,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[50,0,6,10],[50,7],[52,12,12,2,"findCoordinates"],[52,27],[52,30,12,20],[52,42,12,26],[53,0,13,4,"navigator"],[53,8,13,4,"navigator"],[53,17,13,13],[53,18,13,14,"geolocation"],[53,29,13,4],[53,30,13,26,"getCurrentPosition"],[53,48,13,4],[53,49,14,6],[53,59,14,6,"pos"],[53,62,14,9],[53,64,14,13],[54,0,15,8],[54,16,15,13,"setState"],[54,24,15,8],[54,25,15,22],[55,0,15,24,"locations"],[55,12,15,24,"locations"],[55,21,15,33],[55,66,15,39],[55,72,15,44,"state"],[55,77,15,39],[55,78,15,50,"locations"],[55,87,15,33],[55,91,15,61,"pos"],[55,94,15,33],[56,0,15,22],[56,11,15,8],[57,0,16,7],[57,9,13,4],[57,11,17,6],[57,21,17,6,"error"],[57,26,17,11],[58,0,17,11],[58,17,17,15,"Alert"],[58,36,17,21,"alert"],[58,41,17,15],[58,42,17,27,"error"],[58,47,17,32],[58,48,17,33,"message"],[58,55,17,15],[58,56,17,11],[59,0,17,11],[59,9,13,4],[59,11,18,6],[60,0,19,8,"enableHighAccuracy"],[60,10,19,8,"enableHighAccuracy"],[60,28,19,26],[60,30,19,28],[60,34,18,6],[61,0,20,8,"timeout"],[61,10,20,8,"timeout"],[61,17,20,15],[61,19,20,17],[61,24,18,6],[62,0,21,8,"maximumAge"],[62,10,21,8,"maximumAge"],[62,20,21,18],[62,22,21,20],[63,0,18,6],[63,9,13,4],[64,0,24,3],[64,7],[66,12,26,2,"getDistace"],[66,22],[66,25,26,15],[66,37,26,21],[67,0,27,4],[67,12,27,8],[67,18,27,13,"state"],[67,23,27,8],[67,24,27,19,"locations"],[67,33,27,8],[67,34,27,29,"length"],[67,40,27,8],[67,44,27,39],[67,45,27,4],[67,47,27,42],[68,0,28,6],[68,14,28,10,"cood1"],[68,19,28,15],[68,22,28,18],[68,28,28,23,"state"],[68,33,28,18],[68,34,28,29,"locations"],[68,43,28,18],[68,44,28,39],[68,45,28,18],[68,47,28,42,"coords"],[68,53,28,6],[69,0,29,6],[69,14,29,10,"cood2"],[69,19,29,15],[69,22,29,18],[69,28,29,23,"state"],[69,33,29,18],[69,34,29,29,"locations"],[69,43,29,18],[69,44,29,39],[69,45,29,18],[69,47,29,42,"coords"],[69,53,29,6],[70,0,31,6],[70,14,31,10,"point1"],[70,20,31,16],[70,23,31,19],[71,0,31,21,"longitude"],[71,12,31,21,"longitude"],[71,21,31,30],[71,23,31,32,"cood1"],[71,28,31,37],[71,29,31,38,"longitude"],[71,38,31,19],[72,0,31,49,"latitude"],[72,12,31,49,"latitude"],[72,20,31,57],[72,22,31,59,"cood1"],[72,27,31,64],[72,28,31,65,"latitude"],[73,0,31,19],[73,11,31,6],[74,0,32,6],[74,14,32,10,"point2"],[74,20,32,16],[74,23,32,19],[75,0,32,21,"longitude"],[75,12,32,21,"longitude"],[75,21,32,30],[75,23,32,32,"cood2"],[75,28,32,37],[75,29,32,38,"longitude"],[75,38,32,19],[76,0,32,49,"latitude"],[76,12,32,49,"latitude"],[76,20,32,57],[76,22,32,59,"cood2"],[76,27,32,64],[76,28,32,65,"latitude"],[77,0,32,19],[77,11,32,6],[78,0,34,6,"console"],[78,10,34,6,"console"],[78,17,34,13],[78,18,34,14,"log"],[78,21,34,6],[78,22,34,18,"points"],[78,28,34,6],[79,0,35,6],[79,14,35,10,"distance"],[79,22,35,18],[79,25,35,21,"geolib"],[79,31,35,27],[79,32,35,28,"getDistance"],[79,43,35,21],[79,44,35,40,"points"],[79,50,35,21],[79,51,35,6],[80,0,36,6],[80,14,36,10,"preciseDistance"],[80,29,36,25],[80,32,36,28,"geolib"],[80,38,36,34],[80,39,36,35,"getPreciseDistance"],[80,57,36,28],[80,58,36,54,"points"],[80,64,36,28],[80,65,36,6],[81,0,37,6,"console"],[81,10,37,6,"console"],[81,17,37,13],[81,18,37,14,"log"],[81,21,37,6],[81,22,37,18,"distance"],[81,30,37,6],[81,32,37,28,"preciseDistance"],[81,47,37,6],[82,0,38,5],[82,9,27,4],[82,15,38,11],[83,0,39,6,"Alert"],[83,29,39,12,"alert"],[83,34,39,6],[83,35,39,18],[83,68,39,6],[84,0,40,5],[85,0,41,3],[85,7],[87,12,43,2,"getArea"],[87,19],[87,22,43,12],[87,34,43,18],[88,0,44,4],[88,12,44,8,"myArr"],[88,17,44,13],[88,20,44,16],[88,22,44,4],[89,0,45,4],[89,14,45,9,"state"],[89,19,45,4],[89,20,45,15,"locations"],[89,29,45,4],[89,30,45,25,"length"],[89,36,45,4],[89,39,45,34],[89,40,45,4],[89,44,46,6],[89,50,46,11,"state"],[89,55,46,6],[89,56,46,17,"locations"],[89,65,46,6],[89,66,46,27,"map"],[89,69,46,6],[89,70,46,31],[89,80,46,31,"loc"],[89,83,46,34],[89,85,46,38],[90,0,47,8,"myArr"],[90,10,47,8,"myArr"],[90,15,47,13],[90,16,47,14,"push"],[90,20,47,8],[90,21,47,19],[90,22,47,20,"loc"],[90,25,47,23],[90,26,47,24,"coords"],[90,32,47,20],[90,33,47,31,"latitude"],[90,41,47,19],[90,43,47,41,"loc"],[90,46,47,44],[90,47,47,45,"coords"],[90,53,47,41],[90,54,47,52,"longitude"],[90,63,47,19],[90,64,47,8],[91,0,48,7],[91,9,46,6],[91,10,45,4],[92,0,49,4,"console"],[92,8,49,4,"console"],[92,15,49,11],[92,16,49,12,"log"],[92,19,49,4],[92,20,49,16],[92,29,49,4],[92,31,49,27,"myArr"],[92,36,49,4],[94,0,50,4],[94,12,50,8,"myArr"],[94,17,50,13],[94,18,50,14,"length"],[94,24,50,8],[94,27,50,23],[94,28,50,4],[94,30,50,26],[95,0,51,6],[95,14,51,10,"data"],[95,18,51,14],[95,21,51,17,"geolib"],[95,27,51,23],[95,28,51,24,"getAreaOfPolygon"],[95,44,51,17],[95,45,51,41,"myArr"],[95,50,51,17],[95,51,51,6],[97,0,53,6],[97,16,53,11,"setState"],[97,24,53,6],[97,25,53,20],[98,0,53,22,"area"],[98,12,53,22,"area"],[98,16,53,26],[98,18,53,28,"data"],[99,0,53,20],[99,11,53,6],[100,0,54,5],[101,0,55,3],[101,7],[108,31,56,11],[109,0,57,4],[109,15,58,6],[109,44,58,7],[109,61,58,6],[110,0,58,12],[110,10,58,12],[110,15,58,17],[110,17,58,19,"styles"],[110,23,58,25],[110,24,58,26,"container"],[110,33,58,6],[111,0,58,6],[112,0,58,6],[113,0,58,6],[114,0,58,6],[115,0,58,6],[115,11,59,8],[115,40,59,9],[115,69,59,8],[116,0,59,26],[116,10,59,26],[116,17,59,33],[116,19,59,35],[116,24,59,40,"findCoordinates"],[116,39,59,8],[117,0,59,8],[118,0,59,8],[119,0,59,8],[120,0,59,8],[121,0,59,8],[121,11,60,10],[121,40,60,11],[121,57,60,10],[122,0,60,16],[122,10,60,16],[122,15,60,21],[122,17,60,23,"styles"],[122,23,60,29],[122,24,60,30,"welcome"],[122,31,60,10],[123,0,60,10],[124,0,60,10],[125,0,60,10],[126,0,60,10],[127,0,60,10],[127,29,59,8],[127,30,58,6],[127,32,63,8],[127,61,63,9],[127,78,63,8],[128,0,64,10],[128,10,64,10],[128,15,64,15],[128,17,64,17],[129,0,64,19,"display"],[129,12,64,19,"display"],[129,19,64,26],[129,21,64,28],[129,27,64,17],[130,0,64,36,"flexDirection"],[130,12,64,36,"flexDirection"],[130,25,64,49],[130,27,64,51],[130,32,64,17],[131,0,64,58,"flexWrap"],[131,12,64,58,"flexWrap"],[131,20,64,66],[131,22,64,68],[132,0,64,17],[132,11,63,8],[133,0,63,8],[134,0,63,8],[135,0,63,8],[136,0,63,8],[137,0,63,8],[137,11,66,11],[137,16,66,16,"state"],[137,21,66,11],[137,22,66,22,"locations"],[137,31,66,11],[137,32,66,32,"length"],[137,38,66,11],[137,41,66,41],[137,42,66,11],[137,46,67,12],[137,51,67,17,"state"],[137,56,67,12],[137,57,67,23,"locations"],[137,66,67,12],[137,67,67,33,"map"],[137,70,67,12],[137,71,67,37],[137,81,67,38,"loc"],[137,84,67,37],[137,86,67,43,"key"],[137,89,67,37],[137,91,67,51],[138,0,68,14],[138,17,69,16],[138,46,69,17],[138,63,69,16],[139,0,69,22],[139,12,69,22],[139,17,69,27],[139,19,69,29],[140,0,69,31,"padding"],[140,14,69,31,"padding"],[140,21,69,38],[140,23,69,40],[141,0,69,29],[141,13,69,16],[142,0,69,46],[142,12,69,46],[142,15,69,49],[142,17,69,51,"key"],[142,20,69,16],[143,0,69,16],[144,0,69,16],[145,0,69,16],[146,0,69,16],[147,0,69,16],[147,13,70,18],[147,42,70,19],[147,59,70,18],[148,0,70,18],[149,0,70,18],[150,0,70,18],[151,0,70,18],[152,0,70,18],[152,13,70,25,"loc"],[152,16,70,28],[152,17,70,29,"coords"],[152,23,70,25],[152,24,70,36,"latitude"],[152,32,70,18],[152,33,69,16],[152,35,71,18],[152,64,71,19],[152,81,71,18],[153,0,71,18],[154,0,71,18],[155,0,71,18],[156,0,71,18],[157,0,71,18],[157,13,71,25,"loc"],[157,16,71,28],[157,17,71,29,"coords"],[157,23,71,25],[157,24,71,36,"longitude"],[157,33,71,18],[157,34,69,16],[157,35,68,14],[158,0,74,13],[158,9,67,12],[158,10,63,8],[158,11,58,6],[158,13,76,8],[158,42,76,9],[158,71,76,8],[159,0,76,26],[159,10,76,26],[159,17,76,33],[159,19,76,35],[159,24,76,40,"getDistace"],[159,34,76,8],[160,0,76,8],[161,0,76,8],[162,0,76,8],[163,0,76,8],[164,0,76,8],[164,11,77,10],[164,40,77,11],[164,57,77,10],[165,0,77,16],[165,10,77,16],[165,15,77,21],[165,17,77,23,"styles"],[165,23,77,29],[165,24,77,30,"welcome"],[165,31,77,10],[166,0,77,10],[167,0,77,10],[168,0,77,10],[169,0,77,10],[170,0,77,10],[170,26,76,8],[170,28,78,11],[170,33,78,16,"state"],[170,38,78,11],[170,39,78,22,"distance"],[170,47,78,11],[170,51,78,34],[170,80,78,35],[170,97,78,34],[171,0,78,34],[172,0,78,34],[173,0,78,34],[174,0,78,34],[175,0,78,34],[175,11,78,41],[175,16,78,46,"state"],[175,21,78,41],[175,22,78,52,"distance"],[175,30,78,34],[175,31,76,8],[175,32,58,6],[175,34,80,8],[175,63,80,9],[175,92,80,8],[176,0,80,26],[176,10,80,26],[176,17,80,33],[176,19,80,35],[176,24,80,40,"getArea"],[176,31,80,8],[177,0,80,8],[178,0,80,8],[179,0,80,8],[180,0,80,8],[181,0,80,8],[181,11,81,10],[181,40,81,11],[181,57,81,10],[182,0,81,16],[182,10,81,16],[182,15,81,21],[182,17,81,23,"styles"],[182,23,81,29],[182,24,81,30,"welcome"],[182,31,81,10],[183,0,81,10],[184,0,81,10],[185,0,81,10],[186,0,81,10],[187,0,81,10],[187,22,80,8],[187,24,82,11],[187,29,82,16,"state"],[187,34,82,11],[187,35,82,22,"area"],[187,39,82,11],[187,43,82,30],[187,72,82,31],[187,89,82,30],[188,0,82,30],[189,0,82,30],[190,0,82,30],[191,0,82,30],[192,0,82,30],[192,11,82,37],[192,16,82,42,"state"],[192,21,82,37],[192,22,82,48,"area"],[192,26,82,30],[192,27,80,8],[192,28,58,6],[192,29,57,4],[193,0,86,3],[196,4,5,33,"React"],[196,19,5,39,"Component"],[196,28],[200,0,89,0],[200,6,89,4,"styles"],[200,12,89,10],[200,15,89,13,"StyleSheet"],[200,39,89,24,"create"],[200,45,89,13],[200,46,89,31],[201,0,90,2,"container"],[201,4,90,2,"container"],[201,13,90,11],[201,15,90,13],[202,0,91,4,"flex"],[202,6,91,4,"flex"],[202,10,91,8],[202,12,91,10],[202,13,90,13],[203,0,92,4,"justifyContent"],[203,6,92,4,"justifyContent"],[203,20,92,18],[203,22,92,20],[203,30,90,13],[204,0,93,4,"alignItems"],[204,6,93,4,"alignItems"],[204,16,93,14],[204,18,93,16],[204,26,90,13],[205,0,94,4,"backgroundColor"],[205,6,94,4,"backgroundColor"],[205,21,94,19],[205,23,94,21],[206,0,90,13],[206,5,89,31],[207,0,96,2,"welcome"],[207,4,96,2,"welcome"],[207,11,96,9],[207,13,96,11],[208,0,97,4,"fontSize"],[208,6,97,4,"fontSize"],[208,14,97,12],[208,16,97,14],[208,18,96,11],[209,0,98,4,"textAlign"],[209,6,98,4,"textAlign"],[209,15,98,13],[209,17,98,15],[209,25,96,11],[210,0,99,4,"margin"],[210,6,99,4,"margin"],[210,12,99,10],[210,14,99,12],[211,0,96,11],[212,0,89,31],[212,3,89,13],[212,4,89,0]],"functionMap":{"names":["<global>","App","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render"],"mappings":"AAA;eCI;oBCO;MCE;ODE;MEC,mCF;GDO;eIE;GJe;YKE;+BCG;ODE;GLO;EOC;qCDW;aCO;GPY;CDC"}},"type":"js/module"}]}