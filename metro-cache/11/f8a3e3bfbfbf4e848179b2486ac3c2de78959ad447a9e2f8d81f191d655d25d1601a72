{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"geolib","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var geolib = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"geolib\"));\n\n  var _jsxFileName = \"/var/www/html/NativePractie/MyApp/App.js\";\n\n  var App = function (_React$Component) {\n    (0, _inherits2.default)(App, _React$Component);\n\n    function App() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, App);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        locations: [],\n        area: null,\n        distance: null,\n        initialPosition: \"unknown\",\n        lastPosition: []\n      };\n      _this.watchID = null;\n\n      _this.componentDidMount = function () {\n        _this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var lastPosition = position.coords.latitude + position.coords.longitude;\n          console.log(\"last position\", lastPosition);\n\n          _this.setState({\n            lastPosition: [].concat((0, _toConsumableArray2.default)(_this.state.lastPosition), [lastPosition])\n          }, function (data) {\n            console.log(data);\n          });\n        });\n        console.log(\"this.state\", _this.state.lastPosition);\n      };\n\n      _this.componentWillUnmount = function () {\n        navigator.geolocation.clearWatch(_this.watchID);\n      };\n\n      _this.findCoordinates = function () {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          _this.setState({\n            locations: [].concat((0, _toConsumableArray2.default)(_this.state.locations), [pos])\n          });\n        }, function (error) {\n          return _reactNative.Alert.alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      };\n\n      _this.getDistace = function () {\n        if (_this.state.locations.length == 2) {\n          var cood1 = _this.state.locations[0].coords;\n          var cood2 = _this.state.locations[1].coords;\n          var point1 = {\n            longitude: cood1.longitude,\n            latitude: cood1.latitude\n          };\n          var point2 = {\n            longitude: cood2.longitude,\n            latitude: cood2.latitude\n          };\n          var distance = geolib.getDistance(point1, point2, 0.01);\n          var preciseDistance = geolib.getPreciseDistance(point2, point1, 0.001);\n          console.table({\n            point1: point1,\n            point2: point2,\n            distance: distance,\n            preciseDistance: preciseDistance\n          });\n\n          _this.setState({\n            distance: distance\n          });\n        } else {\n          _reactNative.Alert.alert(\"Two coordinates points required\");\n        }\n      };\n\n      _this.getArea = function () {\n        var myArr = [];\n        _this.state.locations.length > 3 && _this.state.locations.map(function (loc) {\n          myArr.push([loc.coords.latitude, loc.coords.longitude]);\n        });\n        console.log(\"my aary\", myArr);\n\n        if (myArr.length > 3) {\n          var data = geolib.getAreaOfPolygon(myArr);\n\n          _this.setState({\n            area: data\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(App, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.findCoordinates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }, \"Find My Coords?\")), _react.default.createElement(_reactNative.View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          }\n        }, this.state.locations.length > 0 && this.state.locations.map(function (loc, key) {\n          return _react.default.createElement(_reactNative.View, {\n            style: {\n              padding: 10\n            },\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            }\n          }, loc.coords.latitude), _react.default.createElement(_reactNative.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            }\n          }, loc.coords.longitude));\n        })), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getDistace,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          }\n        }, \"Get Distance\"), this.state.distance && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          }\n        }, this.state.distance, \" : meter\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: this.getArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          }\n        }, \"Get area\"), this.state.area && _react.default.createElement(_reactNative.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          }\n        }, this.state.area, \" meter square\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.setState({\n              locations: []\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.welcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          }\n        }, \"Clear all\")));\n      }\n    }]);\n    return App;\n  }(_react.default.Component);\n\n  exports.default = App;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#F5FCFF\"\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: \"center\",\n      margin: 10\n    }\n  });\n});","lineCount":260,"map":[[23,0,1,0],[25,0,2,0],[27,0,3,0],[31,6,5,21,"App"],[31,9],[46,12,6,2,"state"],[46,17],[46,20,6,10],[47,0,7,4,"locations"],[47,8,7,4,"locations"],[47,17,7,13],[47,19,7,15],[47,21,6,10],[48,0,8,4,"area"],[48,8,8,4,"area"],[48,12,8,8],[48,14,8,10],[48,18,6,10],[49,0,9,4,"distance"],[49,8,9,4,"distance"],[49,16,9,12],[49,18,9,14],[49,22,6,10],[50,0,10,4,"initialPosition"],[50,8,10,4,"initialPosition"],[50,23,10,19],[50,25,10,21],[50,34,6,10],[51,0,11,4,"lastPosition"],[51,8,11,4,"lastPosition"],[51,20,11,16],[51,22,11,18],[52,0,6,10],[52,7],[53,12,14,2,"watchID"],[53,19],[53,22,14,12],[53,26],[55,12,15,2,"componentDidMount"],[55,29],[55,32,15,22],[55,44,15,28],[56,0,28,4],[56,14,28,9,"watchID"],[56,21,28,4],[56,24,28,19,"navigator"],[56,33,28,28],[56,34,28,29,"geolocation"],[56,45,28,19],[56,46,28,41,"watchPosition"],[56,59,28,19],[56,60,28,55],[56,70,28,55,"position"],[56,78,28,63],[56,80,28,67],[57,0,30,6],[57,14,30,10,"lastPosition"],[57,26,30,22],[57,29,30,25,"position"],[57,37,30,33],[57,38,30,34,"coords"],[57,44,30,25],[57,45,30,41,"latitude"],[57,53,30,25],[57,56,30,52,"position"],[57,64,30,60],[57,65,30,61,"coords"],[57,71,30,52],[57,72,30,68,"longitude"],[57,81,30,6],[58,0,31,6,"console"],[58,10,31,6,"console"],[58,17,31,13],[58,18,31,14,"log"],[58,21,31,6],[58,22,31,18],[58,37,31,6],[58,39,31,35,"lastPosition"],[58,51,31,6],[60,0,32,6],[60,16,32,11,"setState"],[60,24,32,6],[60,25,33,8],[61,0,34,10,"lastPosition"],[61,12,34,10,"lastPosition"],[61,24,34,22],[61,69,34,28],[61,75,34,33,"state"],[61,80,34,28],[61,81,34,39,"lastPosition"],[61,93,34,22],[61,97,34,53,"lastPosition"],[61,109,34,22],[62,0,33,8],[62,11,32,6],[62,13,36,8],[62,23,36,8,"data"],[62,27,36,12],[62,29,36,16],[63,0,37,10,"console"],[63,12,37,10,"console"],[63,19,37,17],[63,20,37,18,"log"],[63,23,37,10],[63,24,37,22,"data"],[63,28,37,10],[64,0,38,9],[64,11,32,6],[65,0,40,5],[65,9,28,19],[65,10,28,4],[66,0,41,4,"console"],[66,8,41,4,"console"],[66,15,41,11],[66,16,41,12,"log"],[66,19,41,4],[66,20,41,16],[66,32,41,4],[66,34,41,30],[66,40,41,35,"state"],[66,45,41,30],[66,46,41,41,"lastPosition"],[66,58,41,4],[67,0,42,3],[67,7],[69,12,43,2,"componentWillUnmount"],[69,32],[69,35,43,25],[69,47,43,31],[70,0,44,4,"navigator"],[70,8,44,4,"navigator"],[70,17,44,13],[70,18,44,14,"geolocation"],[70,29,44,4],[70,30,44,26,"clearWatch"],[70,40,44,4],[70,41,44,37],[70,47,44,42,"watchID"],[70,54,44,4],[71,0,45,3],[71,7],[73,12,47,2,"findCoordinates"],[73,27],[73,30,47,20],[73,42,47,26],[74,0,48,4,"navigator"],[74,8,48,4,"navigator"],[74,17,48,13],[74,18,48,14,"geolocation"],[74,29,48,4],[74,30,48,26,"getCurrentPosition"],[74,48,48,4],[74,49,49,6],[74,59,49,6,"pos"],[74,62,49,9],[74,64,49,13],[75,0,50,8],[75,16,50,13,"setState"],[75,24,50,8],[75,25,50,22],[76,0,51,10,"locations"],[76,12,51,10,"locations"],[76,21,51,19],[76,66,51,25],[76,72,51,30,"state"],[76,77,51,25],[76,78,51,36,"locations"],[76,87,51,19],[76,91,51,47,"pos"],[76,94,51,19],[77,0,50,22],[77,11,50,8],[78,0,53,7],[78,9,48,4],[78,11,54,6],[78,21,54,6,"error"],[78,26,54,11],[79,0,54,11],[79,17,54,15,"Alert"],[79,36,54,21,"alert"],[79,41,54,15],[79,42,54,27,"error"],[79,47,54,32],[79,48,54,33,"message"],[79,55,54,15],[79,56,54,11],[80,0,54,11],[80,9,48,4],[80,11,55,6],[81,0,56,8,"enableHighAccuracy"],[81,10,56,8,"enableHighAccuracy"],[81,28,56,26],[81,30,56,28],[81,34,55,6],[82,0,57,8,"timeout"],[82,10,57,8,"timeout"],[82,17,57,15],[82,19,57,17],[82,24,55,6],[83,0,58,8,"maximumAge"],[83,10,58,8,"maximumAge"],[83,20,58,18],[83,22,58,20],[84,0,55,6],[84,9,48,4],[85,0,61,3],[85,7],[87,12,63,2,"getDistace"],[87,22],[87,25,63,15],[87,37,63,21],[88,0,64,4],[88,12,64,8],[88,18,64,13,"state"],[88,23,64,8],[88,24,64,19,"locations"],[88,33,64,8],[88,34,64,29,"length"],[88,40,64,8],[88,44,64,39],[88,45,64,4],[88,47,64,42],[89,0,65,6],[89,14,65,10,"cood1"],[89,19,65,15],[89,22,65,18],[89,28,65,23,"state"],[89,33,65,18],[89,34,65,29,"locations"],[89,43,65,18],[89,44,65,39],[89,45,65,18],[89,47,65,42,"coords"],[89,53,65,6],[90,0,66,6],[90,14,66,10,"cood2"],[90,19,66,15],[90,22,66,18],[90,28,66,23,"state"],[90,33,66,18],[90,34,66,29,"locations"],[90,43,66,18],[90,44,66,39],[90,45,66,18],[90,47,66,42,"coords"],[90,53,66,6],[91,0,68,6],[91,14,68,10,"point1"],[91,20,68,16],[91,23,68,19],[92,0,69,8,"longitude"],[92,12,69,8,"longitude"],[92,21,69,17],[92,23,69,19,"cood1"],[92,28,69,24],[92,29,69,25,"longitude"],[92,38,68,19],[93,0,70,8,"latitude"],[93,12,70,8,"latitude"],[93,20,70,16],[93,22,70,18,"cood1"],[93,27,70,23],[93,28,70,24,"latitude"],[94,0,68,19],[94,11,68,6],[95,0,72,6],[95,14,72,10,"point2"],[95,20,72,16],[95,23,72,19],[96,0,73,8,"longitude"],[96,12,73,8,"longitude"],[96,21,73,17],[96,23,73,19,"cood2"],[96,28,73,24],[96,29,73,25,"longitude"],[96,38,72,19],[97,0,74,8,"latitude"],[97,12,74,8,"latitude"],[97,20,74,16],[97,22,74,18,"cood2"],[97,27,74,23],[97,28,74,24,"latitude"],[98,0,72,19],[98,11,72,6],[99,0,77,6],[99,14,77,10,"distance"],[99,22,77,18],[99,25,77,21,"geolib"],[99,31,77,27],[99,32,77,28,"getDistance"],[99,43,77,21],[99,44,77,40,"point1"],[99,50,77,21],[99,52,77,48,"point2"],[99,58,77,21],[99,60,77,56],[99,64,77,21],[99,65,77,6],[100,0,78,6],[100,14,78,10,"preciseDistance"],[100,29,78,25],[100,32,78,28,"geolib"],[100,38,78,34],[100,39,78,35,"getPreciseDistance"],[100,57,78,28],[100,58,78,54,"point2"],[100,64,78,28],[100,66,78,62,"point1"],[100,72,78,28],[100,74,78,70],[100,79,78,28],[100,80,78,6],[101,0,79,6,"console"],[101,10,79,6,"console"],[101,17,79,13],[101,18,79,14,"table"],[101,23,79,6],[101,24,79,20],[102,0,80,8,"point1"],[102,12,80,8,"point1"],[102,18,80,14],[102,20,80,8,"point1"],[102,26,79,20],[103,0,81,8,"point2"],[103,12,81,8,"point2"],[103,18,81,14],[103,20,81,8,"point2"],[103,26,79,20],[104,0,82,8,"distance"],[104,12,82,8,"distance"],[104,20,82,16],[104,22,82,8,"distance"],[104,30,79,20],[105,0,83,8,"preciseDistance"],[105,12,83,8,"preciseDistance"],[105,27,83,23],[105,29,83,8,"preciseDistance"],[106,0,79,20],[106,11,79,6],[108,0,85,6],[108,16,85,11,"setState"],[108,24,85,6],[108,25,85,20],[109,0,85,22,"distance"],[109,12,85,22,"distance"],[109,20,85,30],[109,22,85,22,"distance"],[110,0,85,20],[110,11,85,6],[111,0,86,5],[111,9,64,4],[111,15,86,11],[112,0,87,6,"Alert"],[112,29,87,12,"alert"],[112,34,87,6],[112,35,87,18],[112,68,87,6],[113,0,88,5],[114,0,89,3],[114,7],[116,12,91,2,"getArea"],[116,19],[116,22,91,12],[116,34,91,18],[117,0,92,4],[117,12,92,8,"myArr"],[117,17,92,13],[117,20,92,16],[117,22,92,4],[118,0,93,4],[118,14,93,9,"state"],[118,19,93,4],[118,20,93,15,"locations"],[118,29,93,4],[118,30,93,25,"length"],[118,36,93,4],[118,39,93,34],[118,40,93,4],[118,44,94,6],[118,50,94,11,"state"],[118,55,94,6],[118,56,94,17,"locations"],[118,65,94,6],[118,66,94,27,"map"],[118,69,94,6],[118,70,94,31],[118,80,94,31,"loc"],[118,83,94,34],[118,85,94,38],[119,0,95,8,"myArr"],[119,10,95,8,"myArr"],[119,15,95,13],[119,16,95,14,"push"],[119,20,95,8],[119,21,95,19],[119,22,95,20,"loc"],[119,25,95,23],[119,26,95,24,"coords"],[119,32,95,20],[119,33,95,31,"latitude"],[119,41,95,19],[119,43,95,41,"loc"],[119,46,95,44],[119,47,95,45,"coords"],[119,53,95,41],[119,54,95,52,"longitude"],[119,63,95,19],[119,64,95,8],[120,0,96,7],[120,9,94,6],[120,10,93,4],[121,0,97,4,"console"],[121,8,97,4,"console"],[121,15,97,11],[121,16,97,12,"log"],[121,19,97,4],[121,20,97,16],[121,29,97,4],[121,31,97,27,"myArr"],[121,36,97,4],[123,0,98,4],[123,12,98,8,"myArr"],[123,17,98,13],[123,18,98,14,"length"],[123,24,98,8],[123,27,98,23],[123,28,98,4],[123,30,98,26],[124,0,99,6],[124,14,99,10,"data"],[124,18,99,14],[124,21,99,17,"geolib"],[124,27,99,23],[124,28,99,24,"getAreaOfPolygon"],[124,44,99,17],[124,45,99,41,"myArr"],[124,50,99,17],[124,51,99,6],[126,0,101,6],[126,16,101,11,"setState"],[126,24,101,6],[126,25,101,20],[127,0,101,22,"area"],[127,12,101,22,"area"],[127,16,101,26],[127,18,101,28,"data"],[128,0,101,20],[128,11,101,6],[129,0,102,5],[130,0,103,3],[130,7],[137,31,104,11],[138,0,104,11],[140,0,105,4],[140,15,106,6],[140,44,106,7],[140,61,106,6],[141,0,106,12],[141,10,106,12],[141,15,106,17],[141,17,106,19,"styles"],[141,23,106,25],[141,24,106,26,"container"],[141,33,106,6],[142,0,106,6],[143,0,106,6],[144,0,106,6],[145,0,106,6],[146,0,106,6],[146,11,107,8],[146,40,107,9],[146,69,107,8],[147,0,107,26],[147,10,107,26],[147,17,107,33],[147,19,107,35],[147,24,107,40,"findCoordinates"],[147,39,107,8],[148,0,107,8],[149,0,107,8],[150,0,107,8],[151,0,107,8],[152,0,107,8],[152,11,108,10],[152,40,108,11],[152,57,108,10],[153,0,108,16],[153,10,108,16],[153,15,108,21],[153,17,108,23,"styles"],[153,23,108,29],[153,24,108,30,"welcome"],[153,31,108,10],[154,0,108,10],[155,0,108,10],[156,0,108,10],[157,0,108,10],[158,0,108,10],[158,29,107,8],[158,30,106,6],[158,32,111,8],[158,61,111,9],[158,78,111,8],[159,0,112,10],[159,10,112,10],[159,15,112,15],[159,17,112,17],[160,0,113,12,"display"],[160,12,113,12,"display"],[160,19,113,19],[160,21,113,21],[160,27,112,17],[161,0,114,12,"flexDirection"],[161,12,114,12,"flexDirection"],[161,25,114,25],[161,27,114,27],[161,32,112,17],[162,0,115,12,"flexWrap"],[162,12,115,12,"flexWrap"],[162,20,115,20],[162,22,115,22],[163,0,112,17],[163,11,111,8],[164,0,111,8],[165,0,111,8],[166,0,111,8],[167,0,111,8],[168,0,111,8],[168,11,118,11],[168,16,118,16,"state"],[168,21,118,11],[168,22,118,22,"locations"],[168,31,118,11],[168,32,118,32,"length"],[168,38,118,11],[168,41,118,41],[168,42,118,11],[168,46,119,12],[168,51,119,17,"state"],[168,56,119,12],[168,57,119,23,"locations"],[168,66,119,12],[168,67,119,33,"map"],[168,70,119,12],[168,71,119,37],[168,81,119,38,"loc"],[168,84,119,37],[168,86,119,43,"key"],[168,89,119,37],[168,91,119,51],[169,0,120,14],[169,17,121,16],[169,46,121,17],[169,63,121,16],[170,0,121,22],[170,12,121,22],[170,17,121,27],[170,19,121,29],[171,0,121,31,"padding"],[171,14,121,31,"padding"],[171,21,121,38],[171,23,121,40],[172,0,121,29],[172,13,121,16],[173,0,121,46],[173,12,121,46],[173,15,121,49],[173,17,121,51,"key"],[173,20,121,16],[174,0,121,16],[175,0,121,16],[176,0,121,16],[177,0,121,16],[178,0,121,16],[178,13,122,18],[178,42,122,19],[178,59,122,18],[179,0,122,18],[180,0,122,18],[181,0,122,18],[182,0,122,18],[183,0,122,18],[183,13,122,25,"loc"],[183,16,122,28],[183,17,122,29,"coords"],[183,23,122,25],[183,24,122,36,"latitude"],[183,32,122,18],[183,33,121,16],[183,35,123,18],[183,64,123,19],[183,81,123,18],[184,0,123,18],[185,0,123,18],[186,0,123,18],[187,0,123,18],[188,0,123,18],[188,13,123,25,"loc"],[188,16,123,28],[188,17,123,29,"coords"],[188,23,123,25],[188,24,123,36,"longitude"],[188,33,123,18],[188,34,121,16],[188,35,120,14],[189,0,126,13],[189,9,119,12],[189,10,111,8],[189,11,106,6],[189,13,128,8],[189,42,128,9],[189,71,128,8],[190,0,128,26],[190,10,128,26],[190,17,128,33],[190,19,128,35],[190,24,128,40,"getDistace"],[190,34,128,8],[191,0,128,8],[192,0,128,8],[193,0,128,8],[194,0,128,8],[195,0,128,8],[195,11,129,10],[195,40,129,11],[195,57,129,10],[196,0,129,16],[196,10,129,16],[196,15,129,21],[196,17,129,23,"styles"],[196,23,129,29],[196,24,129,30,"welcome"],[196,31,129,10],[197,0,129,10],[198,0,129,10],[199,0,129,10],[200,0,129,10],[201,0,129,10],[201,26,128,8],[201,28,130,11],[201,33,130,16,"state"],[201,38,130,11],[201,39,130,22,"distance"],[201,47,130,11],[201,51,130,34],[201,80,130,35],[201,97,130,34],[202,0,130,34],[203,0,130,34],[204,0,130,34],[205,0,130,34],[206,0,130,34],[206,11,130,41],[206,16,130,46,"state"],[206,21,130,41],[206,22,130,52,"distance"],[206,30,130,34],[206,43,128,8],[206,44,106,6],[206,46,132,8],[206,75,132,9],[206,104,132,8],[207,0,132,26],[207,10,132,26],[207,17,132,33],[207,19,132,35],[207,24,132,40,"getArea"],[207,31,132,8],[208,0,132,8],[209,0,132,8],[210,0,132,8],[211,0,132,8],[212,0,132,8],[212,11,133,10],[212,40,133,11],[212,57,133,10],[213,0,133,16],[213,10,133,16],[213,15,133,21],[213,17,133,23,"styles"],[213,23,133,29],[213,24,133,30,"welcome"],[213,31,133,10],[214,0,133,10],[215,0,133,10],[216,0,133,10],[217,0,133,10],[218,0,133,10],[218,22,132,8],[218,24,134,11],[218,29,134,16,"state"],[218,34,134,11],[218,35,134,22,"area"],[218,39,134,11],[218,43,134,30],[218,72,134,31],[218,89,134,30],[219,0,134,30],[220,0,134,30],[221,0,134,30],[222,0,134,30],[223,0,134,30],[223,11,134,37],[223,16,134,42,"state"],[223,21,134,37],[223,22,134,48,"area"],[223,26,134,30],[223,44,132,8],[223,45,106,6],[223,47,137,8],[223,76,137,9],[223,105,137,8],[224,0,138,10],[224,10,138,10],[224,17,138,17],[224,19,138,19],[224,38,138,25],[225,0,139,12],[225,12,139,12],[225,18,139,16],[225,19,139,17,"setState"],[225,27,139,12],[225,28,139,26],[226,0,139,28,"locations"],[226,14,139,28,"locations"],[226,23,139,37],[226,25,139,39],[227,0,139,26],[227,13,139,12],[228,0,140,11],[228,11,137,8],[229,0,137,8],[230,0,137,8],[231,0,137,8],[232,0,137,8],[233,0,137,8],[233,11,142,10],[233,40,142,11],[233,57,142,10],[234,0,142,16],[234,10,142,16],[234,15,142,21],[234,17,142,23,"styles"],[234,23,142,29],[234,24,142,30,"welcome"],[234,31,142,10],[235,0,142,10],[236,0,142,10],[237,0,142,10],[238,0,142,10],[239,0,142,10],[239,23,137,8],[239,24,106,6],[239,25,105,4],[240,0,146,3],[243,4,5,33,"React"],[243,19,5,39,"Component"],[243,28],[247,0,149,0],[247,6,149,4,"styles"],[247,12,149,10],[247,15,149,13,"StyleSheet"],[247,39,149,24,"create"],[247,45,149,13],[247,46,149,31],[248,0,150,2,"container"],[248,4,150,2,"container"],[248,13,150,11],[248,15,150,13],[249,0,151,4,"flex"],[249,6,151,4,"flex"],[249,10,151,8],[249,12,151,10],[249,13,150,13],[250,0,152,4,"justifyContent"],[250,6,152,4,"justifyContent"],[250,20,152,18],[250,22,152,20],[250,30,150,13],[251,0,153,4,"alignItems"],[251,6,153,4,"alignItems"],[251,16,153,14],[251,18,153,16],[251,26,150,13],[252,0,154,4,"backgroundColor"],[252,6,154,4,"backgroundColor"],[252,21,154,19],[252,23,154,21],[253,0,150,13],[253,5,149,31],[254,0,156,2,"welcome"],[254,4,156,2,"welcome"],[254,11,156,9],[254,13,156,11],[255,0,157,4,"fontSize"],[255,6,157,4,"fontSize"],[255,14,157,12],[255,16,157,14],[255,18,156,11],[256,0,158,4,"textAlign"],[256,6,158,4,"textAlign"],[256,15,158,13],[256,17,158,15],[256,25,156,11],[257,0,159,4,"margin"],[257,6,159,4,"margin"],[257,12,159,10],[257,14,159,12],[258,0,156,11],[259,0,149,31],[259,3,149,13],[259,4,149,0]],"functionMap":{"names":["<global>","App","componentDidMount","navigator.geolocation.watchPosition$argument_0","setState$argument_1","componentWillUnmount","findCoordinates","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","getDistace","getArea","state.locations.map$argument_0","render","TouchableOpacity.props.onPress"],"mappings":"AAA;eCI;sBCU;uDCa;QCQ;SDE;KDE;GDE;yBIC;GJE;oBKE;MCE;ODI;MEC,mCF;GLO;eQE;GR0B;YSE;+BCG;ODE;GTO;EWC;qCDe;aCO;mBCY;WDE;GXM;CDC"}},"type":"js/module"}]}